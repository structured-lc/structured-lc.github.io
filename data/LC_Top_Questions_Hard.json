[
    {"number": 238, "slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "minimum-difference-in-sums-after-removal-of-elements", "title": "Minimum Difference in Sums After Removal of Elements", "difficulty": "Hard"}, {"slug": "construct-product-matrix", "title": "Construct Product Matrix", "difficulty": "Medium"}, {"slug": "find-sum-of-array-product-of-magical-sequences", "title": "Find Sum of Array Product of Magical Sequences", "difficulty": "Hard"}]},
    {"number": 54, "slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 454, "slug": "4sum-ii", "title": "4Sum II", "difficulty": "Medium", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}]},
    {"number": 11, "slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}]},
    {"number": 289, "slug": "game-of-life", "title": "Game of Life", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}]},
    {"number": 41, "slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}, {"slug": "smallest-number-in-infinite-set", "title": "Smallest Number in Infinite Set", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium"}, {"slug": "smallest-missing-non-negative-integer-after-operations", "title": "Smallest Missing Non-negative Integer After Operations", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}, {"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}]},
    {"number": 128, "slug": "longest-consecutive-sequence", "title": "Longest Consecutive Sequence", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Union Find"], "similar_problems": [{"slug": "binary-tree-longest-consecutive-sequence", "title": "Binary Tree Longest Consecutive Sequence", "difficulty": "Medium"}, {"slug": "find-three-consecutive-integers-that-sum-to-a-given-number", "title": "Find Three Consecutive Integers That Sum to a Given Number", "difficulty": "Medium"}, {"slug": "maximum-consecutive-floors-without-special-floors", "title": "Maximum Consecutive Floors Without Special Floors", "difficulty": "Medium"}, {"slug": "length-of-the-longest-alphabetical-continuous-substring", "title": "Length of the Longest Alphabetical Continuous Substring", "difficulty": "Medium"}, {"slug": "find-the-maximum-number-of-elements-in-subset", "title": "Find the Maximum Number of Elements in Subset", "difficulty": "Medium"}]},
    {"number": 287, "slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Bit Manipulation"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "set-mismatch", "title": "Set Mismatch", "difficulty": "Easy"}]},
    {"number": 340, "slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}]},
    {"number": 227, "slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium", "tags": ["Math", "String", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}]},
    {"number": 239, "slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard", "tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}, {"slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "jump-game-vi", "title": "Jump Game VI", "difficulty": "Medium"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "maximal-score-after-applying-k-operations", "title": "Maximal Score After Applying K Operations", "difficulty": "Medium"}]},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard"}, {"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}, {"slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 148, "slug": "sort-list", "title": "Sort List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Divide and Conquer", "Sorting", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium"}, {"slug": "insertion-sort-list", "title": "Insertion Sort List", "difficulty": "Medium"}, {"slug": "sort-linked-list-already-sorted-using-absolute-values", "title": "Sort Linked List Already Sorted Using Absolute Values", "difficulty": "Medium"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 130, "slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}]},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "find-players-with-zero-or-one-losses", "title": "Find Players With Zero or One Losses", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 124, "slug": "binary-tree-maximum-path-sum", "title": "Binary Tree Maximum Path Sum", "difficulty": "Hard", "tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum", "title": "Path Sum", "difficulty": "Easy"}, {"slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"}, {"slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "difference-between-maximum-and-minimum-price-sum", "title": "Difference Between Maximum and Minimum Price Sum", "difficulty": "Hard"}]},
    {"number": 547, "slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy"}, {"slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy"}, {"slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium"}, {"slug": "the-earliest-moment-when-everyone-become-friends", "title": "The Earliest Moment When Everyone Become Friends", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}]},
    {"number": 207, "slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "graph-valid-tree", "title": "Graph Valid Tree", "difficulty": "Medium"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}]},
    {"number": 210, "slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "sequence-reconstruction", "title": "Sequence Reconstruction", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "parallel-courses", "title": "Parallel Courses", "difficulty": "Medium"}, {"slug": "find-all-possible-recipes-from-given-supplies", "title": "Find All Possible Recipes from Given Supplies", "difficulty": "Medium"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 329, "slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 269, "slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}]},
    {"number": 315, "slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}, {"slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard"}]},
    {"number": 131, "slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 212, "slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "similar_problems": [{"slug": "word-search", "title": "Word Search", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 301, "slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard", "tags": ["String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 44, "slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"], "similar_problems": [{"slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard"}, {"slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy"}]},
    {"number": 10, "slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 324, "slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Greedy", "Sorting", "Quickselect"], "similar_problems": [{"slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium"}, {"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium"}, {"slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium"}]},
    {"number": 378, "slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "find-k-pairs-with-smallest-sums", "title": "Find K Pairs with Smallest Sums", "difficulty": "Medium"}, {"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium"}]},
    {"number": 4, "slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer"], "similar_problems": [{"slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium"}]},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 91, "slug": "decode-ways", "title": "Decode Ways", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "decode-ways-ii", "title": "Decode Ways II", "difficulty": "Hard"}, {"slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}]},
    {"number": 309, "slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}]},
    {"number": 279, "slug": "perfect-squares", "title": "Perfect Squares", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Breadth-First Search"], "similar_problems": [{"slug": "count-primes", "title": "Count Primes", "difficulty": "Medium"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "ways-to-express-an-integer-as-sum-of-powers", "title": "Ways to Express an Integer as Sum of Powers", "difficulty": "Medium"}]},
    {"number": 139, "slug": "word-break", "title": "Word Break", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard"}, {"slug": "extra-characters-in-a-string", "title": "Extra Characters in a String", "difficulty": "Medium"}]},
    {"number": 140, "slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Backtracking", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break", "title": "Word Break", "difficulty": "Medium"}, {"slug": "concatenated-words", "title": "Concatenated Words", "difficulty": "Hard"}]},
    {"number": 312, "slug": "burst-balloons", "title": "Burst Balloons", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-cost-to-merge-stones", "title": "Minimum Cost to Merge Stones", "difficulty": "Hard"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 208, "slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard"}, {"slug": "replace-words", "title": "Replace Words", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 341, "slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium", "tags": ["Stack", "Tree", "Depth-First Search", "Design", "Queue", "Iterator"], "similar_problems": [{"slug": "flatten-2d-vector", "title": "Flatten 2D Vector", "difficulty": "Medium"}, {"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"}, {"slug": "array-nesting", "title": "Array Nesting", "difficulty": "Medium"}]},
    {"number": 295, "slug": "find-median-from-data-stream", "title": "Find Median from Data Stream", "difficulty": "Hard", "tags": ["Two Pointers", "Design", "Sorting", "Heap (Priority Queue)", "Data Stream"], "similar_problems": [{"slug": "sliding-window-median", "title": "Sliding Window Median", "difficulty": "Hard"}, {"slug": "finding-mk-average", "title": "Finding MK Average", "difficulty": "Hard"}, {"slug": "sequentially-ordinal-rank-tracker", "title": "Sequentially Ordinal Rank Tracker", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-median-of-array-equal-to-k", "title": "Minimum Operations to Make Median of Array Equal to K", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-subarray-elements-equal", "title": "Minimum Operations to Make Subarray Elements Equal", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-elements-within-k-subarrays-equal", "title": "Minimum Operations to Make Elements Within K Subarrays Equal", "difficulty": "Hard"}]},
    {"number": 308, "slug": "range-sum-query-2d-mutable", "title": "Range Sum Query 2D - Mutable", "difficulty": "Medium", "tags": ["Array", "Design", "Binary Indexed Tree", "Segment Tree", "Matrix"], "similar_problems": [{"slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium"}, {"slug": "range-sum-query-mutable", "title": "Range Sum Query - Mutable", "difficulty": "Medium"}, {"slug": "increment-submatrices-by-one", "title": "Increment Submatrices by One", "difficulty": "Medium"}, {"slug": "sum-of-matrix-after-queries", "title": "Sum of Matrix After Queries", "difficulty": "Medium"}]},
    {"number": 179, "slug": "largest-number", "title": "Largest Number", "difficulty": "Medium", "tags": ["Array", "String", "Greedy", "Sorting"], "similar_problems": [{"slug": "smallest-value-of-the-rearranged-number", "title": "Smallest Value of the Rearranged Number", "difficulty": "Medium"}, {"slug": "find-the-key-of-the-numbers", "title": "Find the Key of the Numbers", "difficulty": "Easy"}]},
    {"number": 149, "slug": "max-points-on-a-line", "title": "Max Points on a Line", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Math", "Geometry"], "similar_problems": [{"slug": "line-reflection", "title": "Line Reflection", "difficulty": "Medium"}, {"slug": "minimum-number-of-lines-to-cover-points", "title": "Minimum Number of Lines to Cover Points", "difficulty": "Medium"}, {"slug": "minimum-lines-to-represent-a-line-chart", "title": "Minimum Lines to Represent a Line Chart", "difficulty": "Medium"}, {"slug": "count-special-subsequences", "title": "Count Special Subsequences", "difficulty": "Medium"}]},
    {"number": 406, "slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium", "tags": ["Array", "Binary Indexed Tree", "Segment Tree", "Sorting"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "reward-top-k-students", "title": "Reward Top K Students", "difficulty": "Medium"}]},
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "pour-water", "title": "Pour Water", "difficulty": "Medium"}, {"slug": "maximum-value-of-an-ordered-triplet-ii", "title": "Maximum Value of an Ordered Triplet II", "difficulty": "Medium"}]},
    {"number": 218, "slug": "the-skyline-problem", "title": "The Skyline Problem", "difficulty": "Hard", "tags": ["Array", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Line Sweep", "Sorting", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "falling-squares", "title": "Falling Squares", "difficulty": "Hard"}, {"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}]},
    {"number": 84, "slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}, {"slug": "maximum-score-of-a-good-subarray", "title": "Maximum Score of a Good Subarray", "difficulty": "Hard"}]}
]