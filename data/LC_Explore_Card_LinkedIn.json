[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"},
    {"number": 65, "slug": "valid-number", "title": "Valid Number", "difficulty": "Hard"},
    {"number": 68, "slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"},
    {"number": 243, "slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy"},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard"},
    {"number": 277, "slug": "find-the-celebrity", "title": "Find the Celebrity", "difficulty": "Medium"},
    {"number": 605, "slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy"},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy"},
    {"number": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"},
    {"number": 156, "slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"},
    {"number": 235, "slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Easy"},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"},
    {"number": 272, "slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"},
    {"number": 366, "slug": "find-leaves-of-binary-tree", "title": "Find Leaves of Binary Tree", "difficulty": "Medium"},
    {"number": 671, "slug": "second-minimum-node-in-a-binary-tree", "title": "Second Minimum Node In a Binary Tree", "difficulty": "Easy"},
    {"number": 39, "slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"},
    {"number": 46, "slug": "permutations", "title": "Permutations", "difficulty": "Medium"},
    {"number": 47, "slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium"},
    {"number": 254, "slug": "factor-combinations", "title": "Factor Combinations", "difficulty": "Medium"},
    {"number": 339, "slug": "nested-list-weight-sum", "title": "Nested List Weight Sum", "difficulty": "Medium"},
    {"number": 364, "slug": "nested-list-weight-sum-ii", "title": "Nested List Weight Sum II", "difficulty": "Medium"},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"},
    {"number": 150, "slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"},
    {"number": 636, "slug": "exclusive-time-of-functions", "title": "Exclusive Time of Functions", "difficulty": "Medium"},
    {"number": 33, "slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"},
    {"number": 50, "slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"},
    {"number": 69, "slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"},
    {"number": 528, "slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium"},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"},
    {"number": 72, "slug": "edit-distance", "title": "Edit Distance", "difficulty": "Hard"},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"},
    {"number": 256, "slug": "paint-house", "title": "Paint House", "difficulty": "Medium"},
    {"number": 265, "slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"},
    {"number": 698, "slug": "partition-to-k-equal-sum-subsets", "title": "Partition to K Equal Sum Subsets", "difficulty": "Medium"},
    {"number": 170, "slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"},
    {"number": 244, "slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"},
    {"number": 341, "slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium"},
    {"number": 380, "slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium"},
    {"number": 432, "slug": "all-oone-data-structure", "title": "All O`one Data Structure", "difficulty": "Hard"},
    {"number": 716, "slug": "max-stack", "title": "Max Stack", "difficulty": "Hard"},
    {"number": 706, "slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy"}
]