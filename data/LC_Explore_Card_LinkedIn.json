[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 65, "slug": "valid-number", "title": "Valid Number", "difficulty": "Hard", "tags": ["String"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}]},
    {"number": 68, "slug": "text-justification", "title": "Text Justification", "difficulty": "Hard", "tags": ["Array", "String", "Simulation"], "similar_problems": [{"slug": "rearrange-spaces-between-words", "title": "Rearrange Spaces Between Words", "difficulty": "Easy"}, {"slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard"}, {"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}, {"slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium"}]},
    {"number": 243, "slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}]},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard", "tags": ["Math", "String", "Recursion"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 277, "slug": "find-the-celebrity", "title": "Find the Celebrity", "difficulty": "Medium", "tags": ["Two Pointers", "Graph", "Interactive"], "similar_problems": [{"slug": "find-the-town-judge", "title": "Find the Town Judge", "difficulty": "Easy"}]},
    {"number": 605, "slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}]},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"}, {"slug": "binary-tree-level-order-traversal-ii", "title": "Binary Tree Level Order Traversal II", "difficulty": "Medium"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "binary-tree-vertical-order-traversal", "title": "Binary Tree Vertical Order Traversal", "difficulty": "Medium"}, {"slug": "average-of-levels-in-binary-tree", "title": "Average of Levels in Binary Tree", "difficulty": "Easy"}, {"slug": "n-ary-tree-level-order-traversal", "title": "N-ary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "cousins-in-binary-tree", "title": "Cousins in Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level", "title": "Minimum Number of Operations to Sort a Binary Tree by Level", "difficulty": "Medium"}, {"slug": "divide-nodes-into-the-maximum-number-of-groups", "title": "Divide Nodes Into the Maximum Number of Groups", "difficulty": "Hard"}]},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 156, "slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 235, "slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}]},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "find-players-with-zero-or-one-losses", "title": "Find Players With Zero or One Losses", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 272, "slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard", "tags": ["Two Pointers", "Stack", "Tree", "Depth-First Search", "Binary Search Tree", "Heap (Priority Queue)", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 366, "slug": "find-leaves-of-binary-tree", "title": "Find Leaves of Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 671, "slug": "second-minimum-node-in-a-binary-tree", "title": "Second Minimum Node In a Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"}]},
    {"number": 39, "slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "combination-sum-ii", "title": "Combination Sum II", "difficulty": "Medium"}, {"slug": "combinations", "title": "Combinations", "difficulty": "Medium"}, {"slug": "combination-sum-iii", "title": "Combination Sum III", "difficulty": "Medium"}, {"slug": "factor-combinations", "title": "Factor Combinations", "difficulty": "Medium"}, {"slug": "combination-sum-iv", "title": "Combination Sum IV", "difficulty": "Medium"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 46, "slug": "permutations", "title": "Permutations", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}, {"slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium"}, {"slug": "permutation-sequence", "title": "Permutation Sequence", "difficulty": "Hard"}, {"slug": "combinations", "title": "Combinations", "difficulty": "Medium"}]},
    {"number": 47, "slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Sorting"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}, {"slug": "permutations", "title": "Permutations", "difficulty": "Medium"}, {"slug": "palindrome-permutation-ii", "title": "Palindrome Permutation II", "difficulty": "Medium"}, {"slug": "number-of-squareful-arrays", "title": "Number of Squareful Arrays", "difficulty": "Hard"}]},
    {"number": 254, "slug": "factor-combinations", "title": "Factor Combinations", "difficulty": "Medium", "tags": ["Backtracking"], "similar_problems": [{"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}]},
    {"number": 339, "slug": "nested-list-weight-sum", "title": "Nested List Weight Sum", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "nested-list-weight-sum-ii", "title": "Nested List Weight Sum II", "difficulty": "Medium"}, {"slug": "array-nesting", "title": "Array Nesting", "difficulty": "Medium"}, {"slug": "employee-importance", "title": "Employee Importance", "difficulty": "Medium"}]},
    {"number": 364, "slug": "nested-list-weight-sum-ii", "title": "Nested List Weight Sum II", "difficulty": "Medium", "tags": ["Stack", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "nested-list-weight-sum", "title": "Nested List Weight Sum", "difficulty": "Medium"}, {"slug": "array-nesting", "title": "Array Nesting", "difficulty": "Medium"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 150, "slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium", "tags": ["Array", "Math", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}]},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 636, "slug": "exclusive-time-of-functions", "title": "Exclusive Time of Functions", "difficulty": "Medium", "tags": ["Array", "Stack"], "similar_problems": []},
    {"number": 33, "slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array-ii", "title": "Search in Rotated Sorted Array II", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}]},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 50, "slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"}, {"slug": "super-pow", "title": "Super Pow", "difficulty": "Medium"}, {"slug": "count-collisions-of-monkeys-on-a-polygon", "title": "Count Collisions of Monkeys on a Polygon", "difficulty": "Medium"}]},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}, {"slug": "count-ways-to-group-overlapping-ranges", "title": "Count Ways to Group Overlapping Ranges", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}, {"slug": "count-days-without-meetings", "title": "Count Days Without Meetings", "difficulty": "Medium"}, {"slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium"}]},
    {"number": 69, "slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"}, {"slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy"}]},
    {"number": 528, "slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Prefix Sum", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}, {"slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 72, "slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "one-edit-distance", "title": "One Edit Distance", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "uncrossed-lines", "title": "Uncrossed Lines", "difficulty": "Medium"}, {"slug": "minimum-white-tiles-after-covering-with-carpets", "title": "Minimum White Tiles After Covering With Carpets", "difficulty": "Hard"}, {"slug": "longest-palindrome-after-substring-concatenation-ii", "title": "Longest Palindrome After Substring Concatenation II", "difficulty": "Hard"}, {"slug": "minimum-steps-to-convert-string-with-operations", "title": "Minimum Steps to Convert String with Operations", "difficulty": "Hard"}]},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 256, "slug": "paint-house", "title": "Paint House", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "house-robber-ii", "title": "House Robber II", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "paint-fence", "title": "Paint Fence", "difficulty": "Medium"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}]},
    {"number": 265, "slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "paint-house", "title": "Paint House", "difficulty": "Medium"}, {"slug": "paint-fence", "title": "Paint Fence", "difficulty": "Medium"}]},
    {"number": 698, "slug": "partition-to-k-equal-sum-subsets", "title": "Partition to K Equal Sum Subsets", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Memoization", "Bitmask"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "maximum-number-of-ways-to-partition-an-array", "title": "Maximum Number of Ways to Partition an Array", "difficulty": "Hard"}, {"slug": "maximum-rows-covered-by-columns", "title": "Maximum Rows Covered by Columns", "difficulty": "Medium"}]},
    {"number": 170, "slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Design", "Data Stream"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "unique-word-abbreviation", "title": "Unique Word Abbreviation", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}]},
    {"number": 244, "slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "String", "Design"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy"}, {"slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 341, "slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium", "tags": ["Stack", "Tree", "Depth-First Search", "Design", "Queue", "Iterator"], "similar_problems": [{"slug": "flatten-2d-vector", "title": "Flatten 2D Vector", "difficulty": "Medium"}, {"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"}, {"slug": "array-nesting", "title": "Array Nesting", "difficulty": "Medium"}]},
    {"number": 380, "slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "similar_problems": [{"slug": "insert-delete-getrandom-o1-duplicates-allowed", "title": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": "Hard"}]},
    {"number": 432, "slug": "all-oone-data-structure", "title": "All O`one Data Structure", "difficulty": "Hard", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": []},
    {"number": 716, "slug": "max-stack", "title": "Max Stack", "difficulty": "Hard", "tags": ["Linked List", "Stack", "Design", "Doubly-Linked List", "Ordered Set"], "similar_problems": [{"slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"}]},
    {"number": 706, "slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"], "similar_problems": [{"slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy"}, {"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]}
]