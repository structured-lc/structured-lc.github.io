[
    {"number": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "maximum-erasure-value", "title": "Maximum Erasure Value", "difficulty": "Medium"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "minimum-consecutive-cards-to-pick-up", "title": "Minimum Consecutive Cards to Pick Up", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "count-complete-subarrays-in-an-array", "title": "Count Complete Subarrays in an Array", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 6, "slug": "zigzag-conversion", "title": "Zigzag Conversion", "difficulty": "Medium", "tags": ["String"], "similar_problems": []},
    {"number": 8, "slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "valid-number", "title": "Valid Number", "difficulty": "Hard"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 10, "slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 12, "slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy"}, {"slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard"}]},
    {"number": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 14, "slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}, {"slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium"}, {"slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard"}, {"slug": "longest-common-prefix-after-at-most-one-removal", "title": "Longest Common Prefix After at Most One Removal", "difficulty": "Medium"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 22, "slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 28, "slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy"}]},
    {"number": 30, "slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}]},
    {"number": 32, "slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Stack"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}]},
    {"number": 38, "slug": "count-and-say", "title": "Count and Say", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 43, "slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "apply-discount-to-prices", "title": "Apply Discount to Prices", "difficulty": "Medium"}]},
    {"number": 44, "slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"], "similar_problems": [{"slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard"}, {"slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy"}]},
    {"number": 49, "slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}, {"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}]},
    {"number": 58, "slug": "length-of-last-word", "title": "Length of Last Word", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 65, "slug": "valid-number", "title": "Valid Number", "difficulty": "Hard", "tags": ["String"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}]},
    {"number": 67, "slug": "add-binary", "title": "Add Binary", "difficulty": "Easy", "tags": ["Math", "String", "Bit Manipulation", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}]},
    {"number": 68, "slug": "text-justification", "title": "Text Justification", "difficulty": "Hard", "tags": ["Array", "String", "Simulation"], "similar_problems": [{"slug": "rearrange-spaces-between-words", "title": "Rearrange Spaces Between Words", "difficulty": "Easy"}, {"slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 71, "slug": "simplify-path", "title": "Simplify Path", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 72, "slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "one-edit-distance", "title": "One Edit Distance", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "uncrossed-lines", "title": "Uncrossed Lines", "difficulty": "Medium"}, {"slug": "minimum-white-tiles-after-covering-with-carpets", "title": "Minimum White Tiles After Covering With Carpets", "difficulty": "Hard"}, {"slug": "longest-palindrome-after-substring-concatenation-ii", "title": "Longest Palindrome After Substring Concatenation II", "difficulty": "Hard"}, {"slug": "minimum-steps-to-convert-string-with-operations", "title": "Minimum Steps to Convert String with Operations", "difficulty": "Hard"}]},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard"}, {"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}, {"slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium"}]},
    {"number": 79, "slug": "word-search", "title": "Word Search", "difficulty": "Medium", "tags": ["Array", "String", "Backtracking", "Depth-First Search", "Matrix"], "similar_problems": [{"slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard"}]},
    {"number": 87, "slug": "scramble-string", "title": "Scramble String", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 91, "slug": "decode-ways", "title": "Decode Ways", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "decode-ways-ii", "title": "Decode Ways II", "difficulty": "Hard"}, {"slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}]},
    {"number": 93, "slug": "restore-ip-addresses", "title": "Restore IP Addresses", "difficulty": "Medium", "tags": ["String", "Backtracking"], "similar_problems": [{"slug": "ip-to-cidr", "title": "IP to CIDR", "difficulty": "Medium"}]},
    {"number": 97, "slug": "interleaving-string", "title": "Interleaving String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 115, "slug": "distinct-subsequences", "title": "Distinct Subsequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-unique-good-subsequences", "title": "Number of Unique Good Subsequences", "difficulty": "Hard"}]},
    {"number": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}, {"slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium"}]},
    {"number": 126, "slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard", "tags": ["Hash Table", "String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"}, {"slug": "groups-of-strings", "title": "Groups of Strings", "difficulty": "Hard"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 131, "slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 132, "slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium"}, {"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}, {"slug": "number-of-great-partitions", "title": "Number of Great Partitions", "difficulty": "Hard"}]},
    {"number": 139, "slug": "word-break", "title": "Word Break", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard"}, {"slug": "extra-characters-in-a-string", "title": "Extra Characters in a String", "difficulty": "Medium"}]},
    {"number": 140, "slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Backtracking", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break", "title": "Word Break", "difficulty": "Medium"}, {"slug": "concatenated-words", "title": "Concatenated Words", "difficulty": "Hard"}]},
    {"number": 151, "slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium"}]},
    {"number": 159, "slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}]},
    {"number": 161, "slug": "one-edit-distance", "title": "One Edit Distance", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 165, "slug": "compare-version-numbers", "title": "Compare Version Numbers", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 166, "slug": "fraction-to-recurring-decimal", "title": "Fraction to Recurring Decimal", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": []},
    {"number": 168, "slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}, {"slug": "design-spreadsheet", "title": "Design Spreadsheet", "difficulty": "Medium"}]},
    {"number": 171, "slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 179, "slug": "largest-number", "title": "Largest Number", "difficulty": "Medium", "tags": ["Array", "String", "Greedy", "Sorting"], "similar_problems": [{"slug": "smallest-value-of-the-rearranged-number", "title": "Smallest Value of the Rearranged Number", "difficulty": "Medium"}, {"slug": "find-the-key-of-the-numbers", "title": "Find the Key of the Numbers", "difficulty": "Easy"}]},
    {"number": 186, "slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium"}, {"slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium"}]},
    {"number": 187, "slug": "repeated-dna-sequences", "title": "Repeated DNA Sequences", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Sliding Window", "Rolling Hash", "Hash Function"], "similar_problems": []},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 208, "slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard"}, {"slug": "replace-words", "title": "Replace Words", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 211, "slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium", "tags": ["String", "Depth-First Search", "Design", "Trie"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "prefix-and-suffix-search", "title": "Prefix and Suffix Search", "difficulty": "Hard"}, {"slug": "match-substring-after-replacement", "title": "Match Substring After Replacement", "difficulty": "Hard"}, {"slug": "sum-of-prefix-scores-of-strings", "title": "Sum of Prefix Scores of Strings", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 212, "slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "similar_problems": [{"slug": "word-search", "title": "Word Search", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 214, "slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard", "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "maximum-deletions-on-a-string", "title": "Maximum Deletions on a String", "difficulty": "Hard"}, {"slug": "smallest-palindromic-rearrangement-i", "title": "Smallest Palindromic Rearrangement I", "difficulty": "Medium"}]},
    {"number": 224, "slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard", "tags": ["Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}, {"slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 227, "slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium", "tags": ["Math", "String", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}]},
    {"number": 241, "slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium", "tags": ["Math", "String", "Dynamic Programming", "Recursion", "Memoization"], "similar_problems": [{"slug": "unique-binary-search-trees-ii", "title": "Unique Binary Search Trees II", "difficulty": "Medium"}, {"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 242, "slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}]},
    {"number": 243, "slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}]},
    {"number": 244, "slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "String", "Design"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy"}, {"slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium"}]},
    {"number": 245, "slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium", "tags": ["Array", "String"], "similar_problems": [{"slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}]},
    {"number": 246, "slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy", "tags": ["Hash Table", "Two Pointers", "String"], "similar_problems": [{"slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "confusing-number", "title": "Confusing Number", "difficulty": "Easy"}]},
    {"number": 247, "slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium", "tags": ["Array", "String", "Recursion"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "sum-of-k-mirror-numbers", "title": "Sum of k-Mirror Numbers", "difficulty": "Hard"}]},
    {"number": 248, "slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard", "tags": ["Array", "String", "Recursion"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium"}]},
    {"number": 249, "slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "find-maximum-number-of-string-pairs", "title": "Find Maximum Number of String Pairs", "difficulty": "Easy"}]},
    {"number": 257, "slug": "binary-tree-paths", "title": "Binary Tree Paths", "difficulty": "Easy", "tags": ["String", "Backtracking", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"}, {"slug": "smallest-string-starting-from-leaf", "title": "Smallest String Starting From Leaf", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}]},
    {"number": 266, "slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "palindrome-permutation-ii", "title": "Palindrome Permutation II", "difficulty": "Medium"}, {"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 267, "slug": "palindrome-permutation-ii", "title": "Palindrome Permutation II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}, {"slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}]},
    {"number": 269, "slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}]},
    {"number": 271, "slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium", "tags": ["Array", "String", "Design"], "similar_problems": [{"slug": "count-and-say", "title": "Count and Say", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}, {"slug": "count-binary-substrings", "title": "Count Binary Substrings", "difficulty": "Easy"}]},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard", "tags": ["Math", "String", "Recursion"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 282, "slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard", "tags": ["Math", "String", "Backtracking"], "similar_problems": [{"slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"}, {"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}, {"slug": "target-sum", "title": "Target Sum", "difficulty": "Medium"}]},
    {"number": 288, "slug": "unique-word-abbreviation", "title": "Unique Word Abbreviation", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design"], "similar_problems": [{"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "generalized-abbreviation", "title": "Generalized Abbreviation", "difficulty": "Medium"}]},
    {"number": 290, "slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy"}, {"slug": "word-pattern-ii", "title": "Word Pattern II", "difficulty": "Medium"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 291, "slug": "word-pattern-ii", "title": "Word Pattern II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}]},
    {"number": 293, "slug": "flip-game", "title": "Flip Game", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "flip-game-ii", "title": "Flip Game II", "difficulty": "Medium"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 299, "slug": "bulls-and-cows", "title": "Bulls and Cows", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 301, "slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard", "tags": ["String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 306, "slug": "additive-number", "title": "Additive Number", "difficulty": "Medium", "tags": ["String", "Backtracking"], "similar_problems": [{"slug": "split-array-into-fibonacci-sequence", "title": "Split Array into Fibonacci Sequence", "difficulty": "Medium"}]},
    {"number": 316, "slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}]},
    {"number": 318, "slug": "maximum-product-of-word-lengths", "title": "Maximum Product of Word Lengths", "difficulty": "Medium", "tags": ["Array", "String", "Bit Manipulation"], "similar_problems": []},
    {"number": 320, "slug": "generalized-abbreviation", "title": "Generalized Abbreviation", "difficulty": "Medium", "tags": ["String", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "subsets", "title": "Subsets", "difficulty": "Medium"}, {"slug": "unique-word-abbreviation", "title": "Unique Word Abbreviation", "difficulty": "Medium"}, {"slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard"}]},
    {"number": 331, "slug": "verify-preorder-serialization-of-a-binary-tree", "title": "Verify Preorder Serialization of a Binary Tree", "difficulty": "Medium", "tags": ["String", "Stack", "Tree", "Binary Tree"], "similar_problems": []},
    {"number": 336, "slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Trie"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium"}, {"slug": "find-maximum-number-of-string-pairs", "title": "Find Maximum Number of String Pairs", "difficulty": "Easy"}]},
    {"number": 340, "slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}]},
    {"number": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 345, "slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}, {"slug": "sort-vowels-in-a-string", "title": "Sort Vowels in a String", "difficulty": "Medium"}]},
    {"number": 358, "slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}, {"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}, {"slug": "construct-string-with-repeat-limit", "title": "Construct String With Repeat Limit", "difficulty": "Medium"}]},
    {"number": 383, "slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "stickers-to-spell-word", "title": "Stickers to Spell Word", "difficulty": "Hard"}, {"slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy"}]},
    {"number": 385, "slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium", "tags": ["String", "Stack", "Depth-First Search"], "similar_problems": [{"slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium"}, {"slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium"}, {"slug": "remove-comments", "title": "Remove Comments", "difficulty": "Medium"}]},
    {"number": 387, "slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Queue", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}]},
    {"number": 388, "slug": "longest-absolute-file-path", "title": "Longest Absolute File Path", "difficulty": "Medium", "tags": ["String", "Stack", "Depth-First Search"], "similar_problems": []},
    {"number": 389, "slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "permutation-difference-between-two-strings", "title": "Permutation Difference between Two Strings", "difficulty": "Easy"}]},
    {"number": 392, "slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}, {"slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium"}, {"slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium"}, {"slug": "make-string-a-subsequence-using-cyclic-increments", "title": "Make String a Subsequence Using Cyclic Increments", "difficulty": "Medium"}]},
    {"number": 394, "slug": "decode-string", "title": "Decode String", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 395, "slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Divide and Conquer", "Sliding Window"], "similar_problems": [{"slug": "longest-subsequence-repeated-k-times", "title": "Longest Subsequence Repeated k Times", "difficulty": "Hard"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "length-of-longest-subarray-with-at-most-k-frequency", "title": "Length of Longest Subarray With at Most K Frequency", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 399, "slug": "evaluate-division", "title": "Evaluate Division", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Shortest Path"], "similar_problems": [{"slug": "check-for-contradictions-in-equations", "title": "Check for Contradictions in Equations", "difficulty": "Hard"}, {"slug": "maximize-amount-after-two-days-of-conversions", "title": "Maximize Amount After Two Days of Conversions", "difficulty": "Medium"}]},
    {"number": 402, "slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard"}, {"slug": "monotone-increasing-digits", "title": "Monotone Increasing Digits", "difficulty": "Medium"}, {"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 405, "slug": "convert-a-number-to-hexadecimal", "title": "Convert a Number to Hexadecimal", "difficulty": "Easy", "tags": ["Math", "String", "Bit Manipulation"], "similar_problems": []},
    {"number": 408, "slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard"}, {"slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard"}, {"slug": "check-if-an-original-string-exists-given-two-encoded-strings", "title": "Check if an Original String Exists Given Two Encoded Strings", "difficulty": "Hard"}]},
    {"number": 409, "slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": [{"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium"}, {"slug": "largest-palindromic-number", "title": "Largest Palindromic Number", "difficulty": "Medium"}]},
    {"number": 411, "slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "generalized-abbreviation", "title": "Generalized Abbreviation", "difficulty": "Medium"}, {"slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy"}, {"slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard"}]},
    {"number": 412, "slug": "fizz-buzz", "title": "Fizz Buzz", "difficulty": "Easy", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "fizz-buzz-multithreaded", "title": "Fizz Buzz Multithreaded", "difficulty": "Medium"}, {"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 415, "slug": "add-strings", "title": "Add Strings", "difficulty": "Easy", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}]},
    {"number": 418, "slug": "sentence-screen-fitting", "title": "Sentence Screen Fitting", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-cost-to-separate-sentence-into-rows", "title": "Minimum Cost to Separate Sentence Into Rows", "difficulty": "Medium"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 420, "slug": "strong-password-checker", "title": "Strong Password Checker", "difficulty": "Hard", "tags": ["String", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy"}]},
    {"number": 423, "slug": "reconstruct-original-digits-from-english", "title": "Reconstruct Original Digits from English", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": []},
    {"number": 424, "slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-array-continuous", "title": "Minimum Number of Operations to Make Array Continuous", "difficulty": "Hard"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}]},
    {"number": 425, "slug": "word-squares", "title": "Word Squares", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie"], "similar_problems": [{"slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy"}]},
    {"number": 428, "slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "encode-n-ary-tree-to-binary-tree", "title": "Encode N-ary Tree to Binary Tree", "difficulty": "Hard"}]},
    {"number": 433, "slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"}]},
    {"number": 434, "slug": "number-of-segments-in-a-string", "title": "Number of Segments in a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 438, "slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}]},
    {"number": 439, "slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"}, {"slug": "remove-comments", "title": "Remove Comments", "difficulty": "Medium"}, {"slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"}]},
    {"number": 443, "slug": "string-compression", "title": "String Compression", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "count-and-say", "title": "Count and Say", "difficulty": "Medium"}, {"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "decompress-run-length-encoded-list", "title": "Decompress Run-Length Encoded List", "difficulty": "Easy"}, {"slug": "string-compression-iii", "title": "String Compression III", "difficulty": "Medium"}, {"slug": "better-compression-of-string", "title": "Better Compression of String", "difficulty": "Medium"}]},
    {"number": 449, "slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 451, "slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy"}, {"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}, {"slug": "percentage-of-letter-in-string", "title": "Percentage of Letter in String", "difficulty": "Easy"}, {"slug": "maximum-number-of-pairs-in-array", "title": "Maximum Number of Pairs in Array", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy"}, {"slug": "count-pairs-of-similar-strings", "title": "Count Pairs Of Similar Strings", "difficulty": "Easy"}]},
    {"number": 459, "slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy"}, {"slug": "repeated-string-match", "title": "Repeated String Match", "difficulty": "Medium"}]},
    {"number": 466, "slug": "count-the-repetitions", "title": "Count The Repetitions", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 467, "slug": "unique-substrings-in-wraparound-string", "title": "Unique Substrings in Wraparound String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 468, "slug": "validate-ip-address", "title": "Validate IP Address", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "ip-to-cidr", "title": "IP to CIDR", "difficulty": "Medium"}, {"slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy"}]},
    {"number": 471, "slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "decode-string", "title": "Decode String", "difficulty": "Medium"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}]},
    {"number": 472, "slug": "concatenated-words", "title": "Concatenated Words", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Depth-First Search", "Trie", "Sorting"], "similar_problems": [{"slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard"}]},
    {"number": 474, "slug": "ones-and-zeroes", "title": "Ones and Zeroes", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": [{"slug": "count-subarrays-with-more-ones-than-zeros", "title": "Count Subarrays With More Ones Than Zeros", "difficulty": "Medium"}, {"slug": "non-negative-integers-without-consecutive-ones", "title": "Non-negative Integers without Consecutive Ones", "difficulty": "Hard"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 481, "slug": "magical-string", "title": "Magical String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 482, "slug": "license-key-formatting", "title": "License Key Formatting", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 484, "slug": "find-permutation", "title": "Find Permutation", "difficulty": "Medium", "tags": ["Array", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "using-a-robot-to-print-the-lexicographically-smallest-string", "title": "Using a Robot to Print the Lexicographically Smallest String", "difficulty": "Medium"}]},
    {"number": 488, "slug": "zuma-game", "title": "Zuma Game", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Stack", "Breadth-First Search", "Memoization"], "similar_problems": []},
    {"number": 499, "slug": "the-maze-iii", "title": "The Maze III", "difficulty": "Hard", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "the-maze", "title": "The Maze", "difficulty": "Medium"}, {"slug": "the-maze-ii", "title": "The Maze II", "difficulty": "Medium"}]},
    {"number": 500, "slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "find-the-sequence-of-strings-appeared-on-the-screen", "title": "Find the Sequence of Strings Appeared on the Screen", "difficulty": "Medium"}, {"slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-ii", "title": "Find the Original Typed String II", "difficulty": "Hard"}]},
    {"number": 504, "slug": "base-7", "title": "Base 7", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 514, "slug": "freedom-trail", "title": "Freedom Trail", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Depth-First Search", "Breadth-First Search"], "similar_problems": []},
    {"number": 516, "slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "count-different-palindromic-subsequences", "title": "Count Different Palindromic Subsequences", "difficulty": "Hard"}, {"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}, {"slug": "longest-palindromic-subsequence-ii", "title": "Longest Palindromic Subsequence II", "difficulty": "Medium"}, {"slug": "maximize-palindrome-length-from-subsequences", "title": "Maximize Palindrome Length From Subsequences", "difficulty": "Hard"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}]},
    {"number": 520, "slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy"}, {"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}, {"slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy"}]},
    {"number": 521, "slug": "longest-uncommon-subsequence-i", "title": "Longest Uncommon Subsequence I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "longest-uncommon-subsequence-ii", "title": "Longest Uncommon Subsequence II", "difficulty": "Medium"}]},
    {"number": 522, "slug": "longest-uncommon-subsequence-ii", "title": "Longest Uncommon Subsequence II", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "String", "Sorting"], "similar_problems": [{"slug": "longest-uncommon-subsequence-i", "title": "Longest Uncommon Subsequence I", "difficulty": "Easy"}]},
    {"number": 524, "slug": "longest-word-in-dictionary-through-deleting", "title": "Longest Word in Dictionary through Deleting", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String", "Sorting"], "similar_problems": [{"slug": "longest-word-in-dictionary", "title": "Longest Word in Dictionary", "difficulty": "Medium"}]},
    {"number": 527, "slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard", "tags": ["Array", "String", "Greedy", "Trie", "Sorting"], "similar_problems": [{"slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy"}, {"slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard"}, {"slug": "check-if-a-string-is-an-acronym-of-words", "title": "Check if a String Is an Acronym of Words", "difficulty": "Easy"}]},
    {"number": 535, "slug": "encode-and-decode-tinyurl", "title": "Encode and Decode TinyURL", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Hash Function"], "similar_problems": []},
    {"number": 536, "slug": "construct-binary-tree-from-string", "title": "Construct Binary Tree from String", "difficulty": "Medium", "tags": ["String", "Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "construct-string-from-binary-tree", "title": "Construct String from Binary Tree", "difficulty": "Medium"}]},
    {"number": 537, "slug": "complex-number-multiplication", "title": "Complex Number Multiplication", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": []},
    {"number": 539, "slug": "minimum-time-difference", "title": "Minimum Time Difference", "difficulty": "Medium", "tags": ["Array", "Math", "String", "Sorting"], "similar_problems": [{"slug": "minimum-cost-to-set-cooking-time", "title": "Minimum Cost to Set Cooking Time", "difficulty": "Medium"}]},
    {"number": 541, "slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy"}, {"slug": "reverse-words-in-a-string-iii", "title": "Reverse Words in a String III", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 544, "slug": "output-contest-matches", "title": "Output Contest Matches", "difficulty": "Medium", "tags": ["String", "Recursion", "Simulation"], "similar_problems": []},
    {"number": 551, "slug": "student-attendance-record-i", "title": "Student Attendance Record I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "student-attendance-record-ii", "title": "Student Attendance Record II", "difficulty": "Hard"}]},
    {"number": 555, "slug": "split-concatenated-strings", "title": "Split Concatenated Strings", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 556, "slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium", "tags": ["Math", "Two Pointers", "String"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"}, {"slug": "next-palindrome-using-same-digits", "title": "Next Palindrome Using Same Digits", "difficulty": "Hard"}]},
    {"number": 557, "slug": "reverse-words-in-a-string-iii", "title": "Reverse Words in a String III", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 564, "slug": "find-the-closest-palindrome", "title": "Find the Closest Palindrome", "difficulty": "Hard", "tags": ["Math", "String"], "similar_problems": [{"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}, {"slug": "next-palindrome-using-same-digits", "title": "Next Palindrome Using Same Digits", "difficulty": "Hard"}, {"slug": "find-the-count-of-good-integers", "title": "Find the Count of Good Integers", "difficulty": "Hard"}, {"slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard"}]},
    {"number": 567, "slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium", "tags": ["Hash Table", "Two Pointers", "String", "Sliding Window"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}, {"slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium"}]},
    {"number": 583, "slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}, {"slug": "make-three-strings-equal", "title": "Make Three Strings Equal", "difficulty": "Easy"}]},
    {"number": 588, "slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard", "tags": ["Hash Table", "String", "Design", "Trie", "Sorting"], "similar_problems": [{"slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium"}, {"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-log-storage-system", "title": "Design Log Storage System", "difficulty": "Medium"}]},
    {"number": 591, "slug": "tag-validator", "title": "Tag Validator", "difficulty": "Hard", "tags": ["String", "Stack"], "similar_problems": [{"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}]},
    {"number": 592, "slug": "fraction-addition-and-subtraction", "title": "Fraction Addition and Subtraction", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "solve-the-equation", "title": "Solve the Equation", "difficulty": "Medium"}]},
    {"number": 599, "slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy"}]},
    {"number": 604, "slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy", "tags": ["Array", "String", "Design", "Iterator"], "similar_problems": [{"slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium"}, {"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 606, "slug": "construct-string-from-binary-tree", "title": "Construct String from Binary Tree", "difficulty": "Medium", "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "construct-binary-tree-from-string", "title": "Construct Binary Tree from String", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}]},
    {"number": 609, "slug": "find-duplicate-file-in-system", "title": "Find Duplicate File in System", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "delete-duplicate-folders-in-system", "title": "Delete Duplicate Folders in System", "difficulty": "Hard"}]},
    {"number": 616, "slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie", "String Matching"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "tag-validator", "title": "Tag Validator", "difficulty": "Hard"}]},
    {"number": 631, "slug": "design-excel-sum-formula", "title": "Design Excel Sum Formula", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Graph", "Design", "Topological Sort", "Matrix"], "similar_problems": []},
    {"number": 635, "slug": "design-log-storage-system", "title": "Design Log Storage System", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Ordered Set"], "similar_problems": [{"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}]},
    {"number": 639, "slug": "decode-ways-ii", "title": "Decode Ways II", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "decode-ways", "title": "Decode Ways", "difficulty": "Medium"}, {"slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard"}, {"slug": "number-of-ways-to-divide-a-long-corridor", "title": "Number of Ways to Divide a Long Corridor", "difficulty": "Hard"}]},
    {"number": 640, "slug": "solve-the-equation", "title": "Solve the Equation", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "fraction-addition-and-subtraction", "title": "Fraction Addition and Subtraction", "difficulty": "Medium"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 642, "slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard", "tags": ["String", "Depth-First Search", "Design", "Trie", "Sorting", "Heap (Priority Queue)", "Data Stream"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}]},
    {"number": 647, "slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}]},
    {"number": 648, "slug": "replace-words", "title": "Replace Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}]},
    {"number": 649, "slug": "dota2-senate", "title": "Dota2 Senate", "difficulty": "Medium", "tags": ["String", "Greedy", "Queue"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}]},
    {"number": 657, "slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "execution-of-all-suffix-instructions-staying-in-a-grid", "title": "Execution of All Suffix Instructions Staying in a Grid", "difficulty": "Medium"}, {"slug": "furthest-point-from-origin", "title": "Furthest Point From Origin", "difficulty": "Easy"}]},
    {"number": 664, "slug": "strange-printer", "title": "Strange Printer", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "remove-boxes", "title": "Remove Boxes", "difficulty": "Hard"}, {"slug": "strange-printer-ii", "title": "Strange Printer II", "difficulty": "Hard"}]},
    {"number": 676, "slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium", "tags": ["Hash Table", "String", "Depth-First Search", "Design", "Trie"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "longest-word-in-dictionary", "title": "Longest Word in Dictionary", "difficulty": "Medium"}]},
    {"number": 677, "slug": "map-sum-pairs", "title": "Map Sum Pairs", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "sort-the-jumbled-numbers", "title": "Sort the Jumbled Numbers", "difficulty": "Medium"}, {"slug": "sum-of-prefix-scores-of-strings", "title": "Sum of Prefix Scores of Strings", "difficulty": "Hard"}]},
    {"number": 678, "slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Stack", "Greedy"], "similar_problems": [{"slug": "special-binary-string", "title": "Special Binary String", "difficulty": "Hard"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 680, "slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "valid-palindrome-iii", "title": "Valid Palindrome III", "difficulty": "Hard"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}]},
    {"number": 681, "slug": "next-closest-time", "title": "Next Closest Time", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking", "Enumeration"], "similar_problems": []},
    {"number": 686, "slug": "repeated-string-match", "title": "Repeated String Match", "difficulty": "Medium", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy"}]},
    {"number": 691, "slug": "stickers-to-spell-word", "title": "Stickers to Spell Word", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Memoization", "Bitmask"], "similar_problems": [{"slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy"}]},
    {"number": 692, "slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "sort-features-by-popularity", "title": "Sort Features by Popularity", "difficulty": "Medium"}, {"slug": "sender-with-largest-word-count", "title": "Sender With Largest Word Count", "difficulty": "Medium"}, {"slug": "maximum-number-of-pairs-in-array", "title": "Maximum Number of Pairs in Array", "difficulty": "Easy"}]},
    {"number": 696, "slug": "count-binary-substrings", "title": "Count Binary Substrings", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "number-of-substrings-with-fixed-ratio", "title": "Number of Substrings With Fixed Ratio", "difficulty": "Medium"}, {"slug": "count-the-number-of-substrings-with-dominant-ones", "title": "Count the Number of Substrings With Dominant Ones", "difficulty": "Medium"}]},
    {"number": 709, "slug": "to-lower-case", "title": "To Lower Case", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy"}]},
    {"number": 712, "slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}, {"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}]},
    {"number": 720, "slug": "longest-word-in-dictionary", "title": "Longest Word in Dictionary", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie", "Sorting"], "similar_problems": [{"slug": "longest-word-in-dictionary-through-deleting", "title": "Longest Word in Dictionary through Deleting", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "longest-word-with-all-prefixes", "title": "Longest Word With All Prefixes", "difficulty": "Medium"}]},
    {"number": 721, "slug": "accounts-merge", "title": "Accounts Merge", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Sorting"], "similar_problems": [{"slug": "redundant-connection", "title": "Redundant Connection", "difficulty": "Medium"}, {"slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy"}, {"slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium"}]},
    {"number": 722, "slug": "remove-comments", "title": "Remove Comments", "difficulty": "Medium", "tags": ["Array", "String"], "similar_problems": [{"slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"}, {"slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium"}]},
    {"number": 726, "slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard", "tags": ["Hash Table", "String", "Stack", "Sorting"], "similar_problems": [{"slug": "decode-string", "title": "Decode String", "difficulty": "Medium"}, {"slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard"}, {"slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"}]},
    {"number": 727, "slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Sliding Window"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}, {"slug": "longest-continuous-increasing-subsequence", "title": "Longest Continuous Increasing Subsequence", "difficulty": "Easy"}]},
    {"number": 730, "slug": "count-different-palindromic-subsequences", "title": "Count Different Palindromic Subsequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "count-palindromic-subsequences", "title": "Count Palindromic Subsequences", "difficulty": "Hard"}]},
    {"number": 734, "slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "accounts-merge", "title": "Accounts Merge", "difficulty": "Medium"}, {"slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium"}]},
    {"number": 736, "slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard", "tags": ["Hash Table", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard"}]},
    {"number": 737, "slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Union Find"], "similar_problems": [{"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "accounts-merge", "title": "Accounts Merge", "difficulty": "Medium"}, {"slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy"}]},
    {"number": 745, "slug": "prefix-and-suffix-search", "title": "Prefix and Suffix Search", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}]},
    {"number": 748, "slug": "shortest-completing-word", "title": "Shortest Completing Word", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 751, "slug": "ip-to-cidr", "title": "IP to CIDR", "difficulty": "Medium", "tags": ["String", "Bit Manipulation"], "similar_problems": [{"slug": "restore-ip-addresses", "title": "Restore IP Addresses", "difficulty": "Medium"}, {"slug": "validate-ip-address", "title": "Validate IP Address", "difficulty": "Medium"}]},
    {"number": 752, "slug": "open-the-lock", "title": "Open the Lock", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "reachable-nodes-with-restrictions", "title": "Reachable Nodes With Restrictions", "difficulty": "Medium"}]},
    {"number": 758, "slug": "bold-words-in-string", "title": "Bold Words in String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie", "String Matching"], "similar_problems": []},
    {"number": 761, "slug": "special-binary-string", "title": "Special Binary String", "difficulty": "Hard", "tags": ["String", "Recursion"], "similar_problems": [{"slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium"}, {"slug": "number-of-good-binary-strings", "title": "Number of Good Binary Strings", "difficulty": "Medium"}]},
    {"number": 763, "slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium", "tags": ["Hash Table", "Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}]},
    {"number": 767, "slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}, {"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}, {"slug": "longest-happy-string", "title": "Longest Happy String", "difficulty": "Medium"}]},
    {"number": 770, "slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}]},
    {"number": 771, "slug": "jewels-and-stones", "title": "Jewels and Stones", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 772, "slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard", "tags": ["Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard"}, {"slug": "build-binary-expression-tree-from-infix-expression", "title": "Build Binary Expression Tree From Infix Expression", "difficulty": "Hard"}]},
    {"number": 777, "slug": "swap-adjacent-in-lr-string", "title": "Swap Adjacent in LR String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 784, "slug": "letter-case-permutation", "title": "Letter Case Permutation", "difficulty": "Medium", "tags": ["String", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "subsets", "title": "Subsets", "difficulty": "Medium"}, {"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 791, "slug": "custom-sort-string", "title": "Custom Sort String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "sort-the-students-by-their-kth-score", "title": "Sort the Students by Their Kth Score", "difficulty": "Medium"}]},
    {"number": 792, "slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Dynamic Programming", "Trie", "Sorting"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}]},
    {"number": 796, "slug": "rotate-string", "title": "Rotate String", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": []},
    {"number": 800, "slug": "similar-rgb-color", "title": "Similar RGB Color", "difficulty": "Easy", "tags": ["Math", "String", "Enumeration"], "similar_problems": []},
    {"number": 804, "slug": "unique-morse-code-words", "title": "Unique Morse Code Words", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 806, "slug": "number-of-lines-to-write-string", "title": "Number of Lines To Write String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 809, "slug": "expressive-words", "title": "Expressive Words", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String"], "similar_problems": []},
    {"number": 811, "slug": "subdomain-visit-count", "title": "Subdomain Visit Count", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 816, "slug": "ambiguous-coordinates", "title": "Ambiguous Coordinates", "difficulty": "Medium", "tags": ["String", "Backtracking", "Enumeration"], "similar_problems": []},
    {"number": 819, "slug": "most-common-word", "title": "Most Common Word", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 820, "slug": "short-encoding-of-words", "title": "Short Encoding of Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie"], "similar_problems": []},
    {"number": 821, "slug": "shortest-distance-to-a-character", "title": "Shortest Distance to a Character", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}]},
    {"number": 824, "slug": "goat-latin", "title": "Goat Latin", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 828, "slug": "count-unique-characters-of-all-substrings-of-a-given-string", "title": "Count Unique Characters of All Substrings of a Given String", "difficulty": "Hard", "tags": ["Hash Table", "String", "Dynamic Programming"], "similar_problems": [{"slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard"}]},
    {"number": 830, "slug": "positions-of-large-groups", "title": "Positions of Large Groups", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy"}]},
    {"number": 831, "slug": "masking-personal-information", "title": "Masking Personal Information", "difficulty": "Medium", "tags": ["String"], "similar_problems": []},
    {"number": 833, "slug": "find-and-replace-in-string", "title": "Find And Replace in String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 838, "slug": "push-dominoes", "title": "Push Dominoes", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": []},
    {"number": 839, "slug": "similar-string-groups", "title": "Similar String Groups", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Union Find"], "similar_problems": [{"slug": "groups-of-strings", "title": "Groups of Strings", "difficulty": "Hard"}]},
    {"number": 842, "slug": "split-array-into-fibonacci-sequence", "title": "Split Array into Fibonacci Sequence", "difficulty": "Medium", "tags": ["String", "Backtracking"], "similar_problems": [{"slug": "additive-number", "title": "Additive Number", "difficulty": "Medium"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}]},
    {"number": 843, "slug": "guess-the-word", "title": "Guess the Word", "difficulty": "Hard", "tags": ["Array", "Math", "String", "Interactive", "Game Theory"], "similar_problems": []},
    {"number": 844, "slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Stack", "Simulation"], "similar_problems": [{"slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy"}, {"slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"}]},
    {"number": 848, "slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": [{"slug": "replace-all-digits-with-characters", "title": "Replace All Digits with Characters", "difficulty": "Easy"}, {"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}, {"slug": "shift-distance-between-two-strings", "title": "Shift Distance Between Two Strings", "difficulty": "Medium"}, {"slug": "find-the-k-th-character-in-string-game-i", "title": "Find the K-th Character in String Game I", "difficulty": "Easy"}, {"slug": "find-the-k-th-character-in-string-game-ii", "title": "Find the K-th Character in String Game II", "difficulty": "Hard"}]},
    {"number": 854, "slug": "k-similar-strings", "title": "K-Similar Strings", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}]},
    {"number": 856, "slug": "score-of-parentheses", "title": "Score of Parentheses", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 859, "slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium"}, {"slug": "check-if-one-string-swap-can-make-strings-equal", "title": "Check if One String Swap Can Make Strings Equal", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 880, "slug": "decoded-string-at-index", "title": "Decoded String at Index", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 884, "slug": "uncommon-words-from-two-sentences", "title": "Uncommon Words from Two Sentences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}]},
    {"number": 890, "slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy"}, {"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}]},
    {"number": 893, "slug": "groups-of-special-equivalent-strings", "title": "Groups of Special-Equivalent Strings", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 899, "slug": "orderly-queue", "title": "Orderly Queue", "difficulty": "Hard", "tags": ["Math", "String", "Sorting"], "similar_problems": []},
    {"number": 902, "slug": "numbers-at-most-n-given-digit-set", "title": "Numbers At Most N Given Digit Set", "difficulty": "Hard", "tags": ["Array", "Math", "String", "Binary Search", "Dynamic Programming"], "similar_problems": []},
    {"number": 903, "slug": "valid-permutations-for-di-sequence", "title": "Valid Permutations for DI Sequence", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Prefix Sum"], "similar_problems": []},
    {"number": 906, "slug": "super-palindromes", "title": "Super Palindromes", "difficulty": "Hard", "tags": ["Math", "String", "Enumeration"], "similar_problems": []},
    {"number": 916, "slug": "word-subsets", "title": "Word Subsets", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 917, "slug": "reverse-only-letters", "title": "Reverse Only Letters", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 921, "slug": "minimum-add-to-make-parentheses-valid", "title": "Minimum Add to Make Parentheses Valid", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 925, "slug": "long-pressed-name", "title": "Long Pressed Name", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 926, "slug": "flip-string-to-monotone-increasing", "title": "Flip String to Monotone Increasing", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-cost-to-make-all-characters-equal", "title": "Minimum Cost to Make All Characters Equal", "difficulty": "Medium"}]},
    {"number": 929, "slug": "unique-email-addresses", "title": "Unique Email Addresses", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 936, "slug": "stamping-the-sequence", "title": "Stamping The Sequence", "difficulty": "Hard", "tags": ["String", "Stack", "Greedy", "Queue"], "similar_problems": []},
    {"number": 937, "slug": "reorder-data-in-log-files", "title": "Reorder Data in Log Files", "difficulty": "Medium", "tags": ["Array", "String", "Sorting"], "similar_problems": []},
    {"number": 940, "slug": "distinct-subsequences-ii", "title": "Distinct Subsequences II", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-unique-good-subsequences", "title": "Number of Unique Good Subsequences", "difficulty": "Hard"}, {"slug": "count-k-subsequences-of-a-string-with-maximum-beauty", "title": "Count K-Subsequences of a String With Maximum Beauty", "difficulty": "Hard"}]},
    {"number": 942, "slug": "di-string-match", "title": "DI String Match", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium"}]},
    {"number": 943, "slug": "find-the-shortest-superstring", "title": "Find the Shortest Superstring", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Bit Manipulation", "Bitmask"], "similar_problems": [{"slug": "maximum-rows-covered-by-columns", "title": "Maximum Rows Covered by Columns", "difficulty": "Medium"}, {"slug": "find-the-minimum-cost-array-permutation", "title": "Find the Minimum Cost Array Permutation", "difficulty": "Hard"}, {"slug": "find-the-shortest-superstring-ii", "title": "Find the Shortest Superstring II", "difficulty": "Easy"}]},
    {"number": 944, "slug": "delete-columns-to-make-sorted", "title": "Delete Columns to Make Sorted", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 949, "slug": "largest-time-for-given-digits", "title": "Largest Time for Given Digits", "difficulty": "Medium", "tags": ["Array", "String", "Backtracking", "Enumeration"], "similar_problems": [{"slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy"}]},
    {"number": 953, "slug": "verifying-an-alien-dictionary", "title": "Verifying an Alien Dictionary", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 955, "slug": "delete-columns-to-make-sorted-ii", "title": "Delete Columns to Make Sorted II", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 960, "slug": "delete-columns-to-make-sorted-iii", "title": "Delete Columns to Make Sorted III", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": []},
    {"number": 966, "slug": "vowel-spellchecker", "title": "Vowel Spellchecker", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 972, "slug": "equal-rational-numbers", "title": "Equal Rational Numbers", "difficulty": "Hard", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 981, "slug": "time-based-key-value-store", "title": "Time Based Key-Value Store", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Design"], "similar_problems": [{"slug": "stock-price-fluctuation", "title": "Stock Price Fluctuation ", "difficulty": "Medium"}]},
    {"number": 984, "slug": "string-without-aaa-or-bbb", "title": "String Without AAA or BBB", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 988, "slug": "smallest-string-starting-from-leaf", "title": "Smallest String Starting From Leaf", "difficulty": "Medium", "tags": ["String", "Backtracking", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"}, {"slug": "binary-tree-paths", "title": "Binary Tree Paths", "difficulty": "Easy"}]},
    {"number": 990, "slug": "satisfiability-of-equality-equations", "title": "Satisfiability of Equality Equations", "difficulty": "Medium", "tags": ["Array", "String", "Union Find", "Graph"], "similar_problems": []},
    {"number": 1002, "slug": "find-common-characters", "title": "Find Common Characters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}]},
    {"number": 1003, "slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}]},
    {"number": 1016, "slug": "binary-string-with-substrings-representing-1-to-n", "title": "Binary String With Substrings Representing 1 To N", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Sliding Window"], "similar_problems": []},
    {"number": 1021, "slug": "remove-outermost-parentheses", "title": "Remove Outermost Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1023, "slug": "camelcase-matching", "title": "Camelcase Matching", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String", "Trie", "String Matching"], "similar_problems": []},
    {"number": 1028, "slug": "recover-a-tree-from-preorder-traversal", "title": "Recover a Tree From Preorder Traversal", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1032, "slug": "stream-of-characters", "title": "Stream of Characters", "difficulty": "Hard", "tags": ["Array", "String", "Design", "Trie", "Data Stream"], "similar_problems": []},
    {"number": 1041, "slug": "robot-bounded-in-circle", "title": "Robot Bounded In Circle", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": []},
    {"number": 1044, "slug": "longest-duplicate-substring", "title": "Longest Duplicate Substring", "difficulty": "Hard", "tags": ["String", "Binary Search", "Sliding Window", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": []},
    {"number": 1047, "slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium"}, {"slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"}, {"slug": "minimize-string-length", "title": "Minimize String Length", "difficulty": "Easy"}]},
    {"number": 1048, "slug": "longest-string-chain", "title": "Longest String Chain", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "String", "Dynamic Programming", "Sorting"], "similar_problems": []},
    {"number": 1055, "slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Binary Search", "Greedy"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}]},
    {"number": 1058, "slug": "minimize-rounding-error-to-meet-target", "title": "Minimize Rounding Error to Meet Target", "difficulty": "Medium", "tags": ["Array", "Math", "String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1061, "slug": "lexicographically-smallest-equivalent-string", "title": "Lexicographically Smallest Equivalent String", "difficulty": "Medium", "tags": ["String", "Union Find"], "similar_problems": [{"slug": "lexicographically-smallest-generated-string", "title": "Lexicographically Smallest Generated String", "difficulty": "Hard"}]},
    {"number": 1062, "slug": "longest-repeating-substring", "title": "Longest Repeating Substring", "difficulty": "Medium", "tags": ["String", "Binary Search", "Dynamic Programming", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": []},
    {"number": 1065, "slug": "index-pairs-of-a-string", "title": "Index Pairs of a String", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Sorting"], "similar_problems": []},
    {"number": 1071, "slug": "greatest-common-divisor-of-strings", "title": "Greatest Common Divisor of Strings", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}, {"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}, {"slug": "find-the-maximum-factor-score-of-array", "title": "Find the Maximum Factor Score of Array", "difficulty": "Medium"}]},
    {"number": 1078, "slug": "occurrences-after-bigram", "title": "Occurrences After Bigram", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1079, "slug": "letter-tile-possibilities", "title": "Letter Tile Possibilities", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking", "Counting"], "similar_problems": []},
    {"number": 1081, "slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}]},
    {"number": 1087, "slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium", "tags": ["String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "decode-string", "title": "Decode String", "difficulty": "Medium"}, {"slug": "letter-case-permutation", "title": "Letter Case Permutation", "difficulty": "Medium"}, {"slug": "brace-expansion-ii", "title": "Brace Expansion II", "difficulty": "Hard"}]},
    {"number": 1092, "slug": "shortest-common-supersequence", "title": "Shortest Common Supersequence ", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}, {"slug": "shortest-string-that-contains-three-strings", "title": "Shortest String That Contains Three Strings", "difficulty": "Medium"}]},
    {"number": 1096, "slug": "brace-expansion-ii", "title": "Brace Expansion II", "difficulty": "Hard", "tags": ["String", "Backtracking", "Stack", "Breadth-First Search"], "similar_problems": [{"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 1100, "slug": "find-k-length-substrings-with-no-repeated-characters", "title": "Find K-Length Substrings With No Repeated Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 1106, "slug": "parsing-a-boolean-expression", "title": "Parsing A Boolean Expression", "difficulty": "Hard", "tags": ["String", "Stack", "Recursion"], "similar_problems": []},
    {"number": 1108, "slug": "defanging-an-ip-address", "title": "Defanging an IP Address", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1111, "slug": "maximum-nesting-depth-of-two-valid-parentheses-strings", "title": "Maximum Nesting Depth of Two Valid Parentheses Strings", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": [{"slug": "maximum-nesting-depth-of-the-parentheses", "title": "Maximum Nesting Depth of the Parentheses", "difficulty": "Easy"}]},
    {"number": 1119, "slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 1138, "slug": "alphabet-board-path", "title": "Alphabet Board Path", "difficulty": "Medium", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1143, "slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}, {"slug": "shortest-common-supersequence", "title": "Shortest Common Supersequence ", "difficulty": "Hard"}, {"slug": "maximize-number-of-subsequences-in-a-string", "title": "Maximize Number of Subsequences in a String", "difficulty": "Medium"}, {"slug": "subsequence-with-the-minimum-score", "title": "Subsequence With the Minimum Score", "difficulty": "Hard"}]},
    {"number": 1147, "slug": "longest-chunked-palindrome-decomposition", "title": "Longest Chunked Palindrome Decomposition", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "palindrome-rearrangement-queries", "title": "Palindrome Rearrangement Queries", "difficulty": "Hard"}]},
    {"number": 1152, "slug": "analyze-user-website-visit-pattern", "title": "Analyze User Website Visit Pattern", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 1153, "slug": "string-transforms-into-another-string", "title": "String Transforms Into Another String", "difficulty": "Hard", "tags": ["Hash Table", "String", "Graph"], "similar_problems": []},
    {"number": 1154, "slug": "day-of-the-year", "title": "Day of the Year", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1156, "slug": "swap-for-longest-repeated-character-substring", "title": "Swap For Longest Repeated Character Substring", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 1160, "slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy"}, {"slug": "rearrange-characters-to-make-target-string", "title": "Rearrange Characters to Make Target String", "difficulty": "Easy"}]},
    {"number": 1163, "slug": "last-substring-in-lexicographical-order", "title": "Last Substring in Lexicographical Order", "difficulty": "Hard", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "find-the-lexicographically-largest-string-from-the-box-i", "title": "Find the Lexicographically Largest String From the Box I", "difficulty": "Medium"}]},
    {"number": 1165, "slug": "single-row-keyboard", "title": "Single-Row Keyboard", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1166, "slug": "design-file-system", "title": "Design File System", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": []},
    {"number": 1169, "slug": "invalid-transactions", "title": "Invalid Transactions", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 1170, "slug": "compare-strings-by-frequency-of-the-smallest-character", "title": "Compare Strings by Frequency of the Smallest Character", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1177, "slug": "can-make-palindrome-from-substring", "title": "Can Make Palindrome from Substring", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "similar_problems": [{"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "maximize-the-number-of-partitions-after-operations", "title": "Maximize the Number of Partitions After Operations", "difficulty": "Hard"}]},
    {"number": 1178, "slug": "number-of-valid-words-for-each-puzzle", "title": "Number of Valid Words for Each Puzzle", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Trie"], "similar_problems": []},
    {"number": 1180, "slug": "count-substrings-with-only-one-distinct-letter", "title": "Count Substrings with Only One Distinct Letter", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1181, "slug": "before-and-after-puzzle", "title": "Before and After Puzzle", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 1189, "slug": "maximum-number-of-balloons", "title": "Maximum Number of Balloons", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1190, "slug": "reverse-substrings-between-each-pair-of-parentheses", "title": "Reverse Substrings Between Each Pair of Parentheses", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1202, "slug": "smallest-string-with-swaps", "title": "Smallest String With Swaps", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Sorting"], "similar_problems": [{"slug": "minimize-hamming-distance-after-swap-operations", "title": "Minimize Hamming Distance After Swap Operations", "difficulty": "Medium"}, {"slug": "process-restricted-friend-requests", "title": "Process Restricted Friend Requests", "difficulty": "Hard"}, {"slug": "largest-number-after-digit-swaps-by-parity", "title": "Largest Number After Digit Swaps by Parity", "difficulty": "Easy"}, {"slug": "lexicographically-smallest-beautiful-string", "title": "Lexicographically Smallest Beautiful String", "difficulty": "Hard"}, {"slug": "make-lexicographically-smallest-array-by-swapping-elements", "title": "Make Lexicographically Smallest Array by Swapping Elements", "difficulty": "Medium"}]},
    {"number": 1208, "slug": "get-equal-substrings-within-budget", "title": "Get Equal Substrings Within Budget", "difficulty": "Medium", "tags": ["String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}]},
    {"number": 1209, "slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": [{"slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}, {"slug": "replace-non-coprime-numbers-in-array", "title": "Replace Non-Coprime Numbers in Array", "difficulty": "Hard"}, {"slug": "minimize-string-length", "title": "Minimize String Length", "difficulty": "Easy"}]},
    {"number": 1216, "slug": "valid-palindrome-iii", "title": "Valid Palindrome III", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}]},
    {"number": 1221, "slug": "split-a-string-in-balanced-strings", "title": "Split a String in Balanced Strings", "difficulty": "Easy", "tags": ["String", "Greedy", "Counting"], "similar_problems": [{"slug": "split-strings-by-separator", "title": "Split Strings by Separator", "difficulty": "Easy"}]},
    {"number": 1233, "slug": "remove-sub-folders-from-the-filesystem", "title": "Remove Sub-Folders from the Filesystem", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Trie"], "similar_problems": []},
    {"number": 1234, "slug": "replace-the-substring-for-balanced-string", "title": "Replace the Substring for Balanced String", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": []},
    {"number": 1236, "slug": "web-crawler", "title": "Web Crawler", "difficulty": "Medium", "tags": ["String", "Depth-First Search", "Breadth-First Search", "Interactive"], "similar_problems": [{"slug": "web-crawler-multithreaded", "title": "Web Crawler Multithreaded", "difficulty": "Medium"}]},
    {"number": 1239, "slug": "maximum-length-of-a-concatenated-string-with-unique-characters", "title": "Maximum Length of a Concatenated String with Unique Characters", "difficulty": "Medium", "tags": ["Array", "String", "Backtracking", "Bit Manipulation"], "similar_problems": []},
    {"number": 1247, "slug": "minimum-swaps-to-make-strings-equal", "title": "Minimum Swaps to Make Strings Equal", "difficulty": "Medium", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 1249, "slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": [{"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 1255, "slug": "maximum-score-words-formed-by-letters", "title": "Maximum Score Words Formed by Letters", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "similar_problems": [{"slug": "maximum-good-people-based-on-statements", "title": "Maximum Good People Based on Statements", "difficulty": "Hard"}]},
    {"number": 1256, "slug": "encode-number", "title": "Encode Number", "difficulty": "Medium", "tags": ["Math", "String", "Bit Manipulation"], "similar_problems": [{"slug": "convert-to-base-2", "title": "Convert to Base -2", "difficulty": "Medium"}]},
    {"number": 1257, "slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Tree", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"}]},
    {"number": 1258, "slug": "synonymous-sentences", "title": "Synonymous Sentences", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Backtracking", "Sort", "Union Find"], "similar_problems": []},
    {"number": 1268, "slug": "search-suggestions-system", "title": "Search Suggestions System", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Trie", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1271, "slug": "hexspeak", "title": "Hexspeak", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1278, "slug": "palindrome-partitioning-iii", "title": "Palindrome Partitioning III", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}, {"slug": "minimum-changes-to-make-k-semi-palindromes", "title": "Minimum Changes to Make K Semi-palindromes", "difficulty": "Hard"}]},
    {"number": 1286, "slug": "iterator-for-combination", "title": "Iterator for Combination", "difficulty": "Medium", "tags": ["String", "Backtracking", "Design", "Iterator"], "similar_problems": []},
    {"number": 1297, "slug": "maximum-number-of-occurrences-of-a-substring", "title": "Maximum Number of Occurrences of a Substring", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "rearrange-characters-to-make-target-string", "title": "Rearrange Characters to Make Target String", "difficulty": "Easy"}]},
    {"number": 1307, "slug": "verbal-arithmetic-puzzle", "title": "Verbal Arithmetic Puzzle", "difficulty": "Hard", "tags": ["Array", "Math", "String", "Backtracking"], "similar_problems": []},
    {"number": 1309, "slug": "decrypt-string-from-alphabet-to-integer-mapping", "title": "Decrypt String from Alphabet to Integer Mapping", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1312, "slug": "minimum-insertion-steps-to-make-a-string-palindrome", "title": "Minimum Insertion Steps to Make a String Palindrome", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-number-of-moves-to-make-palindrome", "title": "Minimum Number of Moves to Make Palindrome", "difficulty": "Hard"}]},
    {"number": 1316, "slug": "distinct-echo-substrings", "title": "Distinct Echo Substrings", "difficulty": "Hard", "tags": ["String", "Trie", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "find-substring-with-given-hash-value", "title": "Find Substring With Given Hash Value", "difficulty": "Hard"}]},
    {"number": 1320, "slug": "minimum-distance-to-type-a-word-using-two-fingers", "title": "Minimum Distance to Type a Word Using Two Fingers", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-time-to-type-word-using-special-typewriter", "title": "Minimum Time to Type Word Using Special Typewriter", "difficulty": "Easy"}]},
    {"number": 1324, "slug": "print-words-vertically", "title": "Print Words Vertically", "difficulty": "Medium", "tags": ["Array", "String", "Simulation"], "similar_problems": []},
    {"number": 1328, "slug": "break-a-palindrome", "title": "Break a Palindrome", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1332, "slug": "remove-palindromic-subsequences", "title": "Remove Palindromic Subsequences", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 1347, "slug": "minimum-number-of-steps-to-make-two-strings-anagram", "title": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium"}, {"slug": "minimum-number-of-steps-to-make-two-strings-anagram-ii", "title": "Minimum Number of Steps to Make Two Strings Anagram II", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-character-frequencies-equal", "title": "Minimum Operations to Make Character Frequencies Equal", "difficulty": "Hard"}]},
    {"number": 1358, "slug": "number-of-substrings-containing-all-three-characters", "title": "Number of Substrings Containing All Three Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "vowels-of-all-substrings", "title": "Vowels of All Substrings", "difficulty": "Medium"}, {"slug": "count-complete-substrings", "title": "Count Complete Substrings", "difficulty": "Hard"}]},
    {"number": 1360, "slug": "number-of-days-between-two-dates", "title": "Number of Days Between Two Dates", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy"}]},
    {"number": 1366, "slug": "rank-teams-by-votes", "title": "Rank Teams by Votes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting", "Counting"], "similar_problems": [{"slug": "online-election", "title": "Online Election", "difficulty": "Medium"}]},
    {"number": 1370, "slug": "increasing-decreasing-string", "title": "Increasing Decreasing String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1371, "slug": "find-the-longest-substring-containing-vowels-in-even-counts", "title": "Find the Longest Substring Containing Vowels in Even Counts", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "similar_problems": []},
    {"number": 1374, "slug": "generate-a-string-with-characters-that-have-odd-counts", "title": "Generate a String With Characters That Have Odd Counts", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1392, "slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard", "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "sum-of-scores-of-built-strings", "title": "Sum of Scores of Built Strings", "difficulty": "Hard"}, {"slug": "maximum-deletions-on-a-string", "title": "Maximum Deletions on a String", "difficulty": "Hard"}, {"slug": "minimum-time-to-revert-word-to-initial-state-ii", "title": "Minimum Time to Revert Word to Initial State II", "difficulty": "Hard"}, {"slug": "minimum-time-to-revert-word-to-initial-state-i", "title": "Minimum Time to Revert Word to Initial State I", "difficulty": "Medium"}]},
    {"number": 1396, "slug": "design-underground-system", "title": "Design Underground System", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design"], "similar_problems": [{"slug": "design-bitset", "title": "Design Bitset", "difficulty": "Medium"}]},
    {"number": 1397, "slug": "find-all-good-strings", "title": "Find All Good Strings", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "String Matching"], "similar_problems": []},
    {"number": 1400, "slug": "construct-k-palindrome-strings", "title": "Construct K Palindrome Strings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Counting"], "similar_problems": []},
    {"number": 1404, "slug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one", "title": "Number of Steps to Reduce a Number in Binary Representation to One", "difficulty": "Medium", "tags": ["String", "Bit Manipulation", "Simulation"], "similar_problems": [{"slug": "minimum-moves-to-reach-target-score", "title": "Minimum Moves to Reach Target Score", "difficulty": "Medium"}]},
    {"number": 1405, "slug": "longest-happy-string", "title": "Longest Happy String", "difficulty": "Medium", "tags": ["String", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}]},
    {"number": 1408, "slug": "string-matching-in-an-array", "title": "String Matching in an Array", "difficulty": "Easy", "tags": ["Array", "String", "String Matching"], "similar_problems": [{"slug": "substring-xor-queries", "title": "Substring XOR Queries", "difficulty": "Medium"}]},
    {"number": 1410, "slug": "html-entity-parser", "title": "HTML Entity Parser", "difficulty": "Medium", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1415, "slug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n", "title": "The k-th Lexicographical String of All Happy Strings of Length n", "difficulty": "Medium", "tags": ["String", "Backtracking"], "similar_problems": []},
    {"number": 1416, "slug": "restore-the-array", "title": "Restore The Array", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard"}, {"slug": "number-of-beautiful-partitions", "title": "Number of Beautiful Partitions", "difficulty": "Hard"}]},
    {"number": 1417, "slug": "reformat-the-string", "title": "Reformat The String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1418, "slug": "display-table-of-food-orders-in-a-restaurant", "title": "Display Table of Food Orders in a Restaurant", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 1419, "slug": "minimum-number-of-frogs-croaking", "title": "Minimum Number of Frogs Croaking", "difficulty": "Medium", "tags": ["String", "Counting"], "similar_problems": [{"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}]},
    {"number": 1422, "slug": "maximum-score-after-splitting-a-string", "title": "Maximum Score After Splitting a String", "difficulty": "Easy", "tags": ["String", "Prefix Sum"], "similar_problems": []},
    {"number": 1427, "slug": "perform-string-shifts", "title": "Perform String Shifts", "difficulty": "Easy", "tags": ["Array", "Math", "String"], "similar_problems": []},
    {"number": 1433, "slug": "check-if-a-string-can-break-another-string", "title": "Check If a String Can Break Another String", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1436, "slug": "destination-city", "title": "Destination City", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 1446, "slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "longest-continuous-increasing-subsequence", "title": "Longest Continuous Increasing Subsequence", "difficulty": "Easy"}, {"slug": "check-if-an-array-is-consecutive", "title": "Check if an Array Is Consecutive", "difficulty": "Easy"}, {"slug": "count-number-of-homogenous-substrings", "title": "Count Number of Homogenous Substrings", "difficulty": "Medium"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "minimum-number-of-chairs-in-a-waiting-room", "title": "Minimum Number of Chairs in a Waiting Room", "difficulty": "Easy"}]},
    {"number": 1447, "slug": "simplified-fractions", "title": "Simplified Fractions", "difficulty": "Medium", "tags": ["Math", "String", "Number Theory"], "similar_problems": []},
    {"number": 1451, "slug": "rearrange-words-in-a-sentence", "title": "Rearrange Words in a Sentence", "difficulty": "Medium", "tags": ["String", "Sorting"], "similar_problems": []},
    {"number": 1452, "slug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list", "title": "People Whose List of Favorite Companies Is Not a Subset of Another List", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 1455, "slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy"}, {"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 1456, "slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": [{"slug": "maximum-white-tiles-covered-by-a-carpet", "title": "Maximum White Tiles Covered by a Carpet", "difficulty": "Medium"}, {"slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy"}, {"slug": "length-of-the-longest-alphabetical-continuous-substring", "title": "Length of the Longest Alphabetical Continuous Substring", "difficulty": "Medium"}]},
    {"number": 1461, "slug": "check-if-a-string-contains-all-binary-codes-of-size-k", "title": "Check If a String Contains All Binary Codes of Size K", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Rolling Hash", "Hash Function"], "similar_problems": []},
    {"number": 1487, "slug": "making-file-names-unique", "title": "Making File Names Unique", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 1496, "slug": "path-crossing", "title": "Path Crossing", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1505, "slug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", "title": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits", "difficulty": "Hard", "tags": ["String", "Greedy", "Binary Indexed Tree", "Segment Tree"], "similar_problems": []},
    {"number": 1507, "slug": "reformat-date", "title": "Reformat Date", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1513, "slug": "number-of-substrings-with-only-1s", "title": "Number of Substrings With Only 1s", "difficulty": "Medium", "tags": ["Math", "String"], "similar_problems": [{"slug": "count-number-of-homogenous-substrings", "title": "Count Number of Homogenous Substrings", "difficulty": "Medium"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}]},
    {"number": 1520, "slug": "maximum-number-of-non-overlapping-substrings", "title": "Maximum Number of Non-Overlapping Substrings", "difficulty": "Hard", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 1525, "slug": "number-of-good-ways-to-split-a-string", "title": "Number of Good Ways to Split a String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Bit Manipulation"], "similar_problems": []},
    {"number": 1528, "slug": "shuffle-string", "title": "Shuffle String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1529, "slug": "minimum-suffix-flips", "title": "Minimum Suffix Flips", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii", "title": "Minimum Operations to Make Binary Array Elements Equal to One II", "difficulty": "Medium"}]},
    {"number": 1531, "slug": "string-compression-ii", "title": "String Compression II", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "string-compression-iii", "title": "String Compression III", "difficulty": "Medium"}]},
    {"number": 1540, "slug": "can-convert-string-in-k-moves", "title": "Can Convert String in K Moves", "difficulty": "Medium", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "difficulty": "Medium"}, {"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}]},
    {"number": 1541, "slug": "minimum-insertions-to-balance-a-parentheses-string", "title": "Minimum Insertions to Balance a Parentheses String", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 1542, "slug": "find-longest-awesome-substring", "title": "Find Longest Awesome Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Bit Manipulation"], "similar_problems": []},
    {"number": 1544, "slug": "make-the-string-great", "title": "Make The String Great", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1545, "slug": "find-kth-bit-in-nth-binary-string", "title": "Find Kth Bit in Nth Binary String", "difficulty": "Medium", "tags": ["String", "Recursion", "Simulation"], "similar_problems": []},
    {"number": 1554, "slug": "strings-differ-by-one-character", "title": "Strings Differ by One Character", "difficulty": "Medium", "tags": ["Hash Table", "String", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "count-words-obtained-after-adding-a-letter", "title": "Count Words Obtained After Adding a Letter", "difficulty": "Medium"}]},
    {"number": 1556, "slug": "thousand-separator", "title": "Thousand Separator", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1573, "slug": "number-of-ways-to-split-a-string", "title": "Number of Ways to Split a String", "difficulty": "Medium", "tags": ["Math", "String"], "similar_problems": [{"slug": "split-array-with-equal-sum", "title": "Split Array with Equal Sum", "difficulty": "Hard"}]},
    {"number": 1576, "slug": "replace-all-s-to-avoid-consecutive-repeating-characters", "title": "Replace All ?'s to Avoid Consecutive Repeating Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1578, "slug": "minimum-time-to-make-rope-colorful", "title": "Minimum Time to Make Rope Colorful", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 1585, "slug": "check-if-string-is-transformable-with-substring-sort-operations", "title": "Check If String Is Transformable With Substring Sort Operations", "difficulty": "Hard", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1592, "slug": "rearrange-spaces-between-words", "title": "Rearrange Spaces Between Words", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}]},
    {"number": 1593, "slug": "split-a-string-into-the-max-number-of-unique-substrings", "title": "Split a String Into the Max Number of Unique Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": []},
    {"number": 1597, "slug": "build-binary-expression-tree-from-infix-expression", "title": "Build Binary Expression Tree From Infix Expression", "difficulty": "Hard", "tags": ["String", "Stack", "Tree", "Binary Tree"], "similar_problems": [{"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}, {"slug": "check-if-two-expression-trees-are-equivalent", "title": "Check If Two Expression Trees are Equivalent", "difficulty": "Medium"}]},
    {"number": 1598, "slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy", "tags": ["Array", "String", "Stack"], "similar_problems": [{"slug": "baseball-game", "title": "Baseball Game", "difficulty": "Easy"}, {"slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy"}]},
    {"number": 1604, "slug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period", "title": "Alert Using Same Key-Card Three or More Times in a One Hour Period", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 1614, "slug": "maximum-nesting-depth-of-the-parentheses", "title": "Maximum Nesting Depth of the Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "maximum-nesting-depth-of-two-valid-parentheses-strings", "title": "Maximum Nesting Depth of Two Valid Parentheses Strings", "difficulty": "Medium"}]},
    {"number": 1616, "slug": "split-two-strings-to-make-palindrome", "title": "Split Two Strings to Make Palindrome", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 1618, "slug": "maximum-font-to-fit-a-sentence-in-a-screen", "title": "Maximum Font to Fit a Sentence in a Screen", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Interactive"], "similar_problems": []},
    {"number": 1624, "slug": "largest-substring-between-two-equal-characters", "title": "Largest Substring Between Two Equal Characters", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1625, "slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium", "tags": ["String", "Depth-First Search", "Breadth-First Search", "Enumeration"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-a-swap", "title": "Lexicographically Smallest String After a Swap", "difficulty": "Easy"}]},
    {"number": 1629, "slug": "slowest-key", "title": "Slowest Key", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1638, "slug": "count-substrings-that-differ-by-one-character", "title": "Count Substrings That Differ by One Character", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Enumeration"], "similar_problems": [{"slug": "count-words-obtained-after-adding-a-letter", "title": "Count Words Obtained After Adding a Letter", "difficulty": "Medium"}]},
    {"number": 1639, "slug": "number-of-ways-to-form-a-target-string-given-a-dictionary", "title": "Number of Ways to Form a Target String Given a Dictionary", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": []},
    {"number": 1647, "slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-deletions-to-make-array-beautiful", "title": "Minimum Deletions to Make Array Beautiful", "difficulty": "Medium"}, {"slug": "removing-minimum-and-maximum-from-array", "title": "Removing Minimum and Maximum From Array", "difficulty": "Medium"}, {"slug": "remove-letter-to-equalize-frequency", "title": "Remove Letter To Equalize Frequency", "difficulty": "Easy"}, {"slug": "minimum-deletions-to-make-string-k-special", "title": "Minimum Deletions to Make String K-Special", "difficulty": "Medium"}]},
    {"number": 1653, "slug": "minimum-deletions-to-make-string-balanced", "title": "Minimum Deletions to Make String Balanced", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Stack"], "similar_problems": [{"slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy"}]},
    {"number": 1657, "slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting", "Counting"], "similar_problems": [{"slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy"}, {"slug": "minimum-swaps-to-make-strings-equal", "title": "Minimum Swaps to Make Strings Equal", "difficulty": "Medium"}, {"slug": "minimum-number-of-steps-to-make-two-strings-anagram", "title": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": "Medium"}]},
    {"number": 1662, "slug": "check-if-two-string-arrays-are-equivalent", "title": "Check If Two String Arrays are Equivalent", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "check-if-an-original-string-exists-given-two-encoded-strings", "title": "Check if an Original String Exists Given Two Encoded Strings", "difficulty": "Hard"}]},
    {"number": 1663, "slug": "smallest-string-with-a-given-numeric-value", "title": "Smallest String With A Given Numeric Value", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1668, "slug": "maximum-repeating-substring", "title": "Maximum Repeating Substring", "difficulty": "Easy", "tags": ["String", "Dynamic Programming", "String Matching"], "similar_problems": [{"slug": "detect-pattern-of-length-m-repeated-k-or-more-times", "title": "Detect Pattern of Length M Repeated K or More Times", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-make-word-k-periodic", "title": "Minimum Number of Operations to Make Word K-Periodic", "difficulty": "Medium"}]},
    {"number": 1678, "slug": "goal-parser-interpretation", "title": "Goal Parser Interpretation", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1682, "slug": "longest-palindromic-subsequence-ii", "title": "Longest Palindromic Subsequence II", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}]},
    {"number": 1684, "slug": "count-the-number-of-consistent-strings", "title": "Count the Number of Consistent Strings", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "count-pairs-of-similar-strings", "title": "Count Pairs Of Similar Strings", "difficulty": "Easy"}]},
    {"number": 1689, "slug": "partitioning-into-minimum-number-of-deci-binary-numbers", "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1694, "slug": "reformat-phone-number", "title": "Reformat Phone Number", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1698, "slug": "number-of-distinct-substrings-in-a-string", "title": "Number of Distinct Substrings in a String", "difficulty": "Medium", "tags": ["String", "Trie", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": []},
    {"number": 1702, "slug": "maximum-binary-string-after-change", "title": "Maximum Binary String After Change", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "longest-binary-subsequence-less-than-or-equal-to-k", "title": "Longest Binary Subsequence Less Than or Equal to K", "difficulty": "Medium"}]},
    {"number": 1704, "slug": "determine-if-string-halves-are-alike", "title": "Determine if String Halves Are Alike", "difficulty": "Easy", "tags": ["String", "Counting"], "similar_problems": []},
    {"number": 1717, "slug": "maximum-score-from-removing-substrings", "title": "Maximum Score From Removing Substrings", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "count-words-obtained-after-adding-a-letter", "title": "Count Words Obtained After Adding a Letter", "difficulty": "Medium"}]},
    {"number": 1736, "slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy"}, {"slug": "latest-time-you-can-obtain-after-replacing-characters", "title": "Latest Time You Can Obtain After Replacing Characters", "difficulty": "Easy"}]},
    {"number": 1737, "slug": "change-minimum-characters-to-satisfy-one-of-three-conditions", "title": "Change Minimum Characters to Satisfy One of Three Conditions", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting", "Prefix Sum"], "similar_problems": []},
    {"number": 1745, "slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium"}, {"slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iii", "title": "Palindrome Partitioning III", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 1750, "slug": "minimum-length-of-string-after-deleting-similar-ends", "title": "Minimum Length of String After Deleting Similar Ends", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 1754, "slug": "largest-merge-of-two-strings", "title": "Largest Merge Of Two Strings", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}, {"slug": "decremental-string-concatenation", "title": "Decremental String Concatenation", "difficulty": "Medium"}]},
    {"number": 1758, "slug": "minimum-changes-to-make-alternating-binary-string", "title": "Minimum Changes To Make Alternating Binary String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "remove-adjacent-almost-equal-characters", "title": "Remove Adjacent Almost-Equal Characters", "difficulty": "Medium"}]},
    {"number": 1759, "slug": "count-number-of-homogenous-substrings", "title": "Count Number of Homogenous Substrings", "difficulty": "Medium", "tags": ["Math", "String"], "similar_problems": [{"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}, {"slug": "number-of-substrings-with-only-1s", "title": "Number of Substrings With Only 1s", "difficulty": "Medium"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "count-the-number-of-good-subarrays", "title": "Count the Number of Good Subarrays", "difficulty": "Medium"}]},
    {"number": 1763, "slug": "longest-nice-substring", "title": "Longest Nice Substring", "difficulty": "Easy", "tags": ["Hash Table", "String", "Divide and Conquer", "Bit Manipulation", "Sliding Window"], "similar_problems": [{"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}]},
    {"number": 1768, "slug": "merge-strings-alternately", "title": "Merge Strings Alternately", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium"}]},
    {"number": 1769, "slug": "minimum-number-of-operations-to-move-all-balls-to-each-box", "title": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": [{"slug": "minimum-cost-to-move-chips-to-the-same-position", "title": "Minimum Cost to Move Chips to The Same Position", "difficulty": "Easy"}, {"slug": "minimum-moves-to-spread-stones-over-grid", "title": "Minimum Moves to Spread Stones Over Grid", "difficulty": "Medium"}]},
    {"number": 1771, "slug": "maximize-palindrome-length-from-subsequences", "title": "Maximize Palindrome Length From Subsequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}]},
    {"number": 1772, "slug": "sort-features-by-popularity", "title": "Sort Features by Popularity", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}]},
    {"number": 1773, "slug": "count-items-matching-a-rule", "title": "Count Items Matching a Rule", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1781, "slug": "sum-of-beauty-of-all-substrings", "title": "Sum of Beauty of All Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "substrings-that-begin-and-end-with-the-same-letter", "title": "Substrings That Begin and End With the Same Letter", "difficulty": "Medium"}]},
    {"number": 1784, "slug": "check-if-binary-string-has-at-most-one-segment-of-ones", "title": "Check if Binary String Has at Most One Segment of Ones", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy"}]},
    {"number": 1790, "slug": "check-if-one-string-swap-can-make-strings-equal", "title": "Check if One String Swap Can Make Strings Equal", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}, {"slug": "count-almost-equal-pairs-i", "title": "Count Almost Equal Pairs I", "difficulty": "Medium"}]},
    {"number": 1794, "slug": "count-pairs-of-equal-substrings-with-minimum-difference", "title": "Count Pairs of Equal Substrings With Minimum Difference", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": []},
    {"number": 1796, "slug": "second-largest-digit-in-a-string", "title": "Second Largest Digit in a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 1804, "slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 1805, "slug": "number-of-different-integers-in-a-string", "title": "Number of Different Integers in a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "longest-subarray-with-maximum-bitwise-and", "title": "Longest Subarray With Maximum Bitwise AND", "difficulty": "Medium"}]},
    {"number": 1807, "slug": "evaluate-the-bracket-pairs-of-a-string", "title": "Evaluate the Bracket Pairs of a String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "apply-substitutions", "title": "Apply Substitutions", "difficulty": "Medium"}]},
    {"number": 1812, "slug": "determine-color-of-a-chessboard-square", "title": "Determine Color of a Chessboard Square", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "check-if-two-chessboard-squares-have-the-same-color", "title": "Check if Two Chessboard Squares Have the Same Color", "difficulty": "Easy"}]},
    {"number": 1813, "slug": "sentence-similarity-iii", "title": "Sentence Similarity III", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String"], "similar_problems": []},
    {"number": 1816, "slug": "truncate-sentence", "title": "Truncate Sentence", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1830, "slug": "minimum-number-of-operations-to-make-string-sorted", "title": "Minimum Number of Operations to Make String Sorted", "difficulty": "Hard", "tags": ["Math", "String", "Combinatorics"], "similar_problems": []},
    {"number": 1832, "slug": "check-if-the-sentence-is-pangram", "title": "Check if the Sentence Is Pangram", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1839, "slug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": [{"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "difficulty": "Medium"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i", "title": "Count of Substrings Containing Every Vowel and K Consonants I", "difficulty": "Medium"}]},
    {"number": 1842, "slug": "next-palindrome-using-same-digits", "title": "Next Palindrome Using Same Digits", "difficulty": "Hard", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium"}, {"slug": "find-the-closest-palindrome", "title": "Find the Closest Palindrome", "difficulty": "Hard"}]},
    {"number": 1844, "slug": "replace-all-digits-with-characters", "title": "Replace All Digits with Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}]},
    {"number": 1849, "slug": "splitting-a-string-into-descending-consecutive-values", "title": "Splitting a String Into Descending Consecutive Values", "difficulty": "Medium", "tags": ["String", "Backtracking", "Enumeration"], "similar_problems": []},
    {"number": 1850, "slug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number", "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}]},
    {"number": 1858, "slug": "longest-word-with-all-prefixes", "title": "Longest Word With All Prefixes", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Trie"], "similar_problems": [{"slug": "longest-word-in-dictionary", "title": "Longest Word in Dictionary", "difficulty": "Medium"}]},
    {"number": 1859, "slug": "sorting-the-sentence", "title": "Sorting the Sentence", "difficulty": "Easy", "tags": ["String", "Sorting"], "similar_problems": [{"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 1864, "slug": "minimum-number-of-swaps-to-make-the-binary-string-alternating", "title": "Minimum Number of Swaps to Make the Binary String Alternating", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1869, "slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "count-subarrays-with-more-ones-than-zeros", "title": "Count Subarrays With More Ones Than Zeros", "difficulty": "Medium"}, {"slug": "check-if-binary-string-has-at-most-one-segment-of-ones", "title": "Check if Binary String Has at Most One Segment of Ones", "difficulty": "Easy"}]},
    {"number": 1871, "slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-iv", "title": "Jump Game IV", "difficulty": "Hard"}, {"slug": "jump-game-v", "title": "Jump Game V", "difficulty": "Hard"}, {"slug": "jump-game-vi", "title": "Jump Game VI", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "count-vowel-strings-in-ranges", "title": "Count Vowel Strings in Ranges", "difficulty": "Medium"}, {"slug": "maximum-number-of-jumps-to-reach-the-last-index", "title": "Maximum Number of Jumps to Reach the Last Index", "difficulty": "Medium"}]},
    {"number": 1876, "slug": "substrings-of-size-three-with-distinct-characters", "title": "Substrings of Size Three with Distinct Characters", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sliding Window", "Counting"], "similar_problems": []},
    {"number": 1880, "slug": "check-if-word-equals-summation-of-two-words", "title": "Check if Word Equals Summation of Two Words", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1881, "slug": "maximum-value-after-insertion", "title": "Maximum Value after Insertion", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1888, "slug": "minimum-number-of-flips-to-make-the-binary-string-alternating", "title": "Minimum Number of Flips to Make the Binary String Alternating", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Sliding Window"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-alternating", "title": "Minimum Operations to Make the Array Alternating", "difficulty": "Medium"}]},
    {"number": 1896, "slug": "minimum-cost-to-change-the-final-value-of-expression", "title": "Minimum Cost to Change the Final Value of Expression", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "Stack"], "similar_problems": []},
    {"number": 1897, "slug": "redistribute-characters-to-make-all-strings-equal", "title": "Redistribute Characters to Make All Strings Equal", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1898, "slug": "maximum-number-of-removable-characters", "title": "Maximum Number of Removable Characters", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String", "Binary Search"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}]},
    {"number": 1903, "slug": "largest-odd-number-in-string", "title": "Largest Odd Number in String", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "largest-3-same-digit-number-in-string", "title": "Largest 3-Same-Digit Number in String", "difficulty": "Easy"}]},
    {"number": 1904, "slug": "the-number-of-full-rounds-you-have-played", "title": "The Number of Full Rounds You Have Played", "difficulty": "Medium", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1910, "slug": "remove-all-occurrences-of-a-substring", "title": "Remove All Occurrences of a Substring", "difficulty": "Medium", "tags": ["String", "Stack", "Simulation"], "similar_problems": [{"slug": "maximum-deletions-on-a-string", "title": "Maximum Deletions on a String", "difficulty": "Hard"}]},
    {"number": 1915, "slug": "number-of-wonderful-substrings", "title": "Number of Wonderful Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "similar_problems": []},
    {"number": 1927, "slug": "sum-game", "title": "Sum Game", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Game Theory"], "similar_problems": []},
    {"number": 1930, "slug": "unique-length-3-palindromic-subsequences", "title": "Unique Length-3 Palindromic Subsequences", "difficulty": "Medium", "tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"], "similar_problems": [{"slug": "count-palindromic-subsequences", "title": "Count Palindromic Subsequences", "difficulty": "Hard"}]},
    {"number": 1933, "slug": "check-if-string-is-decomposable-into-value-equal-substrings", "title": "Check if String Is Decomposable Into Value-Equal Substrings", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1935, "slug": "maximum-number-of-words-you-can-type", "title": "Maximum Number of Words You Can Type", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1941, "slug": "check-if-all-characters-have-equal-number-of-occurrences", "title": "Check if All Characters Have Equal Number of Occurrences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "rings-and-rods", "title": "Rings and Rods", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 1945, "slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}, {"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy"}, {"slug": "minimum-element-after-replacement-with-digit-sum", "title": "Minimum Element After Replacement With Digit Sum", "difficulty": "Easy"}]},
    {"number": 1946, "slug": "largest-number-after-mutating-substring", "title": "Largest Number After Mutating Substring", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 1948, "slug": "delete-duplicate-folders-in-system", "title": "Delete Duplicate Folders in System", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Trie", "Hash Function"], "similar_problems": [{"slug": "find-duplicate-file-in-system", "title": "Find Duplicate File in System", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}]},
    {"number": 1957, "slug": "delete-characters-to-make-fancy-string", "title": "Delete Characters to Make Fancy String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "find-maximum-removals-from-source-string", "title": "Find Maximum Removals From Source String", "difficulty": "Medium"}]},
    {"number": 1960, "slug": "maximum-product-of-the-length-of-two-palindromic-substrings", "title": "Maximum Product of the Length of Two Palindromic Substrings", "difficulty": "Hard", "tags": ["String", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}]},
    {"number": 1961, "slug": "check-if-string-is-a-prefix-of-array", "title": "Check If String Is a Prefix of Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 1963, "slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "minimum-add-to-make-parentheses-valid", "title": "Minimum Add to Make Parentheses Valid", "difficulty": "Medium"}, {"slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium"}, {"slug": "minimum-insertions-to-balance-a-parentheses-string", "title": "Minimum Insertions to Balance a Parentheses String", "difficulty": "Medium"}]},
    {"number": 1967, "slug": "number-of-strings-that-appear-as-substrings-in-word", "title": "Number of Strings That Appear as Substrings in Word", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1974, "slug": "minimum-time-to-type-word-using-special-typewriter", "title": "Minimum Time to Type Word Using Special Typewriter", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-distance-to-type-a-word-using-two-fingers", "title": "Minimum Distance to Type a Word Using Two Fingers", "difficulty": "Hard"}]},
    {"number": 1977, "slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Suffix Array"], "similar_problems": [{"slug": "decode-ways", "title": "Decode Ways", "difficulty": "Medium"}, {"slug": "decode-ways-ii", "title": "Decode Ways II", "difficulty": "Hard"}, {"slug": "restore-the-array", "title": "Restore The Array", "difficulty": "Hard"}, {"slug": "number-of-beautiful-partitions", "title": "Number of Beautiful Partitions", "difficulty": "Hard"}]},
    {"number": 1980, "slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}]},
    {"number": 1985, "slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium", "tags": ["Array", "String", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}]},
    {"number": 1987, "slug": "number-of-unique-good-subsequences", "title": "Number of Unique Good Subsequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "distinct-subsequences", "title": "Distinct Subsequences", "difficulty": "Hard"}, {"slug": "distinct-subsequences-ii", "title": "Distinct Subsequences II", "difficulty": "Hard"}]},
    {"number": 2000, "slug": "reverse-prefix-of-word", "title": "Reverse Prefix of Word", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Stack"], "similar_problems": []},
    {"number": 2002, "slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-substrings", "title": "Maximum Product of the Length of Two Palindromic Substrings", "difficulty": "Hard"}, {"slug": "maximum-points-in-an-archery-competition", "title": "Maximum Points in an Archery Competition", "difficulty": "Medium"}]},
    {"number": 2011, "slug": "final-value-of-variable-after-performing-operations", "title": "Final Value of Variable After Performing Operations", "difficulty": "Easy", "tags": ["Array", "String", "Simulation"], "similar_problems": []},
    {"number": 2014, "slug": "longest-subsequence-repeated-k-times", "title": "Longest Subsequence Repeated k Times", "difficulty": "Hard", "tags": ["String", "Backtracking", "Greedy", "Counting", "Enumeration"], "similar_problems": [{"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 2019, "slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Math", "String", "Dynamic Programming", "Stack", "Memoization"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}]},
    {"number": 2023, "slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}]},
    {"number": 2024, "slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium", "tags": ["String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "minimum-number-of-days-to-make-m-bouquets", "title": "Minimum Number of Days to Make m Bouquets", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}]},
    {"number": 2027, "slug": "minimum-moves-to-convert-string", "title": "Minimum Moves to Convert String", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "difficulty": "Medium"}, {"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}]},
    {"number": 2030, "slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium"}, {"slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard"}, {"slug": "find-the-lexicographically-smallest-valid-sequence", "title": "Find the Lexicographically Smallest Valid Sequence", "difficulty": "Medium"}]},
    {"number": 2038, "slug": "remove-colored-pieces-if-both-neighbors-are-the-same-color", "title": "Remove Colored Pieces if Both Neighbors are the Same Color", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Game Theory"], "similar_problems": [{"slug": "longest-subarray-with-maximum-bitwise-and", "title": "Longest Subarray With Maximum Bitwise AND", "difficulty": "Medium"}]},
    {"number": 2042, "slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}, {"slug": "sorting-the-sentence", "title": "Sorting the Sentence", "difficulty": "Easy"}, {"slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy"}]},
    {"number": 2047, "slug": "number-of-valid-words-in-a-sentence", "title": "Number of Valid Words in a Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "maximum-number-of-words-found-in-sentences", "title": "Maximum Number of Words Found in Sentences", "difficulty": "Easy"}]},
    {"number": 2053, "slug": "kth-distinct-string-in-an-array", "title": "Kth Distinct String in an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}]},
    {"number": 2055, "slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "can-make-palindrome-from-substring", "title": "Can Make Palindrome from Substring", "difficulty": "Medium"}]},
    {"number": 2056, "slug": "number-of-valid-move-combinations-on-chessboard", "title": "Number of Valid Move Combinations On Chessboard", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Simulation"], "similar_problems": []},
    {"number": 2060, "slug": "check-if-an-original-string-exists-given-two-encoded-strings", "title": "Check if an Original String Exists Given Two Encoded Strings", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy"}, {"slug": "check-if-two-string-arrays-are-equivalent", "title": "Check If Two String Arrays are Equivalent", "difficulty": "Easy"}]},
    {"number": 2062, "slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "number-of-substrings-with-only-1s", "title": "Number of Substrings With Only 1s", "difficulty": "Medium"}, {"slug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "difficulty": "Medium"}, {"slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "difficulty": "Medium"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i", "title": "Count of Substrings Containing Every Vowel and K Consonants I", "difficulty": "Medium"}]},
    {"number": 2063, "slug": "vowels-of-all-substrings", "title": "Vowels of All Substrings", "difficulty": "Medium", "tags": ["Math", "String", "Dynamic Programming", "Combinatorics"], "similar_problems": [{"slug": "number-of-substrings-containing-all-three-characters", "title": "Number of Substrings Containing All Three Characters", "difficulty": "Medium"}, {"slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard"}]},
    {"number": 2067, "slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window", "Counting"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}, {"slug": "unique-substrings-with-equal-digit-frequency", "title": "Unique Substrings With Equal Digit Frequency", "difficulty": "Medium"}]},
    {"number": 2068, "slug": "check-whether-two-strings-are-almost-equivalent", "title": "Check Whether Two Strings are Almost Equivalent", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "find-the-occurrence-of-first-almost-equal-substring", "title": "Find the Occurrence of First Almost Equal Substring", "difficulty": "Hard"}]},
    {"number": 2075, "slug": "decode-the-slanted-ciphertext", "title": "Decode the Slanted Ciphertext", "difficulty": "Medium", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "diagonal-traverse", "title": "Diagonal Traverse", "difficulty": "Medium"}]},
    {"number": 2083, "slug": "substrings-that-begin-and-end-with-the-same-letter", "title": "Substrings That Begin and End With the Same Letter", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Counting", "Prefix Sum"], "similar_problems": [{"slug": "number-of-good-pairs", "title": "Number of Good Pairs", "difficulty": "Easy"}, {"slug": "sum-of-beauty-of-all-substrings", "title": "Sum of Beauty of All Substrings", "difficulty": "Medium"}, {"slug": "count-pairs-in-two-arrays", "title": "Count Pairs in Two Arrays", "difficulty": "Medium"}, {"slug": "unique-substrings-with-equal-digit-frequency", "title": "Unique Substrings With Equal Digit Frequency", "difficulty": "Medium"}]},
    {"number": 2085, "slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "uncommon-words-from-two-sentences", "title": "Uncommon Words from Two Sentences", "difficulty": "Easy"}, {"slug": "kth-distinct-string-in-an-array", "title": "Kth Distinct String in an Array", "difficulty": "Easy"}]},
    {"number": 2086, "slug": "minimum-number-of-food-buckets-to-feed-the-hamsters", "title": "Minimum Number of Food Buckets to Feed the Hamsters", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-people-that-can-be-caught-in-tag", "title": "Maximum Number of People That Can Be Caught in Tag", "difficulty": "Medium"}, {"slug": "brightest-position-on-street", "title": "Brightest Position on Street", "difficulty": "Medium"}]},
    {"number": 2096, "slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium", "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"}, {"slug": "binary-tree-paths", "title": "Binary Tree Paths", "difficulty": "Easy"}, {"slug": "find-distance-in-a-binary-tree", "title": "Find Distance in a Binary Tree", "difficulty": "Medium"}]},
    {"number": 2103, "slug": "rings-and-rods", "title": "Rings and Rods", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "check-if-all-characters-have-equal-number-of-occurrences", "title": "Check if All Characters Have Equal Number of Occurrences", "difficulty": "Easy"}]},
    {"number": 2108, "slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}]},
    {"number": 2109, "slug": "adding-spaces-to-a-string", "title": "Adding Spaces to a String", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String", "Simulation"], "similar_problems": []},
    {"number": 2114, "slug": "maximum-number-of-words-found-in-sentences", "title": "Maximum Number of Words Found in Sentences", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "number-of-valid-words-in-a-sentence", "title": "Number of Valid Words in a Sentence", "difficulty": "Easy"}]},
    {"number": 2115, "slug": "find-all-possible-recipes-from-given-supplies", "title": "Find All Possible Recipes from Given Supplies", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}]},
    {"number": 2116, "slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium"}, {"slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium"}, {"slug": "check-if-there-is-a-valid-parentheses-string-path", "title": " Check if There Is a Valid Parentheses String Path", "difficulty": "Hard"}]},
    {"number": 2120, "slug": "execution-of-all-suffix-instructions-staying-in-a-grid", "title": "Execution of All Suffix Instructions Staying in a Grid", "difficulty": "Medium", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "out-of-boundary-paths", "title": "Out of Boundary Paths", "difficulty": "Medium"}, {"slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy"}]},
    {"number": 2124, "slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "minimum-deletions-to-make-string-balanced", "title": "Minimum Deletions to Make String Balanced", "difficulty": "Medium"}, {"slug": "check-if-array-is-sorted-and-rotated", "title": "Check if Array Is Sorted and Rotated", "difficulty": "Easy"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 2125, "slug": "number-of-laser-beams-in-a-bank", "title": "Number of Laser Beams in a Bank", "difficulty": "Medium", "tags": ["Array", "Math", "String", "Matrix"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}]},
    {"number": 2129, "slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy"}, {"slug": "to-lower-case", "title": "To Lower Case", "difficulty": "Easy"}]},
    {"number": 2131, "slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Greedy", "Counting"], "similar_problems": [{"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 2135, "slug": "count-words-obtained-after-adding-a-letter", "title": "Count Words Obtained After Adding a Letter", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "strings-differ-by-one-character", "title": "Strings Differ by One Character", "difficulty": "Medium"}, {"slug": "count-substrings-that-differ-by-one-character", "title": "Count Substrings That Differ by One Character", "difficulty": "Medium"}, {"slug": "maximum-score-from-removing-substrings", "title": "Maximum Score From Removing Substrings", "difficulty": "Medium"}]},
    {"number": 2138, "slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}, {"slug": "positions-of-large-groups", "title": "Positions of Large Groups", "difficulty": "Easy"}]},
    {"number": 2147, "slug": "number-of-ways-to-divide-a-long-corridor", "title": "Number of Ways to Divide a Long Corridor", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming"], "similar_problems": [{"slug": "decode-ways-ii", "title": "Decode Ways II", "difficulty": "Hard"}, {"slug": "minimum-cost-to-cut-a-stick", "title": "Minimum Cost to Cut a Stick", "difficulty": "Hard"}, {"slug": "ways-to-split-array-into-three-subarrays", "title": "Ways to Split Array Into Three Subarrays", "difficulty": "Medium"}]},
    {"number": 2156, "slug": "find-substring-with-given-hash-value", "title": "Find Substring With Given Hash Value", "difficulty": "Hard", "tags": ["String", "Sliding Window", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "distinct-echo-substrings", "title": "Distinct Echo Substrings", "difficulty": "Hard"}]},
    {"number": 2157, "slug": "groups-of-strings", "title": "Groups of Strings", "difficulty": "Hard", "tags": ["String", "Bit Manipulation", "Union Find"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "similar-string-groups", "title": "Similar String Groups", "difficulty": "Hard"}, {"slug": "largest-component-size-by-common-factor", "title": "Largest Component Size by Common Factor", "difficulty": "Hard"}]},
    {"number": 2166, "slug": "design-bitset", "title": "Design Bitset", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design"], "similar_problems": [{"slug": "design-underground-system", "title": "Design Underground System", "difficulty": "Medium"}]},
    {"number": 2167, "slug": "minimum-time-to-remove-all-cars-containing-illegal-goods", "title": "Minimum Time to Remove All Cars Containing Illegal Goods", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-number-of-k-consecutive-bit-flips", "title": "Minimum Number of K Consecutive Bit Flips", "difficulty": "Hard"}]},
    {"number": 2168, "slug": "unique-substrings-with-equal-digit-frequency", "title": "Unique Substrings With Equal Digit Frequency", "difficulty": "Medium", "tags": ["Hash Table", "String", "Rolling Hash", "Counting", "Hash Function"], "similar_problems": [{"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "substrings-that-begin-and-end-with-the-same-letter", "title": "Substrings That Begin and End With the Same Letter", "difficulty": "Medium"}]},
    {"number": 2182, "slug": "construct-string-with-repeat-limit", "title": "Construct String With Repeat Limit", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}]},
    {"number": 2185, "slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy", "tags": ["Array", "String", "String Matching"], "similar_problems": [{"slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy"}, {"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 2186, "slug": "minimum-number-of-steps-to-make-two-strings-anagram-ii", "title": "Minimum Number of Steps to Make Two Strings Anagram II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "minimum-number-of-steps-to-make-two-strings-anagram", "title": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": "Medium"}]},
    {"number": 2193, "slug": "minimum-number-of-moves-to-make-palindrome", "title": "Minimum Number of Moves to Make Palindrome", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Greedy", "Binary Indexed Tree"], "similar_problems": [{"slug": "minimum-insertion-steps-to-make-a-string-palindrome", "title": "Minimum Insertion Steps to Make a String Palindrome", "difficulty": "Hard"}, {"slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i", "title": "Minimum Number of Flips to Make Binary Grid Palindromic I", "difficulty": "Medium"}]},
    {"number": 2194, "slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy"}, {"slug": "matrix-cells-in-distance-order", "title": "Matrix Cells in Distance Order", "difficulty": "Easy"}]},
    {"number": 2207, "slug": "maximize-number-of-subsequences-in-a-string", "title": "Maximize Number of Subsequences in a String", "difficulty": "Medium", "tags": ["String", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}]},
    {"number": 2209, "slug": "minimum-white-tiles-after-covering-with-carpets", "title": "Minimum White Tiles After Covering With Carpets", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Prefix Sum"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 2211, "slug": "count-collisions-on-a-road", "title": "Count Collisions on a Road", "difficulty": "Medium", "tags": ["String", "Stack", "Simulation"], "similar_problems": [{"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}, {"slug": "car-fleet", "title": "Car Fleet", "difficulty": "Medium"}, {"slug": "last-moment-before-all-ants-fall-out-of-a-plank", "title": "Last Moment Before All Ants Fall Out of a Plank", "difficulty": "Medium"}, {"slug": "car-fleet-ii", "title": "Car Fleet II", "difficulty": "Hard"}]},
    {"number": 2213, "slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard", "tags": ["Array", "String", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}, {"slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}]},
    {"number": 2222, "slug": "number-of-ways-to-select-buildings", "title": "Number of Ways to Select Buildings", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Prefix Sum"], "similar_problems": []},
    {"number": 2223, "slug": "sum-of-scores-of-built-strings", "title": "Sum of Scores of Built Strings", "difficulty": "Hard", "tags": ["String", "Binary Search", "Rolling Hash", "Suffix Array", "String Matching", "Hash Function"], "similar_problems": [{"slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard"}]},
    {"number": 2224, "slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "coin-change", "title": "Coin Change", "difficulty": "Medium"}, {"slug": "design-an-atm-machine", "title": "Design an ATM Machine", "difficulty": "Medium"}, {"slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy"}]},
    {"number": 2227, "slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "find-the-sum-of-encrypted-integers", "title": "Find the Sum of Encrypted Integers", "difficulty": "Easy"}]},
    {"number": 2232, "slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium", "tags": ["String", "Enumeration"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}, {"slug": "solve-the-equation", "title": "Solve the Equation", "difficulty": "Medium"}]},
    {"number": 2243, "slug": "calculate-digit-sum-of-a-string", "title": "Calculate Digit Sum of a String", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "find-triangular-sum-of-an-array", "title": "Find Triangular Sum of an Array", "difficulty": "Medium"}]},
    {"number": 2246, "slug": "longest-path-with-different-adjacent-characters", "title": "Longest Path With Different Adjacent Characters", "difficulty": "Hard", "tags": ["Array", "String", "Tree", "Depth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}, {"slug": "choose-edges-to-maximize-score-in-a-tree", "title": "Choose Edges to Maximize Score in a Tree", "difficulty": "Medium"}]},
    {"number": 2255, "slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy"}, {"slug": "check-if-string-is-a-prefix-of-array", "title": "Check If String Is a Prefix of Array", "difficulty": "Easy"}, {"slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy"}]},
    {"number": 2259, "slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy", "tags": ["String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "second-largest-digit-in-a-string", "title": "Second Largest Digit in a String", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 2262, "slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard", "tags": ["Hash Table", "String", "Dynamic Programming"], "similar_problems": [{"slug": "count-unique-characters-of-all-substrings-of-a-given-string", "title": "Count Unique Characters of All Substrings of a Given String", "difficulty": "Hard"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}, {"slug": "vowels-of-all-substrings", "title": "Vowels of All Substrings", "difficulty": "Medium"}, {"slug": "find-the-median-of-the-uniqueness-array", "title": "Find the Median of the Uniqueness Array", "difficulty": "Hard"}]},
    {"number": 2264, "slug": "largest-3-same-digit-number-in-string", "title": "Largest 3-Same-Digit Number in String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "largest-odd-number-in-string", "title": "Largest Odd Number in String", "difficulty": "Easy"}]},
    {"number": 2266, "slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Dynamic Programming"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "decode-ways", "title": "Decode Ways", "difficulty": "Medium"}]},
    {"number": 2268, "slug": "minimum-number-of-keypresses", "title": "Minimum Number of Keypresses", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": []},
    {"number": 2269, "slug": "find-the-k-beauty-of-a-number", "title": "Find the K-Beauty of a Number", "difficulty": "Easy", "tags": ["Math", "String", "Sliding Window"], "similar_problems": []},
    {"number": 2273, "slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}]},
    {"number": 2278, "slug": "percentage-of-letter-in-string", "title": "Percentage of Letter in String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}]},
    {"number": 2283, "slug": "check-if-number-has-equal-digit-count-and-digit-value", "title": "Check if Number Has Equal Digit Count and Digit Value", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "self-dividing-numbers", "title": "Self Dividing Numbers", "difficulty": "Easy"}]},
    {"number": 2284, "slug": "sender-with-largest-word-count", "title": "Sender With Largest Word Count", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}]},
    {"number": 2287, "slug": "rearrange-characters-to-make-target-string", "title": "Rearrange Characters to Make Target String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy"}, {"slug": "maximum-number-of-occurrences-of-a-substring", "title": "Maximum Number of Occurrences of a Substring", "difficulty": "Medium"}]},
    {"number": 2288, "slug": "apply-discount-to-prices", "title": "Apply Discount to Prices", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "apply-discount-every-n-orders", "title": "Apply Discount Every n Orders", "difficulty": "Medium"}]},
    {"number": 2296, "slug": "design-a-text-editor", "title": "Design a Text Editor", "difficulty": "Hard", "tags": ["Linked List", "String", "Stack", "Design", "Simulation", "Doubly-Linked List"], "similar_problems": []},
    {"number": 2299, "slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "strong-password-checker", "title": "Strong Password Checker", "difficulty": "Hard"}, {"slug": "validate-ip-address", "title": "Validate IP Address", "difficulty": "Medium"}]},
    {"number": 2301, "slug": "match-substring-after-replacement", "title": "Match Substring After Replacement", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "String Matching"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "number-of-subarrays-that-match-a-pattern-ii", "title": "Number of Subarrays That Match a Pattern II", "difficulty": "Hard"}]},
    {"number": 2306, "slug": "naming-a-company", "title": "Naming a Company", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Enumeration"], "similar_problems": []},
    {"number": 2309, "slug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "difficulty": "Easy", "tags": ["Hash Table", "String", "Enumeration"], "similar_problems": [{"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}, {"slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy"}]},
    {"number": 2311, "slug": "longest-binary-subsequence-less-than-or-equal-to-k", "title": "Longest Binary Subsequence Less Than or Equal to K", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy", "Memoization"], "similar_problems": [{"slug": "maximum-binary-string-after-change", "title": "Maximum Binary String After Change", "difficulty": "Medium"}]},
    {"number": 2315, "slug": "count-asterisks", "title": "Count Asterisks", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2325, "slug": "decode-the-message", "title": "Decode the Message", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 2330, "slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "valid-palindrome-iii", "title": "Valid Palindrome III", "difficulty": "Hard"}]},
    {"number": 2337, "slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "swap-adjacent-in-lr-string", "title": "Swap Adjacent in LR String", "difficulty": "Medium"}]},
    {"number": 2343, "slug": "query-kth-smallest-trimmed-number", "title": "Query Kth Smallest Trimmed Number", "difficulty": "Medium", "tags": ["Array", "String", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Radix Sort", "Quickselect"], "similar_problems": []},
    {"number": 2351, "slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy"}]},
    {"number": 2353, "slug": "design-a-food-rating-system", "title": "Design a Food Rating System", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "design-a-number-container-system", "title": "Design a Number Container System", "difficulty": "Medium"}, {"slug": "most-popular-video-creator", "title": "Most Popular Video Creator", "difficulty": "Medium"}]},
    {"number": 2370, "slug": "longest-ideal-subsequence", "title": "Longest Ideal Subsequence", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}]},
    {"number": 2375, "slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium", "tags": ["String", "Backtracking", "Stack", "Greedy"], "similar_problems": [{"slug": "di-string-match", "title": "DI String Match", "difficulty": "Easy"}]},
    {"number": 2379, "slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy", "tags": ["String", "Sliding Window"], "similar_problems": [{"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "maximum-points-you-can-obtain-from-cards", "title": "Maximum Points You Can Obtain from Cards", "difficulty": "Medium"}, {"slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium"}]},
    {"number": 2380, "slug": "time-needed-to-rearrange-a-binary-string", "title": "Time Needed to Rearrange a Binary String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Simulation"], "similar_problems": [{"slug": "minimum-swaps-to-group-all-1s-together", "title": "Minimum Swaps to Group All 1's Together", "difficulty": "Medium"}, {"slug": "minimum-swaps-to-group-all-1s-together-ii", "title": "Minimum Swaps to Group All 1's Together II", "difficulty": "Medium"}]},
    {"number": 2381, "slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": [{"slug": "the-skyline-problem", "title": "The Skyline Problem", "difficulty": "Hard"}, {"slug": "range-sum-query-mutable", "title": "Range Sum Query - Mutable", "difficulty": "Medium"}, {"slug": "range-addition", "title": "Range Addition", "difficulty": "Medium"}, {"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}, {"slug": "maximum-population-year", "title": "Maximum Population Year", "difficulty": "Easy"}, {"slug": "describe-the-painting", "title": "Describe the Painting", "difficulty": "Medium"}, {"slug": "shift-distance-between-two-strings", "title": "Shift Distance Between Two Strings", "difficulty": "Medium"}]},
    {"number": 2384, "slug": "largest-palindromic-number", "title": "Largest Palindromic Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Counting"], "similar_problems": [{"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 2390, "slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium", "tags": ["String", "Stack", "Simulation"], "similar_problems": [{"slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy"}, {"slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}]},
    {"number": 2391, "slug": "minimum-amount-of-time-to-collect-garbage", "title": "Minimum Amount of Time to Collect Garbage", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": []},
    {"number": 2399, "slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "shortest-distance-to-a-character", "title": "Shortest Distance to a Character", "difficulty": "Easy"}]},
    {"number": 2405, "slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "partition-array-into-disjoint-intervals", "title": "Partition Array into Disjoint Intervals", "difficulty": "Medium"}, {"slug": "maximum-sum-of-distinct-subarrays-with-length-k", "title": "Maximum Sum of Distinct Subarrays With Length K", "difficulty": "Medium"}]},
    {"number": 2408, "slug": "design-sql", "title": "Design SQL", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design"], "similar_problems": []},
    {"number": 2409, "slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "number-of-days-between-two-dates", "title": "Number of Days Between Two Dates", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}]},
    {"number": 2414, "slug": "length-of-the-longest-alphabetical-continuous-substring", "title": "Length of the Longest Alphabetical Continuous Substring", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "longest-consecutive-sequence", "title": "Longest Consecutive Sequence", "difficulty": "Medium"}, {"slug": "arithmetic-slices", "title": "Arithmetic Slices", "difficulty": "Medium"}, {"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium"}, {"slug": "number-of-zero-filled-subarrays", "title": "Number of Zero-Filled Subarrays", "difficulty": "Medium"}]},
    {"number": 2416, "slug": "sum-of-prefix-scores-of-strings", "title": "Sum of Prefix Scores of Strings", "difficulty": "Hard", "tags": ["Array", "String", "Trie", "Counting"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "maximum-xor-of-two-numbers-in-an-array", "title": "Maximum XOR of Two Numbers in an Array", "difficulty": "Medium"}, {"slug": "map-sum-pairs", "title": "Map Sum Pairs", "difficulty": "Medium"}]},
    {"number": 2418, "slug": "sort-the-people", "title": "Sort the People", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}, {"slug": "sort-the-students-by-their-kth-score", "title": "Sort the Students by Their Kth Score", "difficulty": "Medium"}]},
    {"number": 2423, "slug": "remove-letter-to-equalize-frequency", "title": "Remove Letter To Equalize Frequency", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "maximum-equal-frequency", "title": "Maximum Equal Frequency", "difficulty": "Hard"}, {"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}]},
    {"number": 2430, "slug": "maximum-deletions-on-a-string", "title": "Maximum Deletions on a String", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard"}, {"slug": "remove-all-occurrences-of-a-substring", "title": "Remove All Occurrences of a Substring", "difficulty": "Medium"}]},
    {"number": 2434, "slug": "using-a-robot-to-print-the-lexicographically-smallest-string", "title": "Using a Robot to Print the Lexicographically Smallest String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "find-permutation", "title": "Find Permutation", "difficulty": "Medium"}]},
    {"number": 2437, "slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy", "tags": ["String", "Enumeration"], "similar_problems": [{"slug": "largest-time-for-given-digits", "title": "Largest Time for Given Digits", "difficulty": "Medium"}, {"slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy"}]},
    {"number": 2446, "slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium"}, {"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}]},
    {"number": 2450, "slug": "number-of-distinct-binary-strings-after-applying-operations", "title": "Number of Distinct Binary Strings After Applying Operations", "difficulty": "Medium", "tags": ["Math", "String"], "similar_problems": [{"slug": "minimum-number-of-k-consecutive-bit-flips", "title": "Minimum Number of K Consecutive Bit Flips", "difficulty": "Hard"}]},
    {"number": 2451, "slug": "odd-string-difference", "title": "Odd String Difference", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}]},
    {"number": 2452, "slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"}]},
    {"number": 2456, "slug": "most-popular-video-creator", "title": "Most Popular Video Creator", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard"}, {"slug": "design-a-food-rating-system", "title": "Design a Food Rating System", "difficulty": "Medium"}]},
    {"number": 2468, "slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard", "tags": ["String", "Binary Search", "Enumeration"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}, {"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}, {"slug": "sentence-screen-fitting", "title": "Sentence Screen Fitting", "difficulty": "Medium"}]},
    {"number": 2472, "slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium"}, {"slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iii", "title": "Palindrome Partitioning III", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-substrings", "title": "Maximum Number of Non-Overlapping Substrings", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}]},
    {"number": 2478, "slug": "number-of-beautiful-partitions", "title": "Number of Beautiful Partitions", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "restore-the-array", "title": "Restore The Array", "difficulty": "Hard"}, {"slug": "number-of-ways-to-separate-numbers", "title": "Number of Ways to Separate Numbers", "difficulty": "Hard"}]},
    {"number": 2483, "slug": "minimum-penalty-for-a-shop", "title": "Minimum Penalty for a Shop", "difficulty": "Medium", "tags": ["String", "Prefix Sum"], "similar_problems": [{"slug": "grid-game", "title": "Grid Game", "difficulty": "Medium"}, {"slug": "minimum-amount-of-damage-dealt-to-bob", "title": "Minimum Amount of Damage Dealt to Bob", "difficulty": "Hard"}]},
    {"number": 2484, "slug": "count-palindromic-subsequences", "title": "Count Palindromic Subsequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "arithmetic-slices-ii-subsequence", "title": "Arithmetic Slices II - Subsequence", "difficulty": "Hard"}, {"slug": "count-different-palindromic-subsequences", "title": "Count Different Palindromic Subsequences", "difficulty": "Hard"}, {"slug": "unique-length-3-palindromic-subsequences", "title": "Unique Length-3 Palindromic Subsequences", "difficulty": "Medium"}]},
    {"number": 2486, "slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-subsequence", "title": "Minimum Operations to Make a Subsequence", "difficulty": "Hard"}]},
    {"number": 2489, "slug": "number-of-substrings-with-fixed-ratio", "title": "Number of Substrings With Fixed Ratio", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Prefix Sum"], "similar_problems": [{"slug": "count-binary-substrings", "title": "Count Binary Substrings", "difficulty": "Easy"}]},
    {"number": 2490, "slug": "circular-sentence", "title": "Circular Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy"}]},
    {"number": 2496, "slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 2506, "slug": "count-pairs-of-similar-strings", "title": "Count Pairs Of Similar Strings", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "count-the-number-of-consistent-strings", "title": "Count the Number of Consistent Strings", "difficulty": "Easy"}, {"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}]},
    {"number": 2512, "slug": "reward-top-k-students", "title": "Reward Top K Students", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 2514, "slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Combinatorics", "Counting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "count-ways-to-build-rooms-in-an-ant-colony", "title": "Count Ways to Build Rooms in an Ant Colony", "difficulty": "Hard"}]},
    {"number": 2515, "slug": "shortest-distance-to-target-string-in-a-circular-array", "title": "Shortest Distance to Target String in a Circular Array", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy"}]},
    {"number": 2516, "slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium"}, {"slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy"}]},
    {"number": 2522, "slug": "partition-string-into-substrings-with-values-at-most-k", "title": "Partition String Into Substrings With Values at Most K", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2531, "slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "bulls-and-cows", "title": "Bulls and Cows", "difficulty": "Medium"}, {"slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy"}, {"slug": "minimum-swaps-to-make-strings-equal", "title": "Minimum Swaps to Make Strings Equal", "difficulty": "Medium"}, {"slug": "check-if-one-string-swap-can-make-strings-equal", "title": "Check if One String Swap Can Make Strings Equal", "difficulty": "Easy"}, {"slug": "check-if-all-characters-have-equal-number-of-occurrences", "title": "Check if All Characters Have Equal Number of Occurrences", "difficulty": "Easy"}]},
    {"number": 2539, "slug": "count-the-number-of-good-subsequences", "title": "Count the Number of Good Subsequences", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Combinatorics", "Counting"], "similar_problems": [{"slug": "number-of-music-playlists", "title": "Number of Music Playlists", "difficulty": "Hard"}, {"slug": "count-ways-to-build-rooms-in-an-ant-colony", "title": "Count Ways to Build Rooms in an Ant Colony", "difficulty": "Hard"}]},
    {"number": 2546, "slug": "apply-bitwise-operations-to-make-strings-equal", "title": "Apply Bitwise Operations to Make Strings Equal", "difficulty": "Medium", "tags": ["String", "Bit Manipulation"], "similar_problems": [{"slug": "minimum-one-bit-operations-to-make-integers-zero", "title": "Minimum One Bit Operations to Make Integers Zero", "difficulty": "Hard"}]},
    {"number": 2559, "slug": "count-vowel-strings-in-ranges", "title": "Count Vowel Strings in Ranges", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": [{"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}]},
    {"number": 2564, "slug": "substring-xor-queries", "title": "Substring XOR Queries", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Bit Manipulation"], "similar_problems": [{"slug": "string-matching-in-an-array", "title": "String Matching in an Array", "difficulty": "Easy"}]},
    {"number": 2565, "slug": "subsequence-with-the-minimum-score", "title": "Subsequence With the Minimum Score", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search"], "similar_problems": [{"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}]},
    {"number": 2573, "slug": "find-the-string-with-lcp", "title": "Find the String with LCP", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Greedy", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 2575, "slug": "find-the-divisibility-array-of-a-string", "title": "Find the Divisibility Array of a String", "difficulty": "Medium", "tags": ["Array", "Math", "String"], "similar_problems": [{"slug": "subarray-sums-divisible-by-k", "title": "Subarray Sums Divisible by K", "difficulty": "Medium"}, {"slug": "make-sum-divisible-by-p", "title": "Make Sum Divisible by P", "difficulty": "Medium"}]},
    {"number": 2586, "slug": "count-the-number-of-vowel-strings-in-range", "title": "Count the Number of Vowel Strings in Range", "difficulty": "Easy", "tags": ["Array", "String", "Counting"], "similar_problems": []},
    {"number": 2590, "slug": "design-a-todo-list", "title": "Design a Todo List", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design", "Sorting"], "similar_problems": []},
    {"number": 2606, "slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 2609, "slug": "find-the-longest-balanced-substring-of-a-binary-string", "title": "Find the Longest Balanced Substring of a Binary String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2645, "slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Stack", "Greedy"], "similar_problems": [{"slug": "merge-strings-alternately", "title": "Merge Strings Alternately", "difficulty": "Easy"}]},
    {"number": 2663, "slug": "lexicographically-smallest-beautiful-string", "title": "Lexicographically Smallest Beautiful String", "difficulty": "Hard", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "smallest-string-with-swaps", "title": "Smallest String With Swaps", "difficulty": "Medium"}, {"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}]},
    {"number": 2678, "slug": "number-of-senior-citizens", "title": "Number of Senior Citizens", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 2696, "slug": "minimum-string-length-after-removing-substrings", "title": "Minimum String Length After Removing Substrings", "difficulty": "Easy", "tags": ["String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 2697, "slug": "lexicographically-smallest-palindrome", "title": "Lexicographically Smallest Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": []},
    {"number": 2707, "slug": "extra-characters-in-a-string", "title": "Extra Characters in a String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie"], "similar_problems": [{"slug": "word-break", "title": "Word Break", "difficulty": "Medium"}]},
    {"number": 2710, "slug": "remove-trailing-zeros-from-a-string", "title": "Remove Trailing Zeros From a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "check-if-bitwise-or-has-trailing-zeros", "title": "Check if Bitwise OR Has Trailing Zeros", "difficulty": "Easy"}]},
    {"number": 2712, "slug": "minimum-cost-to-make-all-characters-equal", "title": "Minimum Cost to Make All Characters Equal", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "flip-string-to-monotone-increasing", "title": "Flip String to Monotone Increasing", "difficulty": "Medium"}]},
    {"number": 2716, "slug": "minimize-string-length", "title": "Minimize String Length", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}, {"slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium"}]},
    {"number": 2719, "slug": "count-of-integers", "title": "Count of Integers", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming"], "similar_problems": [{"slug": "count-numbers-with-non-decreasing-digits", "title": "Count Numbers with Non-Decreasing Digits ", "difficulty": "Hard"}]},
    {"number": 2730, "slug": "find-the-longest-semi-repetitive-substring", "title": "Find the Longest Semi-Repetitive Substring", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": []},
    {"number": 2734, "slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-operations-with-constraint", "title": "Lexicographically Smallest String After Operations With Constraint", "difficulty": "Medium"}, {"slug": "replace-question-marks-in-string-to-minimize-its-value", "title": "Replace Question Marks in String to Minimize Its Value", "difficulty": "Medium"}]},
    {"number": 2743, "slug": "count-substrings-without-repeating-character", "title": "Count Substrings Without Repeating Character", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "count-complete-substrings", "title": "Count Complete Substrings", "difficulty": "Hard"}]},
    {"number": 2744, "slug": "find-maximum-number-of-string-pairs", "title": "Find Maximum Number of String Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Simulation"], "similar_problems": [{"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}]},
    {"number": 2746, "slug": "decremental-string-concatenation", "title": "Decremental String Concatenation", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": [{"slug": "largest-merge-of-two-strings", "title": "Largest Merge Of Two Strings", "difficulty": "Medium"}]},
    {"number": 2767, "slug": "partition-string-into-minimum-beautiful-substrings", "title": "Partition String Into Minimum Beautiful Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "partition-array-for-maximum-sum", "title": "Partition Array for Maximum Sum", "difficulty": "Medium"}, {"slug": "minimum-substring-partition-of-equal-character-frequency", "title": "Minimum Substring Partition of Equal Character Frequency", "difficulty": "Medium"}]},
    {"number": 2781, "slug": "length-of-the-longest-valid-substring", "title": "Length of the Longest Valid Substring", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 2785, "slug": "sort-vowels-in-a-string", "title": "Sort Vowels in a String", "difficulty": "Medium", "tags": ["String", "Sorting"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}]},
    {"number": 2788, "slug": "split-strings-by-separator", "title": "Split Strings by Separator", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "split-a-string-in-balanced-strings", "title": "Split a String in Balanced Strings", "difficulty": "Easy"}]},
    {"number": 2800, "slug": "shortest-string-that-contains-three-strings", "title": "Shortest String That Contains Three Strings", "difficulty": "Medium", "tags": ["String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "shortest-common-supersequence", "title": "Shortest Common Supersequence ", "difficulty": "Hard"}]},
    {"number": 2801, "slug": "count-stepping-numbers-in-range", "title": "Count Stepping Numbers in Range", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "stepping-numbers", "title": "Stepping Numbers", "difficulty": "Medium"}]},
    {"number": 2802, "slug": "find-the-k-th-lucky-number", "title": "Find The K-th Lucky Number", "difficulty": "Medium", "tags": ["Math", "String", "Bit Manipulation"], "similar_problems": []},
    {"number": 2810, "slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}, {"slug": "reverse-only-letters", "title": "Reverse Only Letters", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-ii", "title": "Find the Original Typed String II", "difficulty": "Hard"}]},
    {"number": 2825, "slug": "make-string-a-subsequence-using-cyclic-increments", "title": "Make String a Subsequence Using Cyclic Increments", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}]},
    {"number": 2828, "slug": "check-if-a-string-is-an-acronym-of-words", "title": "Check if a String Is an Acronym of Words", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard"}]},
    {"number": 2833, "slug": "furthest-point-from-origin", "title": "Furthest Point From Origin", "difficulty": "Easy", "tags": ["String", "Counting"], "similar_problems": [{"slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy"}]},
    {"number": 2839, "slug": "check-if-strings-can-be-made-equal-with-operations-i", "title": "Check if Strings Can be Made Equal With Operations I", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2840, "slug": "check-if-strings-can-be-made-equal-with-operations-ii", "title": "Check if Strings Can be Made Equal With Operations II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 2842, "slug": "count-k-subsequences-of-a-string-with-maximum-beauty", "title": "Count K-Subsequences of a String With Maximum Beauty", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Greedy", "Combinatorics"], "similar_problems": [{"slug": "distinct-subsequences-ii", "title": "Distinct Subsequences II", "difficulty": "Hard"}]},
    {"number": 2844, "slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 2851, "slug": "string-transformation", "title": "String Transformation", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "String Matching"], "similar_problems": []},
    {"number": 2864, "slug": "maximum-odd-binary-number", "title": "Maximum Odd Binary Number", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": []},
    {"number": 2868, "slug": "the-wording-game", "title": "The Wording Game", "difficulty": "Hard", "tags": ["Array", "Math", "Two Pointers", "String", "Greedy", "Game Theory"], "similar_problems": []},
    {"number": 2896, "slug": "apply-operations-to-make-two-strings-equal", "title": "Apply Operations to Make Two Strings Equal", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 2900, "slug": "longest-unequal-adjacent-groups-subsequence-i", "title": "Longest Unequal Adjacent Groups Subsequence I", "difficulty": "Easy", "tags": ["Array", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2901, "slug": "longest-unequal-adjacent-groups-subsequence-ii", "title": "Longest Unequal Adjacent Groups Subsequence II", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": []},
    {"number": 2904, "slug": "shortest-and-lexicographically-smallest-beautiful-string", "title": "Shortest and Lexicographically Smallest Beautiful String", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": []},
    {"number": 2911, "slug": "minimum-changes-to-make-k-semi-palindromes", "title": "Minimum Changes to Make K Semi-palindromes", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "palindrome-partitioning-iii", "title": "Palindrome Partitioning III", "difficulty": "Hard"}]},
    {"number": 2914, "slug": "minimum-number-of-changes-to-make-binary-string-beautiful", "title": "Minimum Number of Changes to Make Binary String Beautiful", "difficulty": "Medium", "tags": ["String"], "similar_problems": []},
    {"number": 2933, "slug": "high-access-employees", "title": "High-Access Employees", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 2937, "slug": "make-three-strings-equal", "title": "Make Three Strings Equal", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}]},
    {"number": 2938, "slug": "separate-black-and-white-balls", "title": "Separate Black and White Balls", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": []},
    {"number": 2942, "slug": "find-words-containing-character", "title": "Find Words Containing Character", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 2947, "slug": "count-beautiful-substrings-i", "title": "Count Beautiful Substrings I", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Enumeration", "Number Theory", "Prefix Sum"], "similar_problems": []},
    {"number": 2949, "slug": "count-beautiful-substrings-ii", "title": "Count Beautiful Substrings II", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Number Theory", "Prefix Sum"], "similar_problems": []},
    {"number": 2950, "slug": "number-of-divisible-substrings", "title": "Number of Divisible Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting", "Prefix Sum"], "similar_problems": [{"slug": "count-substrings-divisible-by-last-digit", "title": "Count Substrings Divisible By Last Digit", "difficulty": "Hard"}]},
    {"number": 2953, "slug": "count-complete-substrings", "title": "Count Complete Substrings", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "number-of-substrings-containing-all-three-characters", "title": "Number of Substrings Containing All Three Characters", "difficulty": "Medium"}, {"slug": "count-substrings-without-repeating-character", "title": "Count Substrings Without Repeating Character", "difficulty": "Medium"}]},
    {"number": 2955, "slug": "number-of-same-end-substrings", "title": "Number of Same-End Substrings", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Counting", "Prefix Sum"], "similar_problems": []},
    {"number": 2957, "slug": "remove-adjacent-almost-equal-characters", "title": "Remove Adjacent Almost-Equal Characters", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "minimum-changes-to-make-alternating-binary-string", "title": "Minimum Changes To Make Alternating Binary String", "difficulty": "Easy"}]},
    {"number": 2976, "slug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "difficulty": "Medium", "tags": ["Array", "String", "Graph", "Shortest Path"], "similar_problems": [{"slug": "can-convert-string-in-k-moves", "title": "Can Convert String in K Moves", "difficulty": "Medium"}, {"slug": "minimum-moves-to-convert-string", "title": "Minimum Moves to Convert String", "difficulty": "Easy"}]},
    {"number": 2977, "slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Graph", "Trie", "Shortest Path"], "similar_problems": [{"slug": "can-convert-string-in-k-moves", "title": "Can Convert String in K Moves", "difficulty": "Medium"}, {"slug": "minimum-moves-to-convert-string", "title": "Minimum Moves to Convert String", "difficulty": "Easy"}, {"slug": "minimum-number-of-valid-strings-to-form-target-ii", "title": "Minimum Number of Valid Strings to Form Target II", "difficulty": "Hard"}, {"slug": "minimum-number-of-valid-strings-to-form-target-i", "title": "Minimum Number of Valid Strings to Form Target I", "difficulty": "Medium"}]},
    {"number": 2981, "slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Sliding Window", "Counting"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 2982, "slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Sliding Window", "Counting"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 2983, "slug": "palindrome-rearrangement-queries", "title": "Palindrome Rearrangement Queries", "difficulty": "Hard", "tags": ["Hash Table", "String", "Prefix Sum"], "similar_problems": [{"slug": "longest-chunked-palindrome-decomposition", "title": "Longest Chunked Palindrome Decomposition", "difficulty": "Hard"}]},
    {"number": 2999, "slug": "count-the-number-of-powerful-integers", "title": "Count the Number of Powerful Integers", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming"], "similar_problems": [{"slug": "powerful-integers", "title": "Powerful Integers", "difficulty": "Medium"}, {"slug": "numbers-with-repeated-digits", "title": "Numbers With Repeated Digits", "difficulty": "Hard"}]},
    {"number": 3003, "slug": "maximize-the-number-of-partitions-after-operations", "title": "Maximize the Number of Partitions After Operations", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Bit Manipulation", "Bitmask"], "similar_problems": [{"slug": "can-make-palindrome-from-substring", "title": "Can Make Palindrome from Substring", "difficulty": "Medium"}]},
    {"number": 3006, "slug": "find-beautiful-indices-in-the-given-array-i", "title": "Find Beautiful Indices in the Given Array I", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Binary Search", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": []},
    {"number": 3008, "slug": "find-beautiful-indices-in-the-given-array-ii", "title": "Find Beautiful Indices in the Given Array II", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": []},
    {"number": 3014, "slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}]},
    {"number": 3016, "slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}]},
    {"number": 3019, "slug": "number-of-changing-keys", "title": "Number of Changing Keys", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3029, "slug": "minimum-time-to-revert-word-to-initial-state-i", "title": "Minimum Time to Revert Word to Initial State I", "difficulty": "Medium", "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard"}]},
    {"number": 3031, "slug": "minimum-time-to-revert-word-to-initial-state-ii", "title": "Minimum Time to Revert Word to Initial State II", "difficulty": "Hard", "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard"}]},
    {"number": 3035, "slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}]},
    {"number": 3042, "slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}]},
    {"number": 3043, "slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie"], "similar_problems": [{"slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy"}, {"slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard"}]},
    {"number": 3045, "slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard", "tags": ["Array", "String", "Trie", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}]},
    {"number": 3076, "slug": "shortest-uncommon-substring-in-an-array", "title": "Shortest Uncommon Substring in an Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie"], "similar_problems": []},
    {"number": 3078, "slug": "match-alphanumerical-pattern-in-matrix-i", "title": "Match Alphanumerical Pattern in Matrix I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Matrix"], "similar_problems": []},
    {"number": 3081, "slug": "replace-question-marks-in-string-to-minimize-its-value", "title": "Replace Question Marks in String to Minimize Its Value", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}]},
    {"number": 3083, "slug": "existence-of-a-substring-in-a-string-and-its-reverse", "title": "Existence of a Substring in a String and Its Reverse", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 3084, "slug": "count-substrings-starting-and-ending-with-given-character", "title": "Count Substrings Starting and Ending with Given Character", "difficulty": "Medium", "tags": ["Math", "String", "Counting"], "similar_problems": []},
    {"number": 3085, "slug": "minimum-deletions-to-make-string-k-special", "title": "Minimum Deletions to Make String K-Special", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}]},
    {"number": 3088, "slug": "make-string-anti-palindrome", "title": "Make String Anti-palindrome", "difficulty": "Hard", "tags": ["String", "Greedy", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 3090, "slug": "maximum-length-substring-with-two-occurrences", "title": "Maximum Length Substring With Two Occurrences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 3093, "slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy"}, {"slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium"}]},
    {"number": 3104, "slug": "find-longest-self-contained-substring", "title": "Find Longest Self-Contained Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "select-k-disjoint-special-substrings", "title": "Select K Disjoint Special Substrings", "difficulty": "Medium"}]},
    {"number": 3106, "slug": "lexicographically-smallest-string-after-operations-with-constraint", "title": "Lexicographically Smallest String After Operations With Constraint", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}]},
    {"number": 3110, "slug": "score-of-a-string", "title": "Score of a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3114, "slug": "latest-time-you-can-obtain-after-replacing-characters", "title": "Latest Time You Can Obtain After Replacing Characters", "difficulty": "Easy", "tags": ["String", "Enumeration"], "similar_problems": [{"slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy"}]},
    {"number": 3119, "slug": "maximum-number-of-potholes-that-can-be-fixed", "title": "Maximum Number of Potholes That Can Be Fixed", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3120, "slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy"}, {"slug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "difficulty": "Easy"}, {"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}]},
    {"number": 3121, "slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy"}, {"slug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "difficulty": "Easy"}, {"slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy"}]},
    {"number": 3125, "slug": "maximum-number-that-makes-result-of-bitwise-and-zero", "title": "Maximum Number That Makes Result of Bitwise AND Zero", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3135, "slug": "equalize-strings-by-adding-or-removing-characters-at-ends", "title": "Equalize Strings by Adding or Removing Characters at Ends", "difficulty": "Medium", "tags": ["String", "Binary Search", "Dynamic Programming", "Sliding Window", "Hash Function"], "similar_problems": []},
    {"number": 3136, "slug": "valid-word", "title": "Valid Word", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3137, "slug": "minimum-number-of-operations-to-make-word-k-periodic", "title": "Minimum Number of Operations to Make Word K-Periodic", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "maximum-repeating-substring", "title": "Maximum Repeating Substring", "difficulty": "Easy"}]},
    {"number": 3138, "slug": "minimum-length-of-anagram-concatenation", "title": "Minimum Length of Anagram Concatenation", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3143, "slug": "maximum-points-inside-the-square", "title": "Maximum Points Inside the Square", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Sorting"], "similar_problems": [{"slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard"}]},
    {"number": 3144, "slug": "minimum-substring-partition-of-equal-character-frequency", "title": "Minimum Substring Partition of Equal Character Frequency", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Counting"], "similar_problems": [{"slug": "partition-array-for-maximum-sum", "title": "Partition Array for Maximum Sum", "difficulty": "Medium"}, {"slug": "partition-string-into-minimum-beautiful-substrings", "title": "Partition String Into Minimum Beautiful Substrings", "difficulty": "Medium"}]},
    {"number": 3146, "slug": "permutation-difference-between-two-strings", "title": "Permutation Difference between Two Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}]},
    {"number": 3163, "slug": "string-compression-iii", "title": "String Compression III", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}, {"slug": "string-compression-ii", "title": "String Compression II", "difficulty": "Hard"}]},
    {"number": 3167, "slug": "better-compression-of-string", "title": "Better Compression of String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting", "Counting"], "similar_problems": [{"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 3168, "slug": "minimum-number-of-chairs-in-a-waiting-room", "title": "Minimum Number of Chairs in a Waiting Room", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}]},
    {"number": 3170, "slug": "lexicographically-minimum-string-after-removing-stars", "title": "Lexicographically Minimum String After Removing Stars", "difficulty": "Medium", "tags": ["Hash Table", "String", "Stack", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3174, "slug": "clear-digits", "title": "Clear Digits", "difficulty": "Easy", "tags": ["String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 3210, "slug": "find-the-encrypted-string", "title": "Find the Encrypted String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3211, "slug": "generate-binary-strings-without-adjacent-zeros", "title": "Generate Binary Strings Without Adjacent Zeros", "difficulty": "Medium", "tags": ["String", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "non-negative-integers-without-consecutive-ones", "title": "Non-negative Integers without Consecutive Ones", "difficulty": "Hard"}]},
    {"number": 3213, "slug": "construct-string-with-minimum-cost", "title": "Construct String with Minimum Cost", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Suffix Array"], "similar_problems": [{"slug": "minimum-number-of-valid-strings-to-form-target-ii", "title": "Minimum Number of Valid Strings to Form Target II", "difficulty": "Hard"}, {"slug": "minimum-number-of-valid-strings-to-form-target-i", "title": "Minimum Number of Valid Strings to Form Target I", "difficulty": "Medium"}]},
    {"number": 3216, "slug": "lexicographically-smallest-string-after-a-swap", "title": "Lexicographically Smallest String After a Swap", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium"}]},
    {"number": 3223, "slug": "minimum-length-of-string-after-operations", "title": "Minimum Length of String After Operations", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3227, "slug": "vowels-game-in-a-string", "title": "Vowels Game in a String", "difficulty": "Medium", "tags": ["Math", "String", "Brainteaser", "Game Theory"], "similar_problems": []},
    {"number": 3228, "slug": "maximum-number-of-operations-to-move-ones-to-the-end", "title": "Maximum Number of Operations to Move Ones to the End", "difficulty": "Medium", "tags": ["String", "Greedy", "Counting"], "similar_problems": []},
    {"number": 3234, "slug": "count-the-number-of-substrings-with-dominant-ones", "title": "Count the Number of Substrings With Dominant Ones", "difficulty": "Medium", "tags": ["String", "Sliding Window", "Enumeration"], "similar_problems": [{"slug": "count-binary-substrings", "title": "Count Binary Substrings", "difficulty": "Easy"}]},
    {"number": 3248, "slug": "snake-in-matrix", "title": "Snake in Matrix", "difficulty": "Easy", "tags": ["Array", "String", "Simulation"], "similar_problems": []},
    {"number": 3258, "slug": "count-substrings-that-satisfy-k-constraint-i", "title": "Count Substrings That Satisfy K-Constraint I", "difficulty": "Easy", "tags": ["String", "Sliding Window"], "similar_problems": []},
    {"number": 3260, "slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "Greedy", "Number Theory"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "find-the-closest-palindrome", "title": "Find the Closest Palindrome", "difficulty": "Hard"}]},
    {"number": 3261, "slug": "count-substrings-that-satisfy-k-constraint-ii", "title": "Count Substrings That Satisfy K-Constraint II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": []},
    {"number": 3271, "slug": "hash-divided-string", "title": "Hash Divided String", "difficulty": "Medium", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3274, "slug": "check-if-two-chessboard-squares-have-the-same-color", "title": "Check if Two Chessboard Squares Have the Same Color", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "determine-color-of-a-chessboard-square", "title": "Determine Color of a Chessboard Square", "difficulty": "Easy"}]},
    {"number": 3279, "slug": "maximum-total-area-occupied-by-pistons", "title": "Maximum Total Area Occupied by Pistons", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Simulation", "Counting", "Prefix Sum"], "similar_problems": []},
    {"number": 3280, "slug": "convert-date-to-binary", "title": "Convert Date to Binary", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "convert-to-base-2", "title": "Convert to Base -2", "difficulty": "Medium"}]},
    {"number": 3291, "slug": "minimum-number-of-valid-strings-to-form-target-i", "title": "Minimum Number of Valid Strings to Form Target I", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Dynamic Programming", "Trie", "Segment Tree", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}, {"slug": "construct-string-with-minimum-cost", "title": "Construct String with Minimum Cost", "difficulty": "Hard"}]},
    {"number": 3292, "slug": "minimum-number-of-valid-strings-to-form-target-ii", "title": "Minimum Number of Valid Strings to Form Target II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Dynamic Programming", "Segment Tree", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}, {"slug": "construct-string-with-minimum-cost", "title": "Construct String with Minimum Cost", "difficulty": "Hard"}]},
    {"number": 3295, "slug": "report-spam-message", "title": "Report Spam Message", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 3297, "slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}]},
    {"number": 3298, "slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}]},
    {"number": 3302, "slug": "find-the-lexicographically-smallest-valid-sequence", "title": "Find the Lexicographically Smallest Valid Sequence", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}]},
    {"number": 3303, "slug": "find-the-occurrence-of-first-almost-equal-substring", "title": "Find the Occurrence of First Almost Equal Substring", "difficulty": "Hard", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "check-whether-two-strings-are-almost-equivalent", "title": "Check Whether Two Strings are Almost Equivalent", "difficulty": "Easy"}, {"slug": "count-almost-equal-pairs-ii", "title": "Count Almost Equal Pairs II", "difficulty": "Hard"}]},
    {"number": 3305, "slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i", "title": "Count of Substrings Containing Every Vowel and K Consonants I", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "difficulty": "Medium"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}]},
    {"number": 3306, "slug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "difficulty": "Medium"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}]},
    {"number": 3316, "slug": "find-maximum-removals-from-source-string", "title": "Find Maximum Removals From Source String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "delete-characters-to-make-fancy-string", "title": "Delete Characters to Make Fancy String", "difficulty": "Easy"}]},
    {"number": 3320, "slug": "count-the-number-of-winning-sequences", "title": "Count The Number of Winning Sequences", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "predict-the-winner", "title": "Predict the Winner", "difficulty": "Medium"}]},
    {"number": 3324, "slug": "find-the-sequence-of-strings-appeared-on-the-screen", "title": "Find the Sequence of Strings Appeared on the Screen", "difficulty": "Medium", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy"}]},
    {"number": 3325, "slug": "count-substrings-with-k-frequency-characters-i", "title": "Count Substrings With K-Frequency Characters I", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 3327, "slug": "check-if-dfs-strings-are-palindromes", "title": "Check if DFS Strings Are Palindromes", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Tree", "Depth-First Search", "Hash Function"], "similar_problems": []},
    {"number": 3329, "slug": "count-substrings-with-k-frequency-characters-ii", "title": "Count Substrings With K-Frequency Characters II", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 3330, "slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 3331, "slug": "find-subtree-sizes-after-changes", "title": "Find Subtree Sizes After Changes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Tree", "Depth-First Search"], "similar_problems": []},
    {"number": 3333, "slug": "find-the-original-typed-string-ii", "title": "Find the Original Typed String II", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Prefix Sum"], "similar_problems": [{"slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 3335, "slug": "total-characters-in-string-after-transformations-i", "title": "Total Characters in String After Transformations I", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Dynamic Programming", "Counting"], "similar_problems": []},
    {"number": 3337, "slug": "total-characters-in-string-after-transformations-ii", "title": "Total Characters in String After Transformations II", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Dynamic Programming", "Counting"], "similar_problems": []},
    {"number": 3340, "slug": "check-balanced-string", "title": "Check Balanced String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}]},
    {"number": 3343, "slug": "count-number-of-balanced-permutations", "title": "Count Number of Balanced Permutations", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "Combinatorics"], "similar_problems": []},
    {"number": 3348, "slug": "smallest-divisible-digit-product-ii", "title": "Smallest Divisible Digit Product II", "difficulty": "Hard", "tags": ["Math", "String", "Backtracking", "Greedy", "Number Theory"], "similar_problems": [{"slug": "smallest-number-with-given-digit-product", "title": "Smallest Number With Given Digit Product", "difficulty": "Medium"}]},
    {"number": 3352, "slug": "count-k-reducible-numbers-less-than-n", "title": "Count K-Reducible Numbers Less Than N", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "Combinatorics"], "similar_problems": []},
    {"number": 3361, "slug": "shift-distance-between-two-strings", "title": "Shift Distance Between Two Strings", "difficulty": "Medium", "tags": ["Array", "String", "Prefix Sum"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}, {"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}]},
    {"number": 3365, "slug": "rearrange-k-substrings-to-form-target-string", "title": "Rearrange K Substrings to Form Target String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 3387, "slug": "maximize-amount-after-two-days-of-conversions", "title": "Maximize Amount After Two Days of Conversions", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "evaluate-division", "title": "Evaluate Division", "difficulty": "Medium"}]},
    {"number": 3389, "slug": "minimum-operations-to-make-character-frequencies-equal", "title": "Minimum Operations to Make Character Frequencies Equal", "difficulty": "Hard", "tags": ["Hash Table", "String", "Dynamic Programming", "Counting", "Enumeration"], "similar_problems": [{"slug": "minimum-number-of-steps-to-make-two-strings-anagram", "title": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": "Medium"}]},
    {"number": 3399, "slug": "smallest-substring-with-identical-characters-ii", "title": "Smallest Substring With Identical Characters II", "difficulty": "Hard", "tags": ["String", "Binary Search"], "similar_problems": []},
    {"number": 3403, "slug": "find-the-lexicographically-largest-string-from-the-box-i", "title": "Find the Lexicographically Largest String From the Box I", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Enumeration"], "similar_problems": [{"slug": "last-substring-in-lexicographical-order", "title": "Last Substring in Lexicographical Order", "difficulty": "Hard"}, {"slug": "construct-the-lexicographically-largest-valid-sequence", "title": "Construct the Lexicographically Largest Valid Sequence", "difficulty": "Medium"}]},
    {"number": 3406, "slug": "find-the-lexicographically-largest-string-from-the-box-ii", "title": "Find the Lexicographically Largest String From the Box II", "difficulty": "Hard", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 3407, "slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 3412, "slug": "find-mirror-score-of-a-string", "title": "Find Mirror Score of a String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 3435, "slug": "frequencies-of-shortest-supersequences", "title": "Frequencies of Shortest Supersequences", "difficulty": "Hard", "tags": ["Array", "String", "Bit Manipulation", "Graph", "Topological Sort", "Enumeration"], "similar_problems": []},
    {"number": 3438, "slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}]},
    {"number": 3441, "slug": "minimum-cost-good-caption", "title": "Minimum Cost Good Caption", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 3442, "slug": "maximum-difference-between-even-and-odd-frequency-i", "title": "Maximum Difference Between Even and Odd Frequency I", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3443, "slug": "maximum-manhattan-distance-after-k-changes", "title": "Maximum Manhattan Distance After K Changes", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Counting"], "similar_problems": [{"slug": "as-far-from-land-as-possible", "title": "As Far from Land as Possible", "difficulty": "Medium"}]},
    {"number": 3445, "slug": "maximum-difference-between-even-and-odd-frequency-ii", "title": "Maximum Difference Between Even and Odd Frequency II", "difficulty": "Hard", "tags": ["String", "Sliding Window", "Enumeration", "Prefix Sum"], "similar_problems": [{"slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium"}, {"slug": "count-elements-with-maximum-frequency", "title": "Count Elements With Maximum Frequency", "difficulty": "Easy"}]},
    {"number": 3448, "slug": "count-substrings-divisible-by-last-digit", "title": "Count Substrings Divisible By Last Digit", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-divisible-substrings", "title": "Number of Divisible Substrings", "difficulty": "Medium"}]},
    {"number": 3455, "slug": "shortest-matching-substring", "title": "Shortest Matching Substring", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search", "String Matching"], "similar_problems": []},
    {"number": 3456, "slug": "find-special-substring-of-length-k", "title": "Find Special Substring of Length K", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3458, "slug": "select-k-disjoint-special-substrings", "title": "Select K Disjoint Special Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-longest-self-contained-substring", "title": "Find Longest Self-Contained Substring", "difficulty": "Hard"}]},
    {"number": 3460, "slug": "longest-common-prefix-after-at-most-one-removal", "title": "Longest Common Prefix After at Most One Removal", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy"}]},
    {"number": 3461, "slug": "check-if-digits-are-equal-in-string-after-operations-i", "title": "Check If Digits Are Equal in String After Operations I", "difficulty": "Easy", "tags": ["Math", "String", "Simulation", "Combinatorics", "Number Theory"], "similar_problems": []},
    {"number": 3463, "slug": "check-if-digits-are-equal-in-string-after-operations-ii", "title": "Check If Digits Are Equal in String After Operations II", "difficulty": "Hard", "tags": ["Math", "String", "Combinatorics", "Number Theory"], "similar_problems": [{"slug": "pascals-triangle", "title": "Pascal's Triangle", "difficulty": "Easy"}]},
    {"number": 3472, "slug": "longest-palindromic-subsequence-after-at-most-k-operations", "title": "Longest Palindromic Subsequence After at Most K Operations", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 3474, "slug": "lexicographically-smallest-generated-string", "title": "Lexicographically Smallest Generated String", "difficulty": "Hard", "tags": ["String", "Greedy", "String Matching"], "similar_problems": [{"slug": "lexicographically-smallest-equivalent-string", "title": "Lexicographically Smallest Equivalent String", "difficulty": "Medium"}]},
    {"number": 3481, "slug": "apply-substitutions", "title": "Apply Substitutions", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "evaluate-the-bracket-pairs-of-a-string", "title": "Evaluate the Bracket Pairs of a String", "difficulty": "Medium"}]},
    {"number": 3484, "slug": "design-spreadsheet", "title": "Design Spreadsheet", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design", "Matrix"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}]},
    {"number": 3485, "slug": "longest-common-prefix-of-k-strings-after-removal", "title": "Longest Common Prefix of K Strings After Removal", "difficulty": "Hard", "tags": ["Array", "String", "Trie"], "similar_problems": []},
    {"number": 3491, "slug": "phone-number-prefix", "title": "Phone Number Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Sorting"], "similar_problems": []},
    {"number": 3498, "slug": "reverse-degree-of-a-string", "title": "Reverse Degree of a String", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3499, "slug": "maximize-active-section-with-trade-i", "title": "Maximize Active Section with Trade I", "difficulty": "Medium", "tags": ["String", "Enumeration"], "similar_problems": []},
    {"number": 3501, "slug": "maximize-active-section-with-trade-ii", "title": "Maximize Active Section with Trade II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Segment Tree"], "similar_problems": []},
    {"number": 3503, "slug": "longest-palindrome-after-substring-concatenation-i", "title": "Longest Palindrome After Substring Concatenation I", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming", "Enumeration"], "similar_problems": []},
    {"number": 3504, "slug": "longest-palindrome-after-substring-concatenation-ii", "title": "Longest Palindrome After Substring Concatenation II", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 3517, "slug": "smallest-palindromic-rearrangement-i", "title": "Smallest Palindromic Rearrangement I", "difficulty": "Medium", "tags": ["String", "Sorting", "Counting Sort"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}]},
    {"number": 3518, "slug": "smallest-palindromic-rearrangement-ii", "title": "Smallest Palindromic Rearrangement II", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Combinatorics", "Counting"], "similar_problems": []},
    {"number": 3519, "slug": "count-numbers-with-non-decreasing-digits", "title": "Count Numbers with Non-Decreasing Digits ", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming"], "similar_problems": [{"slug": "count-of-integers", "title": "Count of Integers", "difficulty": "Hard"}, {"slug": "number-of-beautiful-integers-in-the-range", "title": "Number of Beautiful Integers in the Range", "difficulty": "Hard"}]},
    {"number": 3522, "slug": "calculate-score-after-performing-instructions", "title": "Calculate Score After Performing Instructions", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Simulation"], "similar_problems": []},
    {"number": 3527, "slug": "find-the-most-common-response", "title": "Find the Most Common Response", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}]},
    {"number": 3529, "slug": "count-cells-in-overlapping-horizontal-and-vertical-substrings", "title": "Count Cells in Overlapping Horizontal and Vertical Substrings", "difficulty": "Medium", "tags": ["Array", "String", "Rolling Hash", "String Matching", "Matrix", "Hash Function"], "similar_problems": []},
    {"number": 3541, "slug": "find-most-frequent-vowel-and-consonant", "title": "Find Most Frequent Vowel and Consonant", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3545, "slug": "minimum-deletions-for-at-most-k-distinct-characters", "title": "Minimum Deletions for At Most K Distinct Characters", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": []},
    {"number": 3556, "slug": "sum-of-largest-prime-substrings", "title": "Sum of Largest Prime Substrings", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String", "Sorting", "Number Theory"], "similar_problems": []},
    {"number": 3557, "slug": "find-maximum-number-of-non-intersecting-substrings", "title": "Find Maximum Number of Non Intersecting Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 3561, "slug": "resulting-string-after-adjacent-removals", "title": "Resulting String After Adjacent Removals", "difficulty": "Medium", "tags": ["String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 3563, "slug": "lexicographically-smallest-string-after-adjacent-removals", "title": "Lexicographically Smallest String After Adjacent Removals", "difficulty": "Hard", "tags": ["String", "Dynamic Programming"], "similar_problems": []},
    {"number": 3571, "slug": "find-the-shortest-superstring-ii", "title": "Find the Shortest Superstring II", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "find-the-shortest-superstring", "title": "Find the Shortest Superstring", "difficulty": "Hard"}]},
    {"number": 3579, "slug": "minimum-steps-to-convert-string-with-operations", "title": "Minimum Steps to Convert String with Operations", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 3581, "slug": "count-odd-letters-from-number", "title": "Count Odd Letters from Number", "difficulty": "Easy", "tags": ["Hash Table", "String", "Simulation", "Counting"], "similar_problems": []},
    {"number": 3582, "slug": "generate-tag-for-video-caption", "title": "Generate Tag for Video Caption", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3597, "slug": "partition-string", "title": "Partition String ", "difficulty": "Medium", "tags": ["Hash Table", "String", "Trie", "Simulation"], "similar_problems": []},
    {"number": 3598, "slug": "longest-common-prefix-between-adjacent-strings-after-removals", "title": "Longest Common Prefix Between Adjacent Strings After Removals", "difficulty": "Medium", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 3602, "slug": "hexadecimal-and-hexatrigesimal-conversion", "title": "Hexadecimal and Hexatrigesimal Conversion", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 3606, "slug": "coupon-code-validator", "title": "Coupon Code Validator", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 3612, "slug": "process-string-with-special-operations-i", "title": "Process String with Special Operations I", "difficulty": "Medium", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3614, "slug": "process-string-with-special-operations-ii", "title": "Process String with Special Operations II", "difficulty": "Hard", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3615, "slug": "longest-palindromic-path-in-graph", "title": "Longest Palindromic Path in Graph", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Bit Manipulation", "Graph", "Bitmask"], "similar_problems": []},
    {"number": 3628, "slug": "maximum-number-of-subsequences-after-one-inserting", "title": "Maximum Number of Subsequences After One Inserting", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": []},
    {"number": 3662, "slug": "filter-characters-by-frequency", "title": "Filter Characters by Frequency", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3664, "slug": "two-letter-card-game", "title": "Two-Letter Card Game", "difficulty": "Medium", "tags": [], "similar_problems": []},
    {"number": 3666, "slug": "minimum-operations-to-equalize-binary-string", "title": "Minimum Operations to Equalize Binary String", "difficulty": "Hard", "tags": [], "similar_problems": []},
    {"number": 3675, "slug": "minimum-operations-to-transform-string", "title": "Minimum Operations to Transform String", "difficulty": "Medium", "tags": [], "similar_problems": []}
]