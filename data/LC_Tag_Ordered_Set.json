[
    {"number": 218, "slug": "the-skyline-problem", "title": "The Skyline Problem", "difficulty": "Hard", "tags": ["Array", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Line Sweep", "Sorting", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "falling-squares", "title": "Falling Squares", "difficulty": "Hard"}, {"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}]},
    {"number": 220, "slug": "contains-duplicate-iii", "title": "Contains Duplicate III", "difficulty": "Hard", "tags": ["Array", "Sliding Window", "Sorting", "Bucket Sort", "Ordered Set"], "similar_problems": [{"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}, {"slug": "contains-duplicate-ii", "title": "Contains Duplicate II", "difficulty": "Easy"}]},
    {"number": 315, "slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}, {"slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard"}]},
    {"number": 327, "slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium"}, {"slug": "find-the-number-of-copy-arrays", "title": "Find the Number of Copy Arrays", "difficulty": "Medium"}]},
    {"number": 352, "slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard", "tags": ["Binary Search", "Design", "Ordered Set"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-right-interval", "title": "Find Right Interval", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 363, "slug": "max-sum-of-rectangle-no-larger-than-k", "title": "Max Sum of Rectangle No Larger Than K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum", "Ordered Set"], "similar_problems": []},
    {"number": 456, "slug": "132-pattern", "title": "132 Pattern", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Stack", "Monotonic Stack", "Ordered Set"], "similar_problems": []},
    {"number": 493, "slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}]},
    {"number": 497, "slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Reservoir Sampling", "Prefix Sum", "Ordered Set", "Randomized"], "similar_problems": [{"slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium"}, {"slug": "generate-random-point-in-a-circle", "title": "Generate Random Point in a Circle", "difficulty": "Medium"}]},
    {"number": 635, "slug": "design-log-storage-system", "title": "Design Log Storage System", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Ordered Set"], "similar_problems": [{"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}]},
    {"number": 683, "slug": "k-empty-slots", "title": "K Empty Slots", "difficulty": "Hard", "tags": ["Array", "Binary Indexed Tree", "Segment Tree", "Queue", "Sliding Window", "Heap (Priority Queue)", "Ordered Set", "Monotonic Queue"], "similar_problems": []},
    {"number": 699, "slug": "falling-squares", "title": "Falling Squares", "difficulty": "Hard", "tags": ["Array", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "the-skyline-problem", "title": "The Skyline Problem", "difficulty": "Hard"}]},
    {"number": 715, "slug": "range-module", "title": "Range Module", "difficulty": "Hard", "tags": ["Design", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard"}]},
    {"number": 716, "slug": "max-stack", "title": "Max Stack", "difficulty": "Hard", "tags": ["Linked List", "Stack", "Design", "Doubly-Linked List", "Ordered Set"], "similar_problems": [{"slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"}]},
    {"number": 729, "slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}]},
    {"number": 731, "slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}]},
    {"number": 732, "slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard", "tags": ["Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}, {"slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 850, "slug": "rectangle-area-ii", "title": "Rectangle Area II", "difficulty": "Hard", "tags": ["Array", "Segment Tree", "Line Sweep", "Ordered Set"], "similar_problems": [{"slug": "separate-squares-ii", "title": "Separate Squares II", "difficulty": "Hard"}]},
    {"number": 855, "slug": "exam-room", "title": "Exam Room", "difficulty": "Medium", "tags": ["Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "maximize-distance-to-closest-person", "title": "Maximize Distance to Closest Person", "difficulty": "Medium"}]},
    {"number": 895, "slug": "maximum-frequency-stack", "title": "Maximum Frequency Stack", "difficulty": "Hard", "tags": ["Hash Table", "Stack", "Design", "Ordered Set"], "similar_problems": []},
    {"number": 975, "slug": "odd-even-jump", "title": "Odd Even Jump", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Sorting", "Monotonic Stack", "Ordered Set"], "similar_problems": []},
    {"number": 1348, "slug": "tweet-counts-per-frequency", "title": "Tweet Counts Per Frequency", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Design", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard"}]},
    {"number": 1418, "slug": "display-table-of-food-orders-in-a-restaurant", "title": "Display Table of Food Orders in a Restaurant", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 1438, "slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", "difficulty": "Medium", "tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Ordered Set", "Monotonic Queue"], "similar_problems": [{"slug": "partition-array-such-that-maximum-difference-is-k", "title": "Partition Array Such That Maximum Difference Is K", "difficulty": "Medium"}, {"slug": "count-subarrays-with-fixed-bounds", "title": "Count Subarrays With Fixed Bounds", "difficulty": "Hard"}]},
    {"number": 1606, "slug": "find-servers-that-handled-most-number-of-requests", "title": "Find Servers That Handled Most Number of Requests", "difficulty": "Hard", "tags": ["Array", "Greedy", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}]},
    {"number": 1649, "slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 1675, "slug": "minimize-deviation-in-array", "title": "Minimize Deviation in Array", "difficulty": "Hard", "tags": ["Array", "Greedy", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []},
    {"number": 1756, "slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Stack", "Design", "Binary Indexed Tree", "Ordered Set"], "similar_problems": [{"slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium"}]},
    {"number": 1818, "slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium"}, {"slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard"}]},
    {"number": 1825, "slug": "finding-mk-average", "title": "Finding MK Average", "difficulty": "Hard", "tags": ["Design", "Queue", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "similar_problems": [{"slug": "find-median-from-data-stream", "title": "Find Median from Data Stream", "difficulty": "Hard"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "sequentially-ordinal-rank-tracker", "title": "Sequentially Ordinal Rank Tracker", "difficulty": "Hard"}]},
    {"number": 1847, "slug": "closest-room", "title": "Closest Room", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "most-beautiful-item-for-each-query", "title": "Most Beautiful Item for Each Query", "difficulty": "Medium"}, {"slug": "minimum-time-to-kill-all-monsters", "title": "Minimum Time to Kill All Monsters", "difficulty": "Hard"}]},
    {"number": 1902, "slug": "depth-of-bst-given-insertion-order", "title": "Depth of BST Given Insertion Order", "difficulty": "Medium", "tags": ["Array", "Tree", "Binary Search Tree", "Binary Tree", "Ordered Set"], "similar_problems": []},
    {"number": 1912, "slug": "design-movie-rental-system", "title": "Design Movie Rental System", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []},
    {"number": 2021, "slug": "brightest-position-on-street", "title": "Brightest Position on Street", "difficulty": "Medium", "tags": ["Array", "Sorting", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "minimum-number-of-food-buckets-to-feed-the-hamsters", "title": "Minimum Number of Food Buckets to Feed the Hamsters", "difficulty": "Medium"}, {"slug": "count-positions-on-street-with-required-brightness", "title": "Count Positions on Street With Required Brightness", "difficulty": "Medium"}]},
    {"number": 2031, "slug": "count-subarrays-with-more-ones-than-zeros", "title": "Count Subarrays With More Ones Than Zeros", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "ones-and-zeroes", "title": "Ones and Zeroes", "difficulty": "Medium"}, {"slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 2034, "slug": "stock-price-fluctuation", "title": "Stock Price Fluctuation ", "difficulty": "Medium", "tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "similar_problems": [{"slug": "time-based-key-value-store", "title": "Time Based Key-Value Store", "difficulty": "Medium"}]},
    {"number": 2035, "slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Dynamic Programming", "Bit Manipulation", "Ordered Set", "Bitmask"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "split-array-with-same-average", "title": "Split Array With Same Average", "difficulty": "Hard"}, {"slug": "tallest-billboard", "title": "Tallest Billboard", "difficulty": "Hard"}, {"slug": "last-stone-weight-ii", "title": "Last Stone Weight II", "difficulty": "Medium"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "closest-subsequence-sum", "title": "Closest Subsequence Sum", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium"}, {"slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy"}]},
    {"number": 2102, "slug": "sequentially-ordinal-rank-tracker", "title": "Sequentially Ordinal Rank Tracker", "difficulty": "Hard", "tags": ["Design", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "similar_problems": [{"slug": "find-median-from-data-stream", "title": "Find Median from Data Stream", "difficulty": "Hard"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "finding-mk-average", "title": "Finding MK Average", "difficulty": "Hard"}]},
    {"number": 2158, "slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard", "tags": ["Array", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "describe-the-painting", "title": "Describe the Painting", "difficulty": "Medium"}, {"slug": "average-height-of-buildings-in-each-segment", "title": "Average Height of Buildings in Each Segment", "difficulty": "Medium"}]},
    {"number": 2179, "slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard"}, {"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 2213, "slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard", "tags": ["Array", "String", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}, {"slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}]},
    {"number": 2251, "slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Sorting", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "minimum-interval-to-include-each-query", "title": "Minimum Interval to Include Each Query", "difficulty": "Hard"}]},
    {"number": 2254, "slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard", "tags": ["Hash Table", "Stack", "Design", "Ordered Set"], "similar_problems": [{"slug": "tweet-counts-per-frequency", "title": "Tweet Counts Per Frequency", "difficulty": "Medium"}, {"slug": "design-browser-history", "title": "Design Browser History", "difficulty": "Medium"}, {"slug": "most-popular-video-creator", "title": "Most Popular Video Creator", "difficulty": "Medium"}]},
    {"number": 2276, "slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard", "tags": ["Design", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}]},
    {"number": 2336, "slug": "smallest-number-in-infinite-set", "title": "Smallest Number in Infinite Set", "difficulty": "Medium", "tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}]},
    {"number": 2349, "slug": "design-a-number-container-system", "title": "Design a Number Container System", "difficulty": "Medium", "tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "seat-reservation-manager", "title": "Seat Reservation Manager", "difficulty": "Medium"}, {"slug": "design-a-food-rating-system", "title": "Design a Food Rating System", "difficulty": "Medium"}]},
    {"number": 2353, "slug": "design-a-food-rating-system", "title": "Design a Food Rating System", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "design-a-number-container-system", "title": "Design a Number Container System", "difficulty": "Medium"}, {"slug": "most-popular-video-creator", "title": "Most Popular Video Creator", "difficulty": "Medium"}]},
    {"number": 2363, "slug": "merge-similar-items", "title": "Merge Similar Items", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 2382, "slug": "maximum-segment-sum-after-removals", "title": "Maximum Segment Sum After Removals", "difficulty": "Hard", "tags": ["Array", "Union Find", "Prefix Sum", "Ordered Set"], "similar_problems": []},
    {"number": 2424, "slug": "longest-uploaded-prefix", "title": "Longest Uploaded Prefix", "difficulty": "Medium", "tags": ["Hash Table", "Binary Search", "Union Find", "Design", "Binary Indexed Tree", "Segment Tree", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "design-an-ordered-stream", "title": "Design an Ordered Stream", "difficulty": "Easy"}, {"slug": "find-x-value-of-array-ii", "title": "Find X Value of Array II", "difficulty": "Hard"}]},
    {"number": 2426, "slug": "number-of-pairs-satisfying-inequality", "title": "Number of Pairs Satisfying Inequality", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "count-nice-pairs-in-an-array", "title": "Count Nice Pairs in an Array", "difficulty": "Medium"}, {"slug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "difficulty": "Medium"}, {"slug": "maximum-balanced-subsequence-sum", "title": "Maximum Balanced Subsequence Sum", "difficulty": "Hard"}]},
    {"number": 2519, "slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "find-all-good-indices", "title": "Find All Good Indices", "difficulty": "Medium"}]},
    {"number": 2612, "slug": "minimum-reverse-operations", "title": "Minimum Reverse Operations", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Ordered Set"], "similar_problems": []},
    {"number": 2613, "slug": "beautiful-pairs", "title": "Beautiful Pairs", "difficulty": "Hard", "tags": ["Array", "Math", "Divide and Conquer", "Geometry", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 2659, "slug": "make-array-empty", "title": "Make Array Empty", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Binary Indexed Tree", "Segment Tree", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 2713, "slug": "maximum-strictly-increasing-cells-in-a-matrix", "title": "Maximum Strictly Increasing Cells in a Matrix", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Memoization", "Sorting", "Matrix", "Ordered Set"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 2762, "slug": "continuous-subarrays", "title": "Continuous Subarrays", "difficulty": "Medium", "tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Ordered Set", "Monotonic Queue"], "similar_problems": []},
    {"number": 2763, "slug": "sum-of-imbalance-numbers-of-all-subarrays", "title": "Sum of Imbalance Numbers of All Subarrays", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Ordered Set"], "similar_problems": [{"slug": "count-subarrays-with-median-k", "title": "Count Subarrays With Median K", "difficulty": "Hard"}]},
    {"number": 2817, "slug": "minimum-absolute-difference-between-elements-with-constraint", "title": "Minimum Absolute Difference Between Elements With Constraint", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Ordered Set"], "similar_problems": [{"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "find-indices-with-index-and-value-difference-i", "title": "Find Indices With Index and Value Difference I", "difficulty": "Easy"}, {"slug": "find-indices-with-index-and-value-difference-ii", "title": "Find Indices With Index and Value Difference II", "difficulty": "Medium"}]},
    {"number": 3073, "slug": "maximum-increasing-triplet-value", "title": "Maximum Increasing Triplet Value", "difficulty": "Medium", "tags": ["Array", "Ordered Set"], "similar_problems": []},
    {"number": 3092, "slug": "most-frequent-ids", "title": "Most Frequent IDs", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []},
    {"number": 3102, "slug": "minimize-manhattan-distances", "title": "Minimize Manhattan Distances", "difficulty": "Hard", "tags": ["Array", "Math", "Geometry", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 3109, "slug": "find-the-index-of-permutation", "title": "Find the Index of Permutation", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": []},
    {"number": 3244, "slug": "shortest-distance-after-road-addition-queries-ii", "title": "Shortest Distance After Road Addition Queries II", "difficulty": "Hard", "tags": ["Array", "Greedy", "Graph", "Ordered Set"], "similar_problems": []},
    {"number": 3369, "slug": "design-an-array-statistics-tracker", "title": "Design an Array Statistics Tracker ", "difficulty": "Hard", "tags": ["Hash Table", "Binary Search", "Design", "Queue", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "similar_problems": []},
    {"number": 3391, "slug": "design-a-3d-binary-matrix-with-efficient-layer-tracking", "title": "Design a 3D Binary Matrix with Efficient Layer Tracking", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Design", "Heap (Priority Queue)", "Matrix", "Ordered Set"], "similar_problems": []},
    {"number": 3408, "slug": "design-task-manager", "title": "Design Task Manager", "difficulty": "Medium", "tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []},
    {"number": 3477, "slug": "fruits-into-baskets-ii", "title": "Fruits Into Baskets II", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Segment Tree", "Simulation", "Ordered Set"], "similar_problems": [{"slug": "fruit-into-baskets", "title": "Fruit Into Baskets", "difficulty": "Medium"}]},
    {"number": 3479, "slug": "fruits-into-baskets-iii", "title": "Fruits Into Baskets III", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "block-placement-queries", "title": "Block Placement Queries", "difficulty": "Hard"}]},
    {"number": 3507, "slug": "minimum-pair-removal-to-sort-array-i", "title": "Minimum Pair Removal to Sort Array I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Heap (Priority Queue)", "Simulation", "Doubly-Linked List", "Ordered Set"], "similar_problems": []},
    {"number": 3508, "slug": "implement-router", "title": "Implement Router", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Design", "Queue", "Ordered Set"], "similar_problems": []},
    {"number": 3510, "slug": "minimum-pair-removal-to-sort-array-ii", "title": "Minimum Pair Removal to Sort Array II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Linked List", "Heap (Priority Queue)", "Simulation", "Doubly-Linked List", "Ordered Set"], "similar_problems": []},
    {"number": 3590, "slug": "kth-smallest-path-xor-sum", "title": "Kth Smallest Path XOR Sum", "difficulty": "Hard", "tags": ["Array", "Tree", "Depth-First Search", "Ordered Set"], "similar_problems": []},
    {"number": 3607, "slug": "power-grid-maintenance", "title": "Power Grid Maintenance", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []}
]