[
    {"number": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 977, "slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-transformed-array", "title": "Sort Transformed Array", "difficulty": "Medium"}]},
    {"number": 643, "slug": "maximum-average-subarray-i", "title": "Maximum Average Subarray I", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": [{"slug": "maximum-average-subarray-ii", "title": "Maximum Average Subarray II", "difficulty": "Hard"}, {"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 1004, "slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "max-consecutive-ones-ii", "title": "Max Consecutive Ones II", "difficulty": "Medium"}, {"slug": "longest-subarray-of-1s-after-deleting-one-element", "title": "Longest Subarray of 1's After Deleting One Element", "difficulty": "Medium"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}, {"slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "maximum-sum-of-distinct-subarrays-with-length-k", "title": "Maximum Sum of Distinct Subarrays With Length K", "difficulty": "Medium"}, {"slug": "maximum-enemy-forts-that-can-be-captured", "title": "Maximum Enemy Forts That Can Be Captured", "difficulty": "Easy"}]},
    {"number": 1480, "slug": "running-sum-of-1d-array", "title": "Running Sum of 1d Array", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 1413, "slug": "minimum-value-to-get-positive-step-by-step-sum", "title": "Minimum Value to Get Positive Step by Step Sum", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 2090, "slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium", "tags": ["Array", "Sliding Window"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "moving-average-from-data-stream", "title": "Moving Average from Data Stream", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "maximum-average-subarray-i", "title": "Maximum Average Subarray I", "difficulty": "Easy"}, {"slug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold", "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold", "difficulty": "Medium"}, {"slug": "find-the-grid-of-region-average", "title": "Find the Grid of Region Average", "difficulty": "Medium"}]},
    {"number": 1832, "slug": "check-if-the-sentence-is-pangram", "title": "Check if the Sentence Is Pangram", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 268, "slug": "missing-number", "title": "Missing Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}, {"slug": "find-the-largest-almost-missing-integer", "title": "Find the Largest Almost Missing Integer", "difficulty": "Easy"}]},
    {"number": 1426, "slug": "counting-elements", "title": "Counting Elements", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 2225, "slug": "find-players-with-zero-or-one-losses", "title": "Find Players With Zero or One Losses", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Sorting", "Counting"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"}]},
    {"number": 1133, "slug": "largest-unique-number", "title": "Largest Unique Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": []},
    {"number": 1189, "slug": "maximum-number-of-balloons", "title": "Maximum Number of Balloons", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 525, "slug": "contiguous-array", "title": "Contiguous Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Prefix Sum"], "similar_problems": [{"slug": "maximum-size-subarray-sum-equals-k", "title": "Maximum Size Subarray Sum Equals k", "difficulty": "Medium"}, {"slug": "find-all-possible-stable-binary-arrays-i", "title": "Find All Possible Stable Binary Arrays I", "difficulty": "Medium"}, {"slug": "find-all-possible-stable-binary-arrays-ii", "title": "Find All Possible Stable Binary Arrays II", "difficulty": "Hard"}]},
    {"number": 383, "slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "stickers-to-spell-word", "title": "Stickers to Spell Word", "difficulty": "Hard"}, {"slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy"}]},
    {"number": 771, "slug": "jewels-and-stones", "title": "Jewels and Stones", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "maximum-erasure-value", "title": "Maximum Erasure Value", "difficulty": "Medium"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "minimum-consecutive-cards-to-pick-up", "title": "Minimum Consecutive Cards to Pick Up", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "count-complete-subarrays-in-an-array", "title": "Count Complete Subarrays in an Array", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 876, "slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 83, "slug": "remove-duplicates-from-sorted-list", "title": "Remove Duplicates from Sorted List", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-list-ii", "title": "Remove Duplicates from Sorted List II", "difficulty": "Medium"}, {"slug": "remove-duplicates-from-an-unsorted-linked-list", "title": "Remove Duplicates From an Unsorted Linked List", "difficulty": "Medium"}]},
    {"number": 92, "slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 71, "slug": "simplify-path", "title": "Simplify Path", "difficulty": "Medium", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1544, "slug": "make-the-string-great", "title": "Make The String Great", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 346, "slug": "moving-average-from-data-stream", "title": "Moving Average from Data Stream", "difficulty": "Easy", "tags": ["Array", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 496, "slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"}, {"slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium"}, {"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}, {"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}]},
    {"number": 901, "slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium", "tags": ["Stack", "Design", "Monotonic Stack", "Data Stream"], "similar_problems": [{"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}]},
    {"number": 111, "slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}]},
    {"number": 1026, "slug": "maximum-difference-between-node-and-ancestor", "title": "Maximum Difference Between Node and Ancestor", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 543, "slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "diameter-of-n-ary-tree", "title": "Diameter of N-Ary Tree", "difficulty": "Medium"}, {"slug": "longest-path-with-different-adjacent-characters", "title": "Longest Path With Different Adjacent Characters", "difficulty": "Hard"}]},
    {"number": 1302, "slug": "deepest-leaves-sum", "title": "Deepest Leaves Sum", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 103, "slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy"}]},
    {"number": 701, "slug": "insert-into-a-binary-search-tree", "title": "Insert into a Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"}]},
    {"number": 270, "slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy", "tags": ["Binary Search", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 1971, "slug": "find-if-path-exists-in-graph", "title": "Find if Path Exists in Graph", "difficulty": "Easy", "tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "valid-arrangement-of-pairs", "title": "Valid Arrangement of Pairs", "difficulty": "Hard"}, {"slug": "paths-in-maze-that-lead-to-same-room", "title": "Paths in Maze That Lead to Same Room", "difficulty": "Medium"}]},
    {"number": 323, "slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "graph-valid-tree", "title": "Graph Valid Tree", "difficulty": "Medium"}, {"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "paths-in-maze-that-lead-to-same-room", "title": "Paths in Maze That Lead to Same Room", "difficulty": "Medium"}, {"slug": "count-the-number-of-complete-components", "title": "Count the Number of Complete Components", "difficulty": "Medium"}]},
    {"number": 695, "slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}, {"slug": "largest-submatrix-with-rearrangements", "title": "Largest Submatrix With Rearrangements", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}]},
    {"number": 2368, "slug": "reachable-nodes-with-restrictions", "title": "Reachable Nodes With Restrictions", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Tree", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "open-the-lock", "title": "Open the Lock", "difficulty": "Medium"}, {"slug": "minimum-jumps-to-reach-home", "title": "Minimum Jumps to Reach Home", "difficulty": "Medium"}]},
    {"number": 1926, "slug": "nearest-exit-from-entrance-in-maze", "title": "Nearest Exit from Entrance in Maze", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 909, "slug": "snakes-and-ladders", "title": "Snakes and Ladders", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "most-profitable-path-in-a-tree", "title": "Most Profitable Path in a Tree", "difficulty": "Medium"}]},
    {"number": 433, "slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"}]},
    {"number": 1306, "slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "maximum-number-of-jumps-to-reach-the-last-index", "title": "Maximum Number of Jumps to Reach the Last Index", "difficulty": "Medium"}]},
    {"number": 2101, "slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium", "tags": ["Array", "Math", "Depth-First Search", "Breadth-First Search", "Graph", "Geometry"], "similar_problems": [{"slug": "minesweeper", "title": "Minesweeper", "difficulty": "Medium"}, {"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 1962, "slug": "remove-stones-to-minimize-the-total", "title": "Remove Stones to Minimize the Total", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-operations-to-halve-array-sum", "title": "Minimum Operations to Halve Array Sum", "difficulty": "Medium"}, {"slug": "maximal-score-after-applying-k-operations", "title": "Maximal Score After Applying K Operations", "difficulty": "Medium"}, {"slug": "take-gifts-from-the-richest-pile", "title": "Take Gifts From the Richest Pile", "difficulty": "Easy"}]},
    {"number": 1167, "slug": "minimum-cost-to-connect-sticks", "title": "Minimum Cost to Connect Sticks", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-cost-to-merge-stones", "title": "Minimum Cost to Merge Stones", "difficulty": "Hard"}]},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 973, "slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium", "tags": ["Array", "Math", "Divide and Conquer", "Geometry", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}, {"slug": "find-nearest-point-that-has-the-same-x-or-y-coordinate", "title": "Find Nearest Point That Has the Same X or Y Coordinate", "difficulty": "Easy"}, {"slug": "minimum-rectangles-to-cover-points", "title": "Minimum Rectangles to Cover Points", "difficulty": "Medium"}, {"slug": "k-th-nearest-obstacle-queries", "title": "K-th Nearest Obstacle Queries", "difficulty": "Medium"}]},
    {"number": 703, "slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy", "tags": ["Tree", "Design", "Binary Search Tree", "Heap (Priority Queue)", "Binary Tree", "Data Stream"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "finding-mk-average", "title": "Finding MK Average", "difficulty": "Hard"}, {"slug": "sequentially-ordinal-rank-tracker", "title": "Sequentially Ordinal Rank Tracker", "difficulty": "Hard"}]},
    {"number": 1323, "slug": "maximum-69-number", "title": "Maximum 69 Number", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 1710, "slug": "maximum-units-on-a-truck", "title": "Maximum Units on a Truck", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-bags-with-full-capacity-of-rocks", "title": "Maximum Bags With Full Capacity of Rocks", "difficulty": "Medium"}]},
    {"number": 1196, "slug": "how-many-apples-can-you-put-into-the-basket", "title": "How Many Apples Can You Put into the Basket", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1338, "slug": "reduce-array-size-to-the-half", "title": "Reduce Array Size to The Half", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 35, "slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}]},
    {"number": 2389, "slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}]},
    {"number": 1283, "slug": "find-the-smallest-divisor-given-a-threshold", "title": "Find the Smallest Divisor Given a Threshold", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}]},
    {"number": 1231, "slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}, {"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}]},
    {"number": 410, "slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "subsequence-of-size-k-with-the-largest-even-sum", "title": "Subsequence of Size K With the Largest Even Sum", "difficulty": "Medium"}, {"slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-ii", "title": "Distribute Elements Into Two Arrays II", "difficulty": "Hard"}]},
    {"number": 797, "slug": "all-paths-from-source-to-target", "title": "All Paths From Source to Target", "difficulty": "Medium", "tags": ["Backtracking", "Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "number-of-ways-to-arrive-at-destination", "title": "Number of Ways to Arrive at Destination", "difficulty": "Medium"}, {"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 22, "slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 967, "slug": "numbers-with-same-consecutive-differences", "title": "Numbers With Same Consecutive Differences", "difficulty": "Medium", "tags": ["Backtracking", "Breadth-First Search"], "similar_problems": []},
    {"number": 216, "slug": "combination-sum-iii", "title": "Combination Sum III", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}]},
    {"number": 70, "slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}, {"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "count-ways-to-build-good-strings", "title": "Count Ways To Build Good Strings", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 746, "slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}]},
    {"number": 322, "slug": "coin-change", "title": "Coin Change", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search"], "similar_problems": [{"slug": "minimum-cost-for-tickets", "title": "Minimum Cost For Tickets", "difficulty": "Medium"}, {"slug": "maximum-value-of-k-coins-from-piles", "title": "Maximum Value of K Coins From Piles", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "count-of-sub-multisets-with-bounded-sum", "title": "Count of Sub-Multisets With Bounded Sum", "difficulty": "Hard"}, {"slug": "length-of-the-longest-subsequence-that-sums-to-target", "title": "Length of the Longest Subsequence That Sums to Target", "difficulty": "Medium"}, {"slug": "minimum-number-of-coins-to-be-added", "title": "Minimum Number of Coins to be Added", "difficulty": "Medium"}, {"slug": "most-expensive-item-that-can-not-be-bought", "title": "Most Expensive Item That Can Not Be Bought", "difficulty": "Medium"}, {"slug": "inverse-coin-change", "title": "Inverse Coin Change", "difficulty": "Medium"}]},
    {"number": 714, "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "title": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}]},
    {"number": 309, "slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}]},
    {"number": 63, "slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 931, "slug": "minimum-falling-path-sum", "title": "Minimum Falling Path Sum", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-falling-path-sum-ii", "title": "Minimum Falling Path Sum II", "difficulty": "Hard"}]},
    {"number": 208, "slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard"}, {"slug": "replace-words", "title": "Replace Words", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 461, "slug": "hamming-distance", "title": "Hamming Distance", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "total-hamming-distance", "title": "Total Hamming Distance", "difficulty": "Medium"}]},
    {"number": 57, "slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium", "tags": ["Array"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 787, "slug": "cheapest-flights-within-k-stops", "title": "Cheapest Flights Within K Stops", "difficulty": "Medium", "tags": ["Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Shortest Path"], "similar_problems": [{"slug": "maximum-vacation-days", "title": "Maximum Vacation Days", "difficulty": "Hard"}, {"slug": "minimum-cost-to-reach-city-with-discounts", "title": "Minimum Cost to Reach City With Discounts", "difficulty": "Medium"}]}
]