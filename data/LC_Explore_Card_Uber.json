[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 49, "slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}, {"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}]},
    {"number": 68, "slug": "text-justification", "title": "Text Justification", "difficulty": "Hard", "tags": ["Array", "String", "Simulation"], "similar_problems": [{"slug": "rearrange-spaces-between-words", "title": "Rearrange Spaces Between Words", "difficulty": "Easy"}, {"slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard"}, {"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}, {"slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium"}]},
    {"number": 468, "slug": "validate-ip-address", "title": "Validate IP Address", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "ip-to-cidr", "title": "IP to CIDR", "difficulty": "Medium"}, {"slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 332, "slug": "reconstruct-itinerary", "title": "Reconstruct Itinerary", "difficulty": "Hard", "tags": ["Depth-First Search", "Graph", "Eulerian Circuit"], "similar_problems": [{"slug": "longest-common-subpath", "title": "Longest Common Subpath", "difficulty": "Hard"}, {"slug": "valid-arrangement-of-pairs", "title": "Valid Arrangement of Pairs", "difficulty": "Hard"}]},
    {"number": 399, "slug": "evaluate-division", "title": "Evaluate Division", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Shortest Path"], "similar_problems": [{"slug": "check-for-contradictions-in-equations", "title": "Check for Contradictions in Equations", "difficulty": "Hard"}, {"slug": "maximize-amount-after-two-days-of-conversions", "title": "Maximize Amount After Two Days of Conversions", "difficulty": "Medium"}]},
    {"number": 652, "slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium", "tags": ["Hash Table", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "construct-string-from-binary-tree", "title": "Construct String from Binary Tree", "difficulty": "Medium"}, {"slug": "delete-duplicate-folders-in-system", "title": "Delete Duplicate Folders in System", "difficulty": "Hard"}]},
    {"number": 655, "slug": "print-binary-tree", "title": "Print Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 428, "slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "encode-n-ary-tree-to-binary-tree", "title": "Encode N-ary Tree to Binary Tree", "difficulty": "Hard"}]},
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "pour-water", "title": "Pour Water", "difficulty": "Medium"}, {"slug": "maximum-value-of-an-ordered-triplet-ii", "title": "Maximum Value of an Ordered Triplet II", "difficulty": "Medium"}]},
    {"number": 224, "slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard", "tags": ["Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}, {"slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 253, "slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "car-pooling", "title": "Car Pooling", "difficulty": "Medium"}, {"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 621, "slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}, {"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}, {"slug": "maximum-number-of-weeks-for-which-you-can-work", "title": "Maximum Number of Weeks for Which You Can Work", "difficulty": "Medium"}, {"slug": "find-minimum-time-to-finish-all-jobs-ii", "title": "Find Minimum Time to Finish All Jobs II", "difficulty": "Medium"}, {"slug": "task-scheduler-ii", "title": "Task Scheduler II", "difficulty": "Medium"}, {"slug": "generate-schedule", "title": "Generate Schedule", "difficulty": "Medium"}]},
    {"number": 636, "slug": "exclusive-time-of-functions", "title": "Exclusive Time of Functions", "difficulty": "Medium", "tags": ["Array", "Stack"], "similar_problems": []},
    {"number": 759, "slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard", "tags": ["Array", "Line Sweep", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 78, "slug": "subsets", "title": "Subsets", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "subsets-ii", "title": "Subsets II", "difficulty": "Medium"}, {"slug": "generalized-abbreviation", "title": "Generalized Abbreviation", "difficulty": "Medium"}, {"slug": "letter-case-permutation", "title": "Letter Case Permutation", "difficulty": "Medium"}, {"slug": "find-array-given-subset-sums", "title": "Find Array Given Subset Sums", "difficulty": "Hard"}, {"slug": "count-number-of-maximum-bitwise-or-subsets", "title": "Count Number of Maximum Bitwise-OR Subsets", "difficulty": "Medium"}]},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}, {"slug": "count-ways-to-group-overlapping-ranges", "title": "Count Ways to Group Overlapping Ranges", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}, {"slug": "count-days-without-meetings", "title": "Count Days Without Meetings", "difficulty": "Medium"}, {"slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium"}]},
    {"number": 126, "slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard", "tags": ["Hash Table", "String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard"}, {"slug": "groups-of-strings", "title": "Groups of Strings", "difficulty": "Hard"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 286, "slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "shortest-distance-from-all-buildings", "title": "Shortest Distance from All Buildings", "difficulty": "Hard"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard"}, {"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}, {"slug": "count-the-number-of-houses-at-a-certain-distance-i", "title": "Count the Number of Houses at a Certain Distance I", "difficulty": "Medium"}, {"slug": "count-the-number-of-houses-at-a-certain-distance-ii", "title": "Count the Number of Houses at a Certain Distance II", "difficulty": "Hard"}]},
    {"number": 301, "slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard", "tags": ["String", "Backtracking", "Breadth-First Search"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 679, "slug": "24-game", "title": "24 Game", "difficulty": "Hard", "tags": ["Array", "Math", "Backtracking"], "similar_problems": []},
    {"number": 695, "slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}, {"slug": "largest-submatrix-with-rearrangements", "title": "Largest Submatrix With Rearrangements", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}]},
    {"number": 815, "slug": "bus-routes", "title": "Bus Routes", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Breadth-First Search"], "similar_problems": [{"slug": "minimum-costs-using-the-train-line", "title": "Minimum Costs Using the Train Line", "difficulty": "Hard"}]},
    {"number": 934, "slug": "shortest-bridge", "title": "Shortest Bridge", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "minimum-number-of-operations-to-make-x-and-y-equal", "title": "Minimum Number of Operations to Make X and Y Equal", "difficulty": "Medium"}]},
    {"number": 139, "slug": "word-break", "title": "Word Break", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard"}, {"slug": "extra-characters-in-a-string", "title": "Extra Characters in a String", "difficulty": "Medium"}]},
    {"number": 279, "slug": "perfect-squares", "title": "Perfect Squares", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Breadth-First Search"], "similar_problems": [{"slug": "count-primes", "title": "Count Primes", "difficulty": "Medium"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "ways-to-express-an-integer-as-sum-of-powers", "title": "Ways to Express an Integer as Sum of Powers", "difficulty": "Medium"}]},
    {"number": 354, "slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "the-number-of-weak-characters-in-the-game", "title": "The Number of Weak Characters in the Game", "difficulty": "Medium"}, {"slug": "longest-non-decreasing-subarray-from-two-arrays", "title": "Longest Non-decreasing Subarray From Two Arrays", "difficulty": "Medium"}]},
    {"number": 568, "slug": "maximum-vacation-days", "title": "Maximum Vacation Days", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "cheapest-flights-within-k-stops", "title": "Cheapest Flights Within K Stops", "difficulty": "Medium"}]},
    {"number": 741, "slug": "cherry-pickup", "title": "Cherry Pickup", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "maximum-path-quality-of-a-graph", "title": "Maximum Path Quality of a Graph", "difficulty": "Hard"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 346, "slug": "moving-average-from-data-stream", "title": "Moving Average from Data Stream", "difficulty": "Easy", "tags": ["Array", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 353, "slug": "design-snake-game", "title": "Design Snake Game", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Design", "Queue", "Simulation"], "similar_problems": []},
    {"number": 359, "slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy", "tags": ["Hash Table", "Design", "Data Stream"], "similar_problems": [{"slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium"}]},
    {"number": 362, "slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy"}]},
    {"number": 381, "slug": "insert-delete-getrandom-o1-duplicates-allowed", "title": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "similar_problems": [{"slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium"}]},
    {"number": 642, "slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard", "tags": ["String", "Depth-First Search", "Design", "Trie", "Sorting", "Heap (Priority Queue)", "Data Stream"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}]},
    {"number": 36, "slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "sudoku-solver", "title": "Sudoku Solver", "difficulty": "Hard"}, {"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}]},
    {"number": 135, "slug": "candy", "title": "Candy", "difficulty": "Hard", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimize-maximum-value-in-a-grid", "title": "Minimize Maximum Value in a Grid", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 166, "slug": "fraction-to-recurring-decimal", "title": "Fraction to Recurring Decimal", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": []},
    {"number": 305, "slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Union Find"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "process-restricted-friend-requests", "title": "Process Restricted Friend Requests", "difficulty": "Hard"}]},
    {"number": 398, "slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium", "tags": ["Hash Table", "Math", "Reservoir Sampling", "Randomized"], "similar_problems": [{"slug": "linked-list-random-node", "title": "Linked List Random Node", "difficulty": "Medium"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}, {"slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium"}]},
    {"number": 535, "slug": "encode-and-decode-tinyurl", "title": "Encode and Decode TinyURL", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Hash Function"], "similar_problems": []},
    {"number": 640, "slug": "solve-the-equation", "title": "Solve the Equation", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "fraction-addition-and-subtraction", "title": "Fraction Addition and Subtraction", "difficulty": "Medium"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 427, "slug": "construct-quad-tree", "title": "Construct Quad Tree", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Tree", "Matrix"], "similar_problems": []},
    {"number": 528, "slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Prefix Sum", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}, {"slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium"}]}
]