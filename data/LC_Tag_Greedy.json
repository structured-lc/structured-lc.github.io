[
    {"number": 11, "slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}]},
    {"number": 44, "slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"], "similar_problems": [{"slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard"}, {"slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy"}]},
    {"number": 45, "slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard"}, {"slug": "maximum-number-of-jumps-to-reach-the-last-index", "title": "Maximum Number of Jumps to Reach the Last Index", "difficulty": "Medium"}, {"slug": "visit-array-positions-to-maximize-score", "title": "Visit Array Positions to Maximize Score", "difficulty": "Medium"}]},
    {"number": 55, "slug": "jump-game", "title": "Jump Game", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard"}, {"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 122, "slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "title": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": "Medium"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}]},
    {"number": 134, "slug": "gas-station", "title": "Gas Station", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "maximize-the-topmost-element-after-k-moves", "title": "Maximize the Topmost Element After K Moves", "difficulty": "Medium"}]},
    {"number": 135, "slug": "candy", "title": "Candy", "difficulty": "Hard", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimize-maximum-value-in-a-grid", "title": "Minimize Maximum Value in a Grid", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 179, "slug": "largest-number", "title": "Largest Number", "difficulty": "Medium", "tags": ["Array", "String", "Greedy", "Sorting"], "similar_problems": [{"slug": "smallest-value-of-the-rearranged-number", "title": "Smallest Value of the Rearranged Number", "difficulty": "Medium"}, {"slug": "find-the-key-of-the-numbers", "title": "Find the Key of the Numbers", "difficulty": "Easy"}]},
    {"number": 253, "slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "car-pooling", "title": "Car Pooling", "difficulty": "Medium"}, {"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 280, "slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium"}, {"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium"}]},
    {"number": 316, "slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}]},
    {"number": 321, "slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "maximum-swap", "title": "Maximum Swap", "difficulty": "Medium"}]},
    {"number": 324, "slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Greedy", "Sorting", "Quickselect"], "similar_problems": [{"slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium"}, {"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium"}, {"slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium"}]},
    {"number": 330, "slug": "patching-array", "title": "Patching Array", "difficulty": "Hard", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-consecutive-values-you-can-make", "title": "Maximum Number of Consecutive Values You Can Make", "difficulty": "Medium"}]},
    {"number": 334, "slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "count-special-quadruplets", "title": "Count Special Quadruplets", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 358, "slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}, {"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}, {"slug": "construct-string-with-repeat-limit", "title": "Construct String With Repeat Limit", "difficulty": "Medium"}]},
    {"number": 376, "slug": "wiggle-subsequence", "title": "Wiggle Subsequence", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "rearrange-array-elements-by-sign", "title": "Rearrange Array Elements by Sign", "difficulty": "Medium"}]},
    {"number": 397, "slug": "integer-replacement", "title": "Integer Replacement", "difficulty": "Medium", "tags": ["Dynamic Programming", "Greedy", "Bit Manipulation", "Memoization"], "similar_problems": []},
    {"number": 402, "slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard"}, {"slug": "monotone-increasing-digits", "title": "Monotone Increasing Digits", "difficulty": "Medium"}, {"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 409, "slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": [{"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium"}, {"slug": "largest-palindromic-number", "title": "Largest Palindromic Number", "difficulty": "Medium"}]},
    {"number": 410, "slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "subsequence-of-size-k-with-the-largest-even-sum", "title": "Subsequence of Size K With the Largest Even Sum", "difficulty": "Medium"}, {"slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-ii", "title": "Distribute Elements Into Two Arrays II", "difficulty": "Hard"}]},
    {"number": 420, "slug": "strong-password-checker", "title": "Strong Password Checker", "difficulty": "Hard", "tags": ["String", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy"}]},
    {"number": 435, "slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}]},
    {"number": 452, "slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium"}]},
    {"number": 455, "slug": "assign-cookies", "title": "Assign Cookies", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 484, "slug": "find-permutation", "title": "Find Permutation", "difficulty": "Medium", "tags": ["Array", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "using-a-robot-to-print-the-lexicographically-smallest-string", "title": "Using a Robot to Print the Lexicographically Smallest String", "difficulty": "Medium"}]},
    {"number": 502, "slug": "ipo", "title": "IPO", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-subsequence-score", "title": "Maximum Subsequence Score", "difficulty": "Medium"}, {"slug": "maximum-elegance-of-a-k-length-subsequence", "title": "Maximum Elegance of a K-Length Subsequence", "difficulty": "Hard"}]},
    {"number": 517, "slug": "super-washing-machines", "title": "Super Washing Machines", "difficulty": "Hard", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 527, "slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard", "tags": ["Array", "String", "Greedy", "Trie", "Sorting"], "similar_problems": [{"slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy"}, {"slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard"}, {"slug": "check-if-a-string-is-an-acronym-of-words", "title": "Check if a String Is an Acronym of Words", "difficulty": "Easy"}]},
    {"number": 555, "slug": "split-concatenated-strings", "title": "Split Concatenated Strings", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 561, "slug": "array-partition", "title": "Array Partition", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": [{"slug": "minimum-difference-between-highest-and-lowest-of-k-scores", "title": "Minimum Difference Between Highest and Lowest of K Scores", "difficulty": "Easy"}, {"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 581, "slug": "shortest-unsorted-continuous-subarray", "title": "Shortest Unsorted Continuous Subarray", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "smallest-subarray-to-sort-in-every-sliding-window", "title": "Smallest Subarray to Sort in Every Sliding Window", "difficulty": "Medium"}]},
    {"number": 605, "slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}]},
    {"number": 611, "slug": "valid-triangle-number", "title": "Valid Triangle Number", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "find-polygon-with-the-largest-perimeter", "title": "Find Polygon With the Largest Perimeter", "difficulty": "Medium"}]},
    {"number": 621, "slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}, {"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}, {"slug": "maximum-number-of-weeks-for-which-you-can-work", "title": "Maximum Number of Weeks for Which You Can Work", "difficulty": "Medium"}, {"slug": "find-minimum-time-to-finish-all-jobs-ii", "title": "Find Minimum Time to Finish All Jobs II", "difficulty": "Medium"}, {"slug": "task-scheduler-ii", "title": "Task Scheduler II", "difficulty": "Medium"}, {"slug": "generate-schedule", "title": "Generate Schedule", "difficulty": "Medium"}]},
    {"number": 624, "slug": "maximum-distance-in-arrays", "title": "Maximum Distance in Arrays", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 625, "slug": "minimum-factorization", "title": "Minimum Factorization", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 630, "slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "parallel-courses-iii", "title": "Parallel Courses III", "difficulty": "Hard"}]},
    {"number": 632, "slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Sliding Window", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}]},
    {"number": 646, "slug": "maximum-length-of-pair-chain", "title": "Maximum Length of Pair Chain", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "non-decreasing-subsequences", "title": "Non-decreasing Subsequences", "difficulty": "Medium"}, {"slug": "longest-non-decreasing-subarray-from-two-arrays", "title": "Longest Non-decreasing Subarray From Two Arrays", "difficulty": "Medium"}]},
    {"number": 649, "slug": "dota2-senate", "title": "Dota2 Senate", "difficulty": "Medium", "tags": ["String", "Greedy", "Queue"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}]},
    {"number": 659, "slug": "split-array-into-consecutive-subsequences", "title": "Split Array into Consecutive Subsequences", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "divide-array-in-sets-of-k-consecutive-numbers", "title": "Divide Array in Sets of K Consecutive Numbers", "difficulty": "Medium"}]},
    {"number": 670, "slug": "maximum-swap", "title": "Maximum Swap", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard"}]},
    {"number": 678, "slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Stack", "Greedy"], "similar_problems": [{"slug": "special-binary-string", "title": "Special Binary String", "difficulty": "Hard"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 680, "slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "valid-palindrome-iii", "title": "Valid Palindrome III", "difficulty": "Hard"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}]},
    {"number": 714, "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "title": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}]},
    {"number": 738, "slug": "monotone-increasing-digits", "title": "Monotone Increasing Digits", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}]},
    {"number": 757, "slug": "set-intersection-size-at-least-two", "title": "Set Intersection Size At Least Two", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 763, "slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium", "tags": ["Hash Table", "Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}]},
    {"number": 765, "slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard", "tags": ["Greedy", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "k-similar-strings", "title": "K-Similar Strings", "difficulty": "Hard"}]},
    {"number": 767, "slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}, {"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}, {"slug": "longest-happy-string", "title": "Longest Happy String", "difficulty": "Medium"}]},
    {"number": 768, "slug": "max-chunks-to-make-sorted-ii", "title": "Max Chunks To Make Sorted II", "difficulty": "Hard", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "max-chunks-to-make-sorted", "title": "Max Chunks To Make Sorted", "difficulty": "Medium"}]},
    {"number": 769, "slug": "max-chunks-to-make-sorted", "title": "Max Chunks To Make Sorted", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "max-chunks-to-make-sorted-ii", "title": "Max Chunks To Make Sorted II", "difficulty": "Hard"}]},
    {"number": 781, "slug": "rabbits-in-forest", "title": "Rabbits in Forest", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Greedy"], "similar_problems": [{"slug": "group-the-people-given-the-group-size-they-belong-to", "title": "Group the People Given the Group Size They Belong To", "difficulty": "Medium"}]},
    {"number": 807, "slug": "max-increase-to-keep-city-skyline", "title": "Max Increase to Keep City Skyline", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 826, "slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 846, "slug": "hand-of-straights", "title": "Hand of Straights", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 857, "slug": "minimum-cost-to-hire-k-workers", "title": "Minimum Cost to Hire K Workers", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-subsequence-score", "title": "Maximum Subsequence Score", "difficulty": "Medium"}]},
    {"number": 860, "slug": "lemonade-change", "title": "Lemonade Change", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 861, "slug": "score-after-flipping-matrix", "title": "Score After Flipping Matrix", "difficulty": "Medium", "tags": ["Array", "Greedy", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}]},
    {"number": 870, "slug": "advantage-shuffle", "title": "Advantage Shuffle", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 871, "slug": "minimum-number-of-refueling-stops", "title": "Minimum Number of Refueling Stops", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 881, "slug": "boats-to-save-people", "title": "Boats to Save People", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 910, "slug": "smallest-range-ii", "title": "Smallest Range II", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 921, "slug": "minimum-add-to-make-parentheses-valid", "title": "Minimum Add to Make Parentheses Valid", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 936, "slug": "stamping-the-sequence", "title": "Stamping The Sequence", "difficulty": "Hard", "tags": ["String", "Stack", "Greedy", "Queue"], "similar_problems": []},
    {"number": 942, "slug": "di-string-match", "title": "DI String Match", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium"}]},
    {"number": 945, "slug": "minimum-increment-to-make-array-unique", "title": "Minimum Increment to Make Array Unique", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}, {"slug": "maximum-product-after-k-increments", "title": "Maximum Product After K Increments", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-elements-in-array-distinct", "title": "Minimum Number of Operations to Make Elements in Array Distinct", "difficulty": "Easy"}]},
    {"number": 948, "slug": "bag-of-tokens", "title": "Bag of Tokens", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 954, "slug": "array-of-doubled-pairs", "title": "Array of Doubled Pairs", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-original-array-from-doubled-array", "title": "Find Original Array From Doubled Array", "difficulty": "Medium"}]},
    {"number": 955, "slug": "delete-columns-to-make-sorted-ii", "title": "Delete Columns to Make Sorted II", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 969, "slug": "pancake-sorting", "title": "Pancake Sorting", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 976, "slug": "largest-perimeter-triangle", "title": "Largest Perimeter Triangle", "difficulty": "Easy", "tags": ["Array", "Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "largest-triangle-area", "title": "Largest Triangle Area", "difficulty": "Easy"}]},
    {"number": 984, "slug": "string-without-aaa-or-bbb", "title": "String Without AAA or BBB", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 991, "slug": "broken-calculator", "title": "Broken Calculator", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "2-keys-keyboard", "title": "2 Keys Keyboard", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-the-integer-zero", "title": "Minimum Operations to Make the Integer Zero", "difficulty": "Medium"}]},
    {"number": 1005, "slug": "maximize-sum-of-array-after-k-negations", "title": "Maximize Sum Of Array After K Negations", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}]},
    {"number": 1007, "slug": "minimum-domino-rotations-for-equal-row", "title": "Minimum Domino Rotations For Equal Row", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1013, "slug": "partition-array-into-three-parts-with-equal-sum", "title": "Partition Array Into Three Parts With Equal Sum", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy"}]},
    {"number": 1024, "slug": "video-stitching", "title": "Video Stitching", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 1029, "slug": "two-city-scheduling", "title": "Two City Scheduling", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "rearrange-array-to-maximize-prefix-score", "title": "Rearrange Array to Maximize Prefix Score", "difficulty": "Medium"}]},
    {"number": 1053, "slug": "previous-permutation-with-one-swap", "title": "Previous Permutation With One Swap", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1054, "slug": "distant-barcodes", "title": "Distant Barcodes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": []},
    {"number": 1055, "slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Binary Search", "Greedy"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}]},
    {"number": 1058, "slug": "minimize-rounding-error-to-meet-target", "title": "Minimize Rounding Error to Meet Target", "difficulty": "Medium", "tags": ["Array", "Math", "String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1081, "slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}]},
    {"number": 1090, "slug": "largest-values-from-labels", "title": "Largest Values From Labels", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "maximize-ysum-by-picking-a-triplet-of-distinct-xvalues", "title": "Maximize Y‑Sum by Picking a Triplet of Distinct X‑Values", "difficulty": "Medium"}]},
    {"number": 1130, "slug": "minimum-cost-tree-from-leaf-values", "title": "Minimum Cost Tree From Leaf Values", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 1144, "slug": "decrease-elements-to-make-array-zigzag", "title": "Decrease Elements To Make Array Zigzag", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1147, "slug": "longest-chunked-palindrome-decomposition", "title": "Longest Chunked Palindrome Decomposition", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "palindrome-rearrangement-queries", "title": "Palindrome Rearrangement Queries", "difficulty": "Hard"}]},
    {"number": 1167, "slug": "minimum-cost-to-connect-sticks", "title": "Minimum Cost to Connect Sticks", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-cost-to-merge-stones", "title": "Minimum Cost to Merge Stones", "difficulty": "Hard"}]},
    {"number": 1183, "slug": "maximum-number-of-ones", "title": "Maximum Number of Ones", "difficulty": "Hard", "tags": ["Math", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1196, "slug": "how-many-apples-can-you-put-into-the-basket", "title": "How Many Apples Can You Put into the Basket", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1199, "slug": "minimum-time-to-build-blocks", "title": "Minimum Time to Build Blocks", "difficulty": "Hard", "tags": ["Array", "Math", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "find-time-required-to-eliminate-bacterial-strains", "title": "Find Time Required to Eliminate Bacterial Strains", "difficulty": "Hard"}]},
    {"number": 1217, "slug": "minimum-cost-to-move-chips-to-the-same-position", "title": "Minimum Cost to Move Chips to The Same Position", "difficulty": "Easy", "tags": ["Array", "Math", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-operations-to-move-all-balls-to-each-box", "title": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": "Medium"}, {"slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy"}]},
    {"number": 1221, "slug": "split-a-string-in-balanced-strings", "title": "Split a String in Balanced Strings", "difficulty": "Easy", "tags": ["String", "Greedy", "Counting"], "similar_problems": [{"slug": "split-strings-by-separator", "title": "Split Strings by Separator", "difficulty": "Easy"}]},
    {"number": 1247, "slug": "minimum-swaps-to-make-strings-equal", "title": "Minimum Swaps to Make Strings Equal", "difficulty": "Medium", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 1253, "slug": "reconstruct-a-2-row-binary-matrix", "title": "Reconstruct a 2-Row Binary Matrix", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "find-valid-matrix-given-row-and-column-sums", "title": "Find Valid Matrix Given Row and Column Sums", "difficulty": "Medium"}]},
    {"number": 1262, "slug": "greatest-sum-divisible-by-three", "title": "Greatest Sum Divisible by Three", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1282, "slug": "group-the-people-given-the-group-size-they-belong-to", "title": "Group the People Given the Group Size They Belong To", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": [{"slug": "rabbits-in-forest", "title": "Rabbits in Forest", "difficulty": "Medium"}, {"slug": "maximum-number-of-groups-with-increasing-length", "title": "Maximum Number of Groups With Increasing Length", "difficulty": "Hard"}]},
    {"number": 1296, "slug": "divide-array-in-sets-of-k-consecutive-numbers", "title": "Divide Array in Sets of K Consecutive Numbers", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting"], "similar_problems": [{"slug": "split-array-into-consecutive-subsequences", "title": "Split Array into Consecutive Subsequences", "difficulty": "Medium"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 1323, "slug": "maximum-69-number", "title": "Maximum 69 Number", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 1326, "slug": "minimum-number-of-taps-to-open-to-water-a-garden", "title": "Minimum Number of Taps to Open to Water a Garden", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 1328, "slug": "break-a-palindrome", "title": "Break a Palindrome", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1330, "slug": "reverse-subarray-to-maximize-array-value", "title": "Reverse Subarray To Maximize Array Value", "difficulty": "Hard", "tags": ["Array", "Math", "Greedy"], "similar_problems": []},
    {"number": 1338, "slug": "reduce-array-size-to-the-half", "title": "Reduce Array Size to The Half", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1353, "slug": "maximum-number-of-events-that-can-be-attended", "title": "Maximum Number of Events That Can Be Attended", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-number-of-events-that-can-be-attended-ii", "title": "Maximum Number of Events That Can Be Attended II", "difficulty": "Hard"}, {"slug": "maximum-earnings-from-taxi", "title": "Maximum Earnings From Taxi", "difficulty": "Medium"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}]},
    {"number": 1363, "slug": "largest-multiple-of-three", "title": "Largest Multiple of Three", "difficulty": "Hard", "tags": ["Array", "Math", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1382, "slug": "balance-a-binary-search-tree", "title": "Balance a Binary Search Tree", "difficulty": "Medium", "tags": ["Divide and Conquer", "Greedy", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": []},
    {"number": 1383, "slug": "maximum-performance-of-a-team", "title": "Maximum Performance of a Team", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-fruits-harvested-after-at-most-k-steps", "title": "Maximum Fruits Harvested After at Most K Steps", "difficulty": "Hard"}]},
    {"number": 1386, "slug": "cinema-seat-allocation", "title": "Cinema Seat Allocation", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "booking-concert-tickets-in-groups", "title": "Booking Concert Tickets in Groups", "difficulty": "Hard"}]},
    {"number": 1388, "slug": "pizza-with-3n-slices", "title": "Pizza With 3n Slices", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1400, "slug": "construct-k-palindrome-strings", "title": "Construct K Palindrome Strings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Counting"], "similar_problems": []},
    {"number": 1402, "slug": "reducing-dishes", "title": "Reducing Dishes", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1403, "slug": "minimum-subsequence-in-non-increasing-order", "title": "Minimum Subsequence in Non-Increasing Order", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}]},
    {"number": 1405, "slug": "longest-happy-string", "title": "Longest Happy String", "difficulty": "Medium", "tags": ["String", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}]},
    {"number": 1414, "slug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k", "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 1432, "slug": "max-difference-you-can-get-from-changing-an-integer", "title": "Max Difference You Can Get From Changing an Integer", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 1433, "slug": "check-if-a-string-can-break-another-string", "title": "Check If a String Can Break Another String", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1465, "slug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts", "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1481, "slug": "least-number-of-unique-integers-after-k-removals", "title": "Least Number of Unique Integers after K Removals", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "maximum-number-of-distinct-elements-after-operations", "title": "Maximum Number of Distinct Elements After Operations", "difficulty": "Medium"}]},
    {"number": 1488, "slug": "avoid-flood-in-the-city", "title": "Avoid Flood in The City", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1505, "slug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", "title": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits", "difficulty": "Hard", "tags": ["String", "Greedy", "Binary Indexed Tree", "Segment Tree"], "similar_problems": []},
    {"number": 1509, "slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves", "title": "Minimum Difference Between Largest and Smallest Value in Three Moves", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimize-the-maximum-difference-of-pairs", "title": "Minimize the Maximum Difference of Pairs", "difficulty": "Medium"}]},
    {"number": 1520, "slug": "maximum-number-of-non-overlapping-substrings", "title": "Maximum Number of Non-Overlapping Substrings", "difficulty": "Hard", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 1526, "slug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array", "title": "Minimum Number of Increments on Subarrays to Form a Target Array", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 1529, "slug": "minimum-suffix-flips", "title": "Minimum Suffix Flips", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii", "title": "Minimum Operations to Make Binary Array Elements Equal to One II", "difficulty": "Medium"}]},
    {"number": 1536, "slug": "minimum-swaps-to-arrange-a-binary-grid", "title": "Minimum Swaps to Arrange a Binary Grid", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 1537, "slug": "get-the-maximum-score", "title": "Get the Maximum Score", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "maximum-score-of-a-node-sequence", "title": "Maximum Score of a Node Sequence", "difficulty": "Hard"}]},
    {"number": 1541, "slug": "minimum-insertions-to-balance-a-parentheses-string", "title": "Minimum Insertions to Balance a Parentheses String", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}]},
    {"number": 1546, "slug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target", "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Prefix Sum"], "similar_problems": []},
    {"number": 1558, "slug": "minimum-numbers-of-function-calls-to-make-target-array", "title": "Minimum Numbers of Function Calls to Make Target Array", "difficulty": "Medium", "tags": ["Array", "Greedy", "Bit Manipulation"], "similar_problems": []},
    {"number": 1561, "slug": "maximum-number-of-coins-you-can-get", "title": "Maximum Number of Coins You Can Get", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting", "Game Theory"], "similar_problems": []},
    {"number": 1564, "slug": "put-boxes-into-the-warehouse-i", "title": "Put Boxes Into the Warehouse I", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "put-boxes-into-the-warehouse-ii", "title": "Put Boxes Into the Warehouse II", "difficulty": "Medium"}]},
    {"number": 1567, "slug": "maximum-length-of-subarray-with-positive-product", "title": "Maximum Length of Subarray With Positive Product", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 1578, "slug": "minimum-time-to-make-rope-colorful", "title": "Minimum Time to Make Rope Colorful", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 1580, "slug": "put-boxes-into-the-warehouse-ii", "title": "Put Boxes Into the Warehouse II", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "put-boxes-into-the-warehouse-i", "title": "Put Boxes Into the Warehouse I", "difficulty": "Medium"}]},
    {"number": 1585, "slug": "check-if-string-is-transformable-with-substring-sort-operations", "title": "Check If String Is Transformable With Substring Sort Operations", "difficulty": "Hard", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1589, "slug": "maximum-sum-obtained-of-any-permutation", "title": "Maximum Sum Obtained of Any Permutation", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 1605, "slug": "find-valid-matrix-given-row-and-column-sums", "title": "Find Valid Matrix Given Row and Column Sums", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "reconstruct-a-2-row-binary-matrix", "title": "Reconstruct a 2-Row Binary Matrix", "difficulty": "Medium"}]},
    {"number": 1606, "slug": "find-servers-that-handled-most-number-of-requests", "title": "Find Servers That Handled Most Number of Requests", "difficulty": "Hard", "tags": ["Array", "Greedy", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}]},
    {"number": 1642, "slug": "furthest-building-you-can-reach", "title": "Furthest Building You Can Reach", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "make-the-prefix-sum-non-negative", "title": "Make the Prefix Sum Non-negative", "difficulty": "Medium"}, {"slug": "find-building-where-alice-and-bob-can-meet", "title": "Find Building Where Alice and Bob Can Meet", "difficulty": "Hard"}]},
    {"number": 1647, "slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-deletions-to-make-array-beautiful", "title": "Minimum Deletions to Make Array Beautiful", "difficulty": "Medium"}, {"slug": "removing-minimum-and-maximum-from-array", "title": "Removing Minimum and Maximum From Array", "difficulty": "Medium"}, {"slug": "remove-letter-to-equalize-frequency", "title": "Remove Letter To Equalize Frequency", "difficulty": "Easy"}, {"slug": "minimum-deletions-to-make-string-k-special", "title": "Minimum Deletions to Make String K-Special", "difficulty": "Medium"}]},
    {"number": 1648, "slug": "sell-diminishing-valued-colored-balls", "title": "Sell Diminishing-Valued Colored Balls", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}]},
    {"number": 1663, "slug": "smallest-string-with-a-given-numeric-value", "title": "Smallest String With A Given Numeric Value", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1665, "slug": "minimum-initial-energy-to-finish-tasks", "title": "Minimum Initial Energy to Finish Tasks", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1671, "slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "longest-mountain-in-array", "title": "Longest Mountain in Array", "difficulty": "Medium"}, {"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "valid-mountain-array", "title": "Valid Mountain Array", "difficulty": "Easy"}, {"slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard"}, {"slug": "beautiful-towers-ii", "title": "Beautiful Towers II", "difficulty": "Medium"}, {"slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium"}]},
    {"number": 1673, "slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium"}]},
    {"number": 1675, "slug": "minimize-deviation-in-array", "title": "Minimize Deviation in Array", "difficulty": "Hard", "tags": ["Array", "Greedy", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": []},
    {"number": 1686, "slug": "stone-game-vi", "title": "Stone Game VI", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting", "Heap (Priority Queue)", "Game Theory"], "similar_problems": [{"slug": "stone-game", "title": "Stone Game", "difficulty": "Medium"}, {"slug": "stone-game-ii", "title": "Stone Game II", "difficulty": "Medium"}, {"slug": "stone-game-iii", "title": "Stone Game III", "difficulty": "Hard"}, {"slug": "stone-game-iv", "title": "Stone Game IV", "difficulty": "Hard"}, {"slug": "stone-game-v", "title": "Stone Game V", "difficulty": "Hard"}, {"slug": "stone-game-vii", "title": "Stone Game VII", "difficulty": "Medium"}, {"slug": "stone-game-viii", "title": "Stone Game VIII", "difficulty": "Hard"}, {"slug": "stone-game-ix", "title": "Stone Game IX", "difficulty": "Medium"}]},
    {"number": 1689, "slug": "partitioning-into-minimum-number-of-deci-binary-numbers", "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1702, "slug": "maximum-binary-string-after-change", "title": "Maximum Binary String After Change", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "longest-binary-subsequence-less-than-or-equal-to-k", "title": "Longest Binary Subsequence Less Than or Equal to K", "difficulty": "Medium"}]},
    {"number": 1703, "slug": "minimum-adjacent-swaps-for-k-consecutive-ones", "title": "Minimum Adjacent Swaps for K Consecutive Ones", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "minimum-swaps-to-group-all-1s-together", "title": "Minimum Swaps to Group All 1's Together", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-array-continuous", "title": "Minimum Number of Operations to Make Array Continuous", "difficulty": "Hard"}, {"slug": "minimum-adjacent-swaps-to-make-a-valid-array", "title": "Minimum Adjacent Swaps to Make a Valid Array", "difficulty": "Medium"}]},
    {"number": 1705, "slug": "maximum-number-of-eaten-apples", "title": "Maximum Number of Eaten Apples", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1708, "slug": "largest-subarray-length-k", "title": "Largest Subarray Length K", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1710, "slug": "maximum-units-on-a-truck", "title": "Maximum Units on a Truck", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-bags-with-full-capacity-of-rocks", "title": "Maximum Bags With Full Capacity of Rocks", "difficulty": "Medium"}]},
    {"number": 1713, "slug": "minimum-operations-to-make-a-subsequence", "title": "Minimum Operations to Make a Subsequence", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Greedy"], "similar_problems": [{"slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium"}]},
    {"number": 1717, "slug": "maximum-score-from-removing-substrings", "title": "Maximum Score From Removing Substrings", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "count-words-obtained-after-adding-a-letter", "title": "Count Words Obtained After Adding a Letter", "difficulty": "Medium"}]},
    {"number": 1727, "slug": "largest-submatrix-with-rearrangements", "title": "Largest Submatrix With Rearrangements", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Matrix"], "similar_problems": [{"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}]},
    {"number": 1733, "slug": "minimum-number-of-people-to-teach", "title": "Minimum Number of People to Teach", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": []},
    {"number": 1736, "slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy"}, {"slug": "latest-time-you-can-obtain-after-replacing-characters", "title": "Latest Time You Can Obtain After Replacing Characters", "difficulty": "Easy"}]},
    {"number": 1739, "slug": "building-boxes", "title": "Building Boxes", "difficulty": "Hard", "tags": ["Math", "Binary Search", "Greedy"], "similar_problems": [{"slug": "block-placement-queries", "title": "Block Placement Queries", "difficulty": "Hard"}]},
    {"number": 1753, "slug": "maximum-score-from-removing-stones", "title": "Maximum Score From Removing Stones", "difficulty": "Medium", "tags": ["Math", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy"}]},
    {"number": 1754, "slug": "largest-merge-of-two-strings", "title": "Largest Merge Of Two Strings", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}, {"slug": "decremental-string-concatenation", "title": "Decremental String Concatenation", "difficulty": "Medium"}]},
    {"number": 1764, "slug": "form-array-by-concatenating-subarrays-of-another-array", "title": "Form Array by Concatenating Subarrays of Another Array", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "String Matching"], "similar_problems": []},
    {"number": 1775, "slug": "equal-sum-arrays-with-minimum-number-of-operations", "title": "Equal Sum Arrays With Minimum Number of Operations", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": [{"slug": "number-of-dice-rolls-with-target-sum", "title": "Number of Dice Rolls With Target Sum", "difficulty": "Medium"}]},
    {"number": 1785, "slug": "minimum-elements-to-add-to-form-a-given-sum", "title": "Minimum Elements to Add to Form a Given Sum", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1788, "slug": "maximize-the-beauty-of-the-garden", "title": "Maximize the Beauty of the Garden", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Prefix Sum"], "similar_problems": []},
    {"number": 1792, "slug": "maximum-average-pass-ratio", "title": "Maximum Average Pass Ratio", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1794, "slug": "count-pairs-of-equal-substrings-with-minimum-difference", "title": "Count Pairs of Equal Substrings With Minimum Difference", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": []},
    {"number": 1798, "slug": "maximum-number-of-consecutive-values-you-can-make", "title": "Maximum Number of Consecutive Values You Can Make", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "patching-array", "title": "Patching Array", "difficulty": "Hard"}]},
    {"number": 1802, "slug": "maximum-value-at-a-given-index-in-a-bounded-array", "title": "Maximum Value at a Given Index in a Bounded Array", "difficulty": "Medium", "tags": ["Math", "Binary Search", "Greedy"], "similar_problems": []},
    {"number": 1824, "slug": "minimum-sideway-jumps", "title": "Minimum Sideway Jumps", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "frog-jump", "title": "Frog Jump", "difficulty": "Hard"}]},
    {"number": 1827, "slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimum-increment-to-make-array-unique", "title": "Minimum Increment to Make Array Unique", "difficulty": "Medium"}, {"slug": "make-array-non-decreasing-or-non-increasing", "title": "Make Array Non-decreasing or Non-increasing", "difficulty": "Hard"}, {"slug": "maximum-product-after-k-increments", "title": "Maximum Product After K Increments", "difficulty": "Medium"}, {"slug": "minimum-replacements-to-sort-the-array", "title": "Minimum Replacements to Sort the Array", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-columns-strictly-increasing", "title": "Minimum Operations to Make Columns Strictly Increasing", "difficulty": "Easy"}]},
    {"number": 1833, "slug": "maximum-ice-cream-bars", "title": "Maximum Ice Cream Bars", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 1838, "slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "find-all-lonely-numbers-in-the-array", "title": "Find All Lonely Numbers in the Array", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "apply-operations-to-maximize-frequency-score", "title": "Apply Operations to Maximize Frequency Score", "difficulty": "Hard"}, {"slug": "maximum-frequency-of-an-element-after-performing-operations-i", "title": "Maximum Frequency of an Element After Performing Operations I", "difficulty": "Medium"}, {"slug": "maximum-frequency-of-an-element-after-performing-operations-ii", "title": "Maximum Frequency of an Element After Performing Operations II", "difficulty": "Hard"}, {"slug": "maximum-difference-between-even-and-odd-frequency-ii", "title": "Maximum Difference Between Even and Odd Frequency II", "difficulty": "Hard"}]},
    {"number": 1846, "slug": "maximum-element-after-decreasing-and-rearranging", "title": "Maximum Element After Decreasing and Rearranging", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1850, "slug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number", "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}]},
    {"number": 1864, "slug": "minimum-number-of-swaps-to-make-the-binary-string-alternating", "title": "Minimum Number of Swaps to Make the Binary String Alternating", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1874, "slug": "minimize-product-sum-of-two-arrays", "title": "Minimize Product Sum of Two Arrays", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}]},
    {"number": 1877, "slug": "minimize-maximum-pair-sum-in-array", "title": "Minimize Maximum Pair Sum in Array", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1881, "slug": "maximum-value-after-insertion", "title": "Maximum Value after Insertion", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": []},
    {"number": 1899, "slug": "merge-triplets-to-form-target-triplet", "title": "Merge Triplets to Form Target Triplet", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1903, "slug": "largest-odd-number-in-string", "title": "Largest Odd Number in String", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "largest-3-same-digit-number-in-string", "title": "Largest 3-Same-Digit Number in String", "difficulty": "Easy"}]},
    {"number": 1921, "slug": "eliminate-maximum-number-of-monsters", "title": "Eliminate Maximum Number of Monsters", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-health-to-beat-game", "title": "Minimum Health to Beat Game", "difficulty": "Medium"}, {"slug": "minimum-time-to-kill-all-monsters", "title": "Minimum Time to Kill All Monsters", "difficulty": "Hard"}]},
    {"number": 1927, "slug": "sum-game", "title": "Sum Game", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Game Theory"], "similar_problems": []},
    {"number": 1936, "slug": "add-minimum-number-of-rungs", "title": "Add Minimum Number of Rungs", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "cutting-ribbons", "title": "Cutting Ribbons", "difficulty": "Medium"}]},
    {"number": 1946, "slug": "largest-number-after-mutating-substring", "title": "Largest Number After Mutating Substring", "difficulty": "Medium", "tags": ["Array", "String", "Greedy"], "similar_problems": []},
    {"number": 1953, "slug": "maximum-number-of-weeks-for-which-you-can-work", "title": "Maximum Number of Weeks for Which You Can Work", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}]},
    {"number": 1962, "slug": "remove-stones-to-minimize-the-total", "title": "Remove Stones to Minimize the Total", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-operations-to-halve-array-sum", "title": "Minimum Operations to Halve Array Sum", "difficulty": "Medium"}, {"slug": "maximal-score-after-applying-k-operations", "title": "Maximal Score After Applying K Operations", "difficulty": "Medium"}, {"slug": "take-gifts-from-the-richest-pile", "title": "Take Gifts From the Richest Pile", "difficulty": "Easy"}]},
    {"number": 1963, "slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "minimum-add-to-make-parentheses-valid", "title": "Minimum Add to Make Parentheses Valid", "difficulty": "Medium"}, {"slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium"}, {"slug": "minimum-insertions-to-balance-a-parentheses-string", "title": "Minimum Insertions to Balance a Parentheses String", "difficulty": "Medium"}]},
    {"number": 1968, "slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium"}, {"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "design-neighbor-sum-service", "title": "Design Neighbor Sum Service", "difficulty": "Easy"}]},
    {"number": 1969, "slug": "minimum-non-zero-product-of-the-array-elements", "title": "Minimum Non-Zero Product of the Array Elements", "difficulty": "Medium", "tags": ["Math", "Greedy", "Recursion"], "similar_problems": []},
    {"number": 1974, "slug": "minimum-time-to-type-word-using-special-typewriter", "title": "Minimum Time to Type Word Using Special Typewriter", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-distance-to-type-a-word-using-two-fingers", "title": "Minimum Distance to Type a Word Using Two Fingers", "difficulty": "Hard"}]},
    {"number": 1975, "slug": "maximum-matrix-sum", "title": "Maximum Matrix Sum", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 1989, "slug": "maximum-number-of-people-that-can-be-caught-in-tag", "title": "Maximum Number of People That Can Be Caught in Tag", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-food-buckets-to-feed-the-hamsters", "title": "Minimum Number of Food Buckets to Feed the Hamsters", "difficulty": "Medium"}]},
    {"number": 1996, "slug": "the-number-of-weak-characters-in-the-game", "title": "The Number of Weak Characters in the Game", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard"}, {"slug": "maximum-height-by-stacking-cuboids", "title": "Maximum Height by Stacking Cuboids ", "difficulty": "Hard"}]},
    {"number": 2007, "slug": "find-original-array-from-doubled-array", "title": "Find Original Array From Doubled Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting"], "similar_problems": [{"slug": "array-of-doubled-pairs", "title": "Array of Doubled Pairs", "difficulty": "Medium"}, {"slug": "recover-the-original-array", "title": "Recover the Original Array", "difficulty": "Hard"}]},
    {"number": 2014, "slug": "longest-subsequence-repeated-k-times", "title": "Longest Subsequence Repeated k Times", "difficulty": "Hard", "tags": ["String", "Backtracking", "Greedy", "Counting", "Enumeration"], "similar_problems": [{"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 2015, "slug": "average-height-of-buildings-in-each-segment", "title": "Average Height of Buildings in Each Segment", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "average-waiting-time", "title": "Average Waiting Time", "difficulty": "Medium"}, {"slug": "describe-the-painting", "title": "Describe the Painting", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}]},
    {"number": 2027, "slug": "minimum-moves-to-convert-string", "title": "Minimum Moves to Convert String", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "difficulty": "Medium"}, {"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}]},
    {"number": 2029, "slug": "stone-game-ix", "title": "Stone Game IX", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Counting", "Game Theory"], "similar_problems": [{"slug": "stone-game", "title": "Stone Game", "difficulty": "Medium"}, {"slug": "stone-game-ii", "title": "Stone Game II", "difficulty": "Medium"}, {"slug": "stone-game-iii", "title": "Stone Game III", "difficulty": "Hard"}, {"slug": "stone-game-iv", "title": "Stone Game IV", "difficulty": "Hard"}, {"slug": "stone-game-v", "title": "Stone Game V", "difficulty": "Hard"}, {"slug": "stone-game-vi", "title": "Stone Game VI", "difficulty": "Medium"}, {"slug": "stone-game-vii", "title": "Stone Game VII", "difficulty": "Medium"}, {"slug": "stone-game-viii", "title": "Stone Game VIII", "difficulty": "Hard"}, {"slug": "stone-game-ix", "title": "Stone Game IX", "difficulty": "Medium"}]},
    {"number": 2030, "slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium"}, {"slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard"}, {"slug": "find-the-lexicographically-smallest-valid-sequence", "title": "Find the Lexicographically Smallest Valid Sequence", "difficulty": "Medium"}]},
    {"number": 2037, "slug": "minimum-number-of-moves-to-seat-everyone", "title": "Minimum Number of Moves to Seat Everyone", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 2038, "slug": "remove-colored-pieces-if-both-neighbors-are-the-same-color", "title": "Remove Colored Pieces if Both Neighbors are the Same Color", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Game Theory"], "similar_problems": [{"slug": "longest-subarray-with-maximum-bitwise-and", "title": "Longest Subarray With Maximum Bitwise AND", "difficulty": "Medium"}]},
    {"number": 2064, "slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}, {"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "find-the-smallest-divisor-given-a-threshold", "title": "Find the Smallest Divisor Given a Threshold", "difficulty": "Medium"}, {"slug": "magnetic-force-between-two-balls", "title": "Magnetic Force Between Two Balls", "difficulty": "Medium"}, {"slug": "minimum-limit-of-balls-in-a-bag", "title": "Minimum Limit of Balls in a Bag", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}]},
    {"number": 2071, "slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Queue", "Sorting", "Monotonic Queue"], "similar_problems": [{"slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium"}, {"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}, {"slug": "maximize-the-minimum-powered-city", "title": "Maximize the Minimum Powered City", "difficulty": "Hard"}]},
    {"number": 2078, "slug": "two-furthest-houses-with-different-colors", "title": "Two Furthest Houses With Different Colors", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "replace-elements-with-greatest-element-on-right-side", "title": "Replace Elements with Greatest Element on Right Side", "difficulty": "Easy"}, {"slug": "maximum-distance-between-a-pair-of-values", "title": "Maximum Distance Between a Pair of Values", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}]},
    {"number": 2086, "slug": "minimum-number-of-food-buckets-to-feed-the-hamsters", "title": "Minimum Number of Food Buckets to Feed the Hamsters", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-people-that-can-be-caught-in-tag", "title": "Maximum Number of People That Can Be Caught in Tag", "difficulty": "Medium"}, {"slug": "brightest-position-on-street", "title": "Brightest Position on Street", "difficulty": "Medium"}]},
    {"number": 2087, "slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium"}, {"slug": "count-square-submatrices-with-all-ones", "title": "Count Square Submatrices with All Ones", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}, {"slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "difficulty": "Medium"}]},
    {"number": 2091, "slug": "removing-minimum-and-maximum-from-array", "title": "Removing Minimum and Maximum From Array", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "maximum-points-you-can-obtain-from-cards", "title": "Maximum Points You Can Obtain from Cards", "difficulty": "Medium"}, {"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}]},
    {"number": 2098, "slug": "subsequence-of-size-k-with-the-largest-even-sum", "title": "Subsequence of Size K With the Largest Even Sum", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}, {"slug": "partition-array-for-maximum-sum", "title": "Partition Array for Maximum Sum", "difficulty": "Medium"}, {"slug": "number-of-sub-arrays-with-odd-sum", "title": "Number of Sub-arrays With Odd Sum", "difficulty": "Medium"}]},
    {"number": 2116, "slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy"], "similar_problems": [{"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium"}, {"slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium"}, {"slug": "check-if-there-is-a-valid-parentheses-string-path", "title": " Check if There Is a Valid Parentheses String Path", "difficulty": "Hard"}]},
    {"number": 2126, "slug": "destroying-asteroids", "title": "Destroying Asteroids", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}]},
    {"number": 2131, "slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Greedy", "Counting"], "similar_problems": [{"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 2132, "slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard", "tags": ["Array", "Greedy", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium"}, {"slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium"}, {"slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium"}]},
    {"number": 2136, "slug": "earliest-possible-day-of-full-bloom", "title": "Earliest Possible Day of Full Bloom", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-number-of-days-to-make-m-bouquets", "title": "Minimum Number of Days to Make m Bouquets", "difficulty": "Medium"}]},
    {"number": 2139, "slug": "minimum-moves-to-reach-target-score", "title": "Minimum Moves to Reach Target Score", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "number-of-steps-to-reduce-a-number-to-zero", "title": "Number of Steps to Reduce a Number to Zero", "difficulty": "Easy"}, {"slug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one", "title": "Number of Steps to Reduce a Number in Binary Representation to One", "difficulty": "Medium"}]},
    {"number": 2141, "slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements", "title": "Minimum Moves to Equal Array Elements", "difficulty": "Medium"}, {"slug": "sell-diminishing-valued-colored-balls", "title": "Sell Diminishing-Valued Colored Balls", "difficulty": "Medium"}, {"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy"}]},
    {"number": 2144, "slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "array-partition", "title": "Array Partition", "difficulty": "Easy"}, {"slug": "minimum-absolute-difference", "title": "Minimum Absolute Difference", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 2160, "slug": "minimum-sum-of-four-digit-number-after-splitting-digits", "title": "Minimum Sum of Four Digit Number After Splitting Digits", "difficulty": "Easy", "tags": ["Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "difference-between-element-sum-and-digit-sum-of-an-array", "title": "Difference Between Element Sum and Digit Sum of an Array", "difficulty": "Easy"}, {"slug": "alternating-digit-sum", "title": "Alternating Digit Sum", "difficulty": "Easy"}]},
    {"number": 2170, "slug": "minimum-operations-to-make-the-array-alternating", "title": "Minimum Operations to Make the Array Alternating", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": [{"slug": "minimum-deletions-to-make-array-beautiful", "title": "Minimum Deletions to Make Array Beautiful", "difficulty": "Medium"}, {"slug": "minimum-number-of-flips-to-make-the-binary-string-alternating", "title": "Minimum Number of Flips to Make the Binary String Alternating", "difficulty": "Medium"}]},
    {"number": 2171, "slug": "removing-minimum-number-of-magic-beans", "title": "Removing Minimum Number of Magic Beans", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Enumeration", "Prefix Sum"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "minimum-operations-to-reduce-x-to-zero", "title": "Minimum Operations to Reduce X to Zero", "difficulty": "Medium"}]},
    {"number": 2178, "slug": "maximum-split-of-positive-even-integers", "title": "Maximum Split of Positive Even Integers", "difficulty": "Medium", "tags": ["Math", "Backtracking", "Greedy"], "similar_problems": []},
    {"number": 2182, "slug": "construct-string-with-repeat-limit", "title": "Construct String With Repeat Limit", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}]},
    {"number": 2193, "slug": "minimum-number-of-moves-to-make-palindrome", "title": "Minimum Number of Moves to Make Palindrome", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Greedy", "Binary Indexed Tree"], "similar_problems": [{"slug": "minimum-insertion-steps-to-make-a-string-palindrome", "title": "Minimum Insertion Steps to Make a String Palindrome", "difficulty": "Hard"}, {"slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i", "title": "Minimum Number of Flips to Make Binary Grid Palindromic I", "difficulty": "Medium"}]},
    {"number": 2195, "slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "kth-missing-positive-number", "title": "Kth Missing Positive Number", "difficulty": "Easy"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}]},
    {"number": 2202, "slug": "maximize-the-topmost-element-after-k-moves", "title": "Maximize the Topmost Element After K Moves", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "gas-station", "title": "Gas Station", "difficulty": "Medium"}]},
    {"number": 2207, "slug": "maximize-number-of-subsequences-in-a-string", "title": "Maximize Number of Subsequences in a String", "difficulty": "Medium", "tags": ["String", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}]},
    {"number": 2208, "slug": "minimum-operations-to-halve-array-sum", "title": "Minimum Operations to Halve Array Sum", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "remove-stones-to-minimize-the-total", "title": "Remove Stones to Minimize the Total", "difficulty": "Medium"}, {"slug": "minimum-operations-to-exceed-threshold-value-ii", "title": "Minimum Operations to Exceed Threshold Value II", "difficulty": "Medium"}]},
    {"number": 2214, "slug": "minimum-health-to-beat-game", "title": "Minimum Health to Beat Game", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "eliminate-maximum-number-of-monsters", "title": "Eliminate Maximum Number of Monsters", "difficulty": "Medium"}]},
    {"number": 2216, "slug": "minimum-deletions-to-make-array-beautiful", "title": "Minimum Deletions to Make Array Beautiful", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy"], "similar_problems": [{"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-the-array-alternating", "title": "Minimum Operations to Make the Array Alternating", "difficulty": "Medium"}]},
    {"number": 2224, "slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "coin-change", "title": "Coin Change", "difficulty": "Medium"}, {"slug": "design-an-atm-machine", "title": "Design an ATM Machine", "difficulty": "Medium"}, {"slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy"}]},
    {"number": 2233, "slug": "maximum-product-after-k-increments", "title": "Maximum Product After K Increments", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "minimum-increment-to-make-array-unique", "title": "Minimum Increment to Make Array Unique", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 2234, "slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting", "Enumeration", "Prefix Sum"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}]},
    {"number": 2241, "slug": "design-an-atm-machine", "title": "Design an ATM Machine", "difficulty": "Medium", "tags": ["Array", "Greedy", "Design"], "similar_problems": [{"slug": "simple-bank-system", "title": "Simple Bank System", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}]},
    {"number": 2244, "slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "odd-string-difference", "title": "Odd String Difference", "difficulty": "Easy"}, {"slug": "minimum-levels-to-gain-more-points", "title": "Minimum Levels to Gain More Points", "difficulty": "Medium"}]},
    {"number": 2259, "slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy", "tags": ["String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "second-largest-digit-in-a-string", "title": "Second Largest Digit in a String", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 2263, "slug": "make-array-non-decreasing-or-non-increasing", "title": "Make Array Non-decreasing or Non-increasing", "difficulty": "Hard", "tags": ["Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "non-decreasing-array", "title": "Non-decreasing Array", "difficulty": "Medium"}, {"slug": "make-array-strictly-increasing", "title": "Make Array Strictly Increasing", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 2268, "slug": "minimum-number-of-keypresses", "title": "Minimum Number of Keypresses", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": []},
    {"number": 2271, "slug": "maximum-white-tiles-covered-by-a-carpet", "title": "Maximum White Tiles Covered by a Carpet", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium"}]},
    {"number": 2279, "slug": "maximum-bags-with-full-capacity-of-rocks", "title": "Maximum Bags With Full Capacity of Rocks", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "maximum-units-on-a-truck", "title": "Maximum Units on a Truck", "difficulty": "Easy"}]},
    {"number": 2285, "slug": "maximum-total-importance-of-roads", "title": "Maximum Total Importance of Roads", "difficulty": "Medium", "tags": ["Greedy", "Graph", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 2294, "slug": "partition-array-such-that-maximum-difference-is-k", "title": "Partition Array Such That Maximum Difference Is K", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", "difficulty": "Medium"}, {"slug": "maximum-beauty-of-an-array-after-applying-operation", "title": "Maximum Beauty of an Array After Applying Operation", "difficulty": "Medium"}]},
    {"number": 2310, "slug": "sum-of-numbers-with-units-digit-k", "title": "Sum of Numbers With Units Digit K", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Greedy", "Enumeration"], "similar_problems": [{"slug": "digit-count-in-range", "title": "Digit Count in Range", "difficulty": "Hard"}, {"slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy"}, {"slug": "sum-of-number-and-its-reverse", "title": "Sum of Number and Its Reverse", "difficulty": "Medium"}]},
    {"number": 2311, "slug": "longest-binary-subsequence-less-than-or-equal-to-k", "title": "Longest Binary Subsequence Less Than or Equal to K", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy", "Memoization"], "similar_problems": [{"slug": "maximum-binary-string-after-change", "title": "Maximum Binary String After Change", "difficulty": "Medium"}]},
    {"number": 2323, "slug": "find-minimum-time-to-finish-all-jobs-ii", "title": "Find Minimum Time to Finish All Jobs II", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium"}, {"slug": "find-minimum-time-to-finish-all-jobs", "title": "Find Minimum Time to Finish All Jobs", "difficulty": "Hard"}, {"slug": "minimum-number-of-work-sessions-to-finish-the-tasks", "title": "Minimum Number of Work Sessions to Finish the Tasks", "difficulty": "Medium"}]},
    {"number": 2333, "slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium"}, {"slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard"}]},
    {"number": 2335, "slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "construct-target-array-with-multiple-sums", "title": "Construct Target Array With Multiple Sums", "difficulty": "Hard"}, {"slug": "maximum-score-from-removing-stones", "title": "Maximum Score From Removing Stones", "difficulty": "Medium"}, {"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}]},
    {"number": 2340, "slug": "minimum-adjacent-swaps-to-make-a-valid-array", "title": "Minimum Adjacent Swaps to Make a Valid Array", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimum-adjacent-swaps-for-k-consecutive-ones", "title": "Minimum Adjacent Swaps for K Consecutive Ones", "difficulty": "Hard"}]},
    {"number": 2350, "slug": "shortest-impossible-sequence-of-rolls", "title": "Shortest Impossible Sequence of Rolls", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": []},
    {"number": 2357, "slug": "make-array-zero-by-subtracting-equal-amounts", "title": "Make Array Zero by Subtracting Equal Amounts", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Simulation"], "similar_problems": [{"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}]},
    {"number": 2358, "slug": "maximum-number-of-groups-entering-a-competition", "title": "Maximum Number of Groups Entering a Competition", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy"], "similar_problems": [{"slug": "maximum-height-by-stacking-cuboids", "title": "Maximum Height by Stacking Cuboids ", "difficulty": "Hard"}]},
    {"number": 2366, "slug": "minimum-replacements-to-sort-the-array", "title": "Minimum Replacements to Sort the Array", "difficulty": "Hard", "tags": ["Array", "Math", "Greedy"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 2375, "slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium", "tags": ["String", "Backtracking", "Stack", "Greedy"], "similar_problems": [{"slug": "di-string-match", "title": "DI String Match", "difficulty": "Easy"}]},
    {"number": 2383, "slug": "minimum-hours-of-training-to-win-a-competition", "title": "Minimum Hours of Training to Win a Competition", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 2384, "slug": "largest-palindromic-number", "title": "Largest Palindromic Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Counting"], "similar_problems": [{"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 2389, "slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}]},
    {"number": 2405, "slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "partition-array-into-disjoint-intervals", "title": "Partition Array into Disjoint Intervals", "difficulty": "Medium"}, {"slug": "maximum-sum-of-distinct-subarrays-with-length-k", "title": "Maximum Sum of Distinct Subarrays With Length K", "difficulty": "Medium"}]},
    {"number": 2406, "slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "minimum-number-of-frogs-croaking", "title": "Minimum Number of Frogs Croaking", "difficulty": "Medium"}, {"slug": "average-height-of-buildings-in-each-segment", "title": "Average Height of Buildings in Each Segment", "difficulty": "Medium"}]},
    {"number": 2410, "slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": [{"slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium"}, {"slug": "long-pressed-name", "title": "Long Pressed Name", "difficulty": "Easy"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "largest-merge-of-two-strings", "title": "Largest Merge Of Two Strings", "difficulty": "Medium"}, {"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}, {"slug": "the-latest-time-to-catch-a-bus", "title": "The Latest Time to Catch a Bus", "difficulty": "Medium"}, {"slug": "maximize-greatness-of-an-array", "title": "Maximize Greatness of an Array", "difficulty": "Medium"}]},
    {"number": 2412, "slug": "minimum-money-required-before-transactions", "title": "Minimum Money Required Before Transactions", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2422, "slug": "merge-operations-to-turn-array-into-a-palindrome", "title": "Merge Operations to Turn Array Into a Palindrome", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy"], "similar_problems": []},
    {"number": 2429, "slug": "minimize-xor", "title": "Minimize XOR", "difficulty": "Medium", "tags": ["Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "maximum-xor-of-two-numbers-in-an-array", "title": "Maximum XOR of Two Numbers in an Array", "difficulty": "Medium"}, {"slug": "maximum-xor-with-an-element-from-array", "title": "Maximum XOR With an Element From Array", "difficulty": "Hard"}]},
    {"number": 2434, "slug": "using-a-robot-to-print-the-lexicographically-smallest-string", "title": "Using a Robot to Print the Lexicographically Smallest String", "difficulty": "Medium", "tags": ["Hash Table", "String", "Stack", "Greedy"], "similar_problems": [{"slug": "find-permutation", "title": "Find Permutation", "difficulty": "Medium"}]},
    {"number": 2436, "slug": "minimum-split-into-subarrays-with-gcd-greater-than-one", "title": "Minimum Split Into Subarrays With GCD Greater Than One", "difficulty": "Medium", "tags": ["Array", "Math", "Dynamic Programming", "Greedy", "Number Theory"], "similar_problems": [{"slug": "minimum-subarrays-in-a-valid-split", "title": "Minimum Subarrays in a Valid Split", "difficulty": "Medium"}]},
    {"number": 2439, "slug": "minimize-maximum-of-array", "title": "Minimize Maximum of Array", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}]},
    {"number": 2448, "slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-substrings", "title": "Maximum Product of the Length of Two Palindromic Substrings", "difficulty": "Hard"}, {"slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-all-array-elements-equal", "title": "Minimum Operations to Make All Array Elements Equal", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equalindromic", "title": "Minimum Cost to Make Array Equalindromic", "difficulty": "Medium"}]},
    {"number": 2449, "slug": "minimum-number-of-operations-to-make-arrays-similar", "title": "Minimum Number of Operations to Make Arrays Similar", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-operations-to-make-array-equal", "title": "Minimum Operations to Make Array Equal", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-array-equal-ii", "title": "Minimum Operations to Make Array Equal II", "difficulty": "Medium"}, {"slug": "rearranging-fruits", "title": "Rearranging Fruits", "difficulty": "Hard"}]},
    {"number": 2457, "slug": "minimum-addition-to-make-integer-beautiful", "title": "Minimum Addition to Make Integer Beautiful", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}]},
    {"number": 2459, "slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "strange-printer-ii", "title": "Strange Printer II", "difficulty": "Hard"}, {"slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard"}]},
    {"number": 2472, "slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "palindrome-partitioning", "title": "Palindrome Partitioning", "difficulty": "Medium"}, {"slug": "palindrome-partitioning-ii", "title": "Palindrome Partitioning II", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iii", "title": "Palindrome Partitioning III", "difficulty": "Hard"}, {"slug": "maximum-number-of-non-overlapping-substrings", "title": "Maximum Number of Non-Overlapping Substrings", "difficulty": "Hard"}, {"slug": "palindrome-partitioning-iv", "title": "Palindrome Partitioning IV", "difficulty": "Hard"}]},
    {"number": 2486, "slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-subsequence", "title": "Minimum Operations to Make a Subsequence", "difficulty": "Hard"}]},
    {"number": 2497, "slug": "maximum-star-sum-of-a-graph", "title": "Maximum Star Sum of a Graph", "difficulty": "Medium", "tags": ["Array", "Greedy", "Graph", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "number-of-ways-to-reconstruct-a-tree", "title": "Number Of Ways To Reconstruct A Tree", "difficulty": "Hard"}, {"slug": "find-center-of-star-graph", "title": "Find Center of Star Graph", "difficulty": "Easy"}]},
    {"number": 2498, "slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}]},
    {"number": 2499, "slug": "minimum-total-cost-to-make-arrays-unequal", "title": "Minimum Total Cost to Make Arrays Unequal", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": []},
    {"number": 2517, "slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}]},
    {"number": 2522, "slug": "partition-string-into-substrings-with-values-at-most-k", "title": "Partition String Into Substrings With Values at Most K", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2528, "slug": "maximize-the-minimum-powered-city", "title": "Maximize the Minimum Powered City", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Queue", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}]},
    {"number": 2530, "slug": "maximal-score-after-applying-k-operations", "title": "Maximal Score After Applying K Operations", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "remove-stones-to-minimize-the-total", "title": "Remove Stones to Minimize the Total", "difficulty": "Medium"}]},
    {"number": 2541, "slug": "minimum-operations-to-make-array-equal-ii", "title": "Minimum Operations to Make Array Equal II", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy"], "similar_problems": [{"slug": "minimum-operations-to-make-array-equal", "title": "Minimum Operations to Make Array Equal", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-arrays-similar", "title": "Minimum Number of Operations to Make Arrays Similar", "difficulty": "Hard"}]},
    {"number": 2542, "slug": "maximum-subsequence-score", "title": "Maximum Subsequence Score", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "ipo", "title": "IPO", "difficulty": "Hard"}, {"slug": "minimum-cost-to-hire-k-workers", "title": "Minimum Cost to Hire K Workers", "difficulty": "Hard"}]},
    {"number": 2548, "slug": "maximum-price-to-fill-a-bag", "title": "Maximum Price to Fill a Bag", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2551, "slug": "put-marbles-in-bags", "title": "Put Marbles in Bags", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 2554, "slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "replace-elements-in-an-array", "title": "Replace Elements in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}]},
    {"number": 2557, "slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "replace-elements-in-an-array", "title": "Replace Elements in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium"}, {"slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard"}]},
    {"number": 2560, "slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}]},
    {"number": 2561, "slug": "rearranging-fruits", "title": "Rearranging Fruits", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Sort"], "similar_problems": [{"slug": "the-latest-time-to-catch-a-bus", "title": "The Latest Time to Catch a Bus", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-arrays-similar", "title": "Minimum Number of Operations to Make Arrays Similar", "difficulty": "Hard"}]},
    {"number": 2566, "slug": "maximum-difference-by-remapping-a-digit", "title": "Maximum Difference by Remapping a Digit", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 2567, "slug": "minimum-score-by-changing-two-elements", "title": "Minimum Score by Changing Two Elements", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2571, "slug": "minimum-operations-to-reduce-an-integer-to-0", "title": "Minimum Operations to Reduce an Integer to 0", "difficulty": "Medium", "tags": ["Dynamic Programming", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}]},
    {"number": 2573, "slug": "find-the-string-with-lcp", "title": "Find the String with LCP", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Greedy", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 2576, "slug": "find-the-maximum-number-of-marked-indices", "title": "Find the Maximum Number of Marked Indices", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-array-length-after-pair-removals", "title": "Minimum Array Length After Pair Removals", "difficulty": "Medium"}]},
    {"number": 2578, "slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy", "tags": ["Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "minimum-cost-to-move-chips-to-the-same-position", "title": "Minimum Cost to Move Chips to The Same Position", "difficulty": "Easy"}, {"slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard"}, {"slug": "minimum-sum-of-values-by-dividing-array", "title": "Minimum Sum of Values by Dividing Array", "difficulty": "Hard"}]},
    {"number": 2587, "slug": "rearrange-array-to-maximize-prefix-score", "title": "Rearrange Array to Maximize Prefix Score", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "two-city-scheduling", "title": "Two City Scheduling", "difficulty": "Medium"}]},
    {"number": 2589, "slug": "minimum-time-to-complete-all-tasks", "title": "Minimum Time to Complete All Tasks", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Greedy", "Sorting"], "similar_problems": [{"slug": "single-threaded-cpu", "title": "Single-Threaded CPU", "difficulty": "Medium"}]},
    {"number": 2591, "slug": "distribute-money-to-maximum-children", "title": "Distribute Money to Maximum Children", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "distribute-candies-to-people", "title": "Distribute Candies to People", "difficulty": "Easy"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "calculate-money-in-leetcode-bank", "title": "Calculate Money in Leetcode Bank", "difficulty": "Easy"}]},
    {"number": 2592, "slug": "maximize-greatness-of-an-array", "title": "Maximize Greatness of an Array", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": [{"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 2598, "slug": "smallest-missing-non-negative-integer-after-operations", "title": "Smallest Missing Non-negative Integer After Operations", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Greedy"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}]},
    {"number": 2599, "slug": "make-the-prefix-sum-non-negative", "title": "Make the Prefix Sum Non-negative", "difficulty": "Medium", "tags": ["Array", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "furthest-building-you-can-reach", "title": "Furthest Building You Can Reach", "difficulty": "Medium"}, {"slug": "maximum-transactions-without-negative-balance", "title": "Maximum Transactions Without Negative Balance", "difficulty": "Medium"}]},
    {"number": 2600, "slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 2601, "slug": "prime-subtraction-operation", "title": "Prime Subtraction Operation", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Number Theory"], "similar_problems": []},
    {"number": 2607, "slug": "make-k-subarray-sums-equal", "title": "Make K-Subarray Sums Equal", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting", "Number Theory"], "similar_problems": [{"slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium"}]},
    {"number": 2611, "slug": "mice-and-cheese", "title": "Mice and Cheese", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}]},
    {"number": 2616, "slug": "minimize-the-maximum-difference-of-pairs", "title": "Minimize the Maximum Difference of Pairs", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-absolute-difference", "title": "Minimum Absolute Difference", "difficulty": "Easy"}, {"slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves", "title": "Minimum Difference Between Largest and Smallest Value in Three Moves", "difficulty": "Medium"}]},
    {"number": 2645, "slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Stack", "Greedy"], "similar_problems": [{"slug": "merge-strings-alternately", "title": "Merge Strings Alternately", "difficulty": "Easy"}]},
    {"number": 2656, "slug": "maximum-sum-with-exactly-k-elements", "title": "Maximum Sum With Exactly K Elements ", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 2659, "slug": "make-array-empty", "title": "Make Array Empty", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Binary Indexed Tree", "Segment Tree", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 2663, "slug": "lexicographically-smallest-beautiful-string", "title": "Lexicographically Smallest Beautiful String", "difficulty": "Hard", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "smallest-string-with-swaps", "title": "Smallest String With Swaps", "difficulty": "Medium"}, {"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}]},
    {"number": 2673, "slug": "make-costs-of-paths-equal-in-a-binary-tree", "title": "Make Costs of Paths Equal in a Binary Tree", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Tree", "Binary Tree"], "similar_problems": []},
    {"number": 2680, "slug": "maximum-or", "title": "Maximum OR", "difficulty": "Medium", "tags": ["Array", "Greedy", "Bit Manipulation", "Prefix Sum"], "similar_problems": []},
    {"number": 2697, "slug": "lexicographically-smallest-palindrome", "title": "Lexicographically Smallest Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": []},
    {"number": 2706, "slug": "buy-two-chocolates", "title": "Buy Two Chocolates", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2708, "slug": "maximum-strength-of-a-group", "title": "Maximum Strength of a Group", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Backtracking", "Greedy", "Bit Manipulation", "Sorting", "Enumeration"], "similar_problems": [{"slug": "maximum-strength-of-k-disjoint-subarrays", "title": "Maximum Strength of K Disjoint Subarrays", "difficulty": "Hard"}]},
    {"number": 2712, "slug": "minimum-cost-to-make-all-characters-equal", "title": "Minimum Cost to Make All Characters Equal", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "flip-string-to-monotone-increasing", "title": "Flip String to Monotone Increasing", "difficulty": "Medium"}]},
    {"number": 2734, "slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium"}, {"slug": "lexicographically-smallest-string-after-operations-with-constraint", "title": "Lexicographically Smallest String After Operations With Constraint", "difficulty": "Medium"}, {"slug": "replace-question-marks-in-string-to-minimize-its-value", "title": "Replace Question Marks in String to Minimize Its Value", "difficulty": "Medium"}]},
    {"number": 2745, "slug": "construct-the-longest-new-string", "title": "Construct the Longest New String", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Greedy", "Brainteaser"], "similar_problems": []},
    {"number": 2789, "slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "get-maximum-in-generated-array", "title": "Get Maximum in Generated Array", "difficulty": "Easy"}]},
    {"number": 2790, "slug": "maximum-number-of-groups-with-increasing-length", "title": "Maximum Number of Groups With Increasing Length", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "group-the-people-given-the-group-size-they-belong-to", "title": "Group the People Given the Group Size They Belong To", "difficulty": "Medium"}]},
    {"number": 2800, "slug": "shortest-string-that-contains-three-strings", "title": "Shortest String That Contains Three Strings", "difficulty": "Medium", "tags": ["String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "shortest-common-supersequence", "title": "Shortest Common Supersequence ", "difficulty": "Hard"}]},
    {"number": 2811, "slug": "check-if-it-is-possible-to-split-array", "title": "Check if it is Possible to Split Array", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2813, "slug": "maximum-elegance-of-a-k-length-subsequence", "title": "Maximum Elegance of a K-Length Subsequence", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Stack", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "ipo", "title": "IPO", "difficulty": "Hard"}]},
    {"number": 2818, "slug": "apply-operations-to-maximize-score", "title": "Apply Operations to Maximize Score", "difficulty": "Hard", "tags": ["Array", "Math", "Stack", "Greedy", "Sorting", "Monotonic Stack", "Number Theory"], "similar_problems": [{"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}]},
    {"number": 2829, "slug": "determine-the-minimum-sum-of-a-k-avoiding-array", "title": "Determine the Minimum Sum of a k-avoiding Array", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 2834, "slug": "find-the-minimum-possible-sum-of-a-beautiful-array", "title": "Find the Minimum Possible Sum of a Beautiful Array", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 2835, "slug": "minimum-operations-to-form-subsequence-with-target-sum", "title": "Minimum Operations to Form Subsequence With Target Sum", "difficulty": "Hard", "tags": ["Array", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "number-of-subsequences-that-satisfy-the-given-sum-condition", "title": "Number of Subsequences That Satisfy the Given Sum Condition", "difficulty": "Medium"}, {"slug": "closest-subsequence-sum", "title": "Closest Subsequence Sum", "difficulty": "Hard"}]},
    {"number": 2842, "slug": "count-k-subsequences-of-a-string-with-maximum-beauty", "title": "Count K-Subsequences of a String With Maximum Beauty", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Greedy", "Combinatorics"], "similar_problems": [{"slug": "distinct-subsequences-ii", "title": "Distinct Subsequences II", "difficulty": "Hard"}]},
    {"number": 2844, "slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium", "tags": ["Math", "String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 2847, "slug": "smallest-number-with-given-digit-product", "title": "Smallest Number With Given Digit Product", "difficulty": "Medium", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "smallest-divisible-digit-product-i", "title": "Smallest Divisible Digit Product I", "difficulty": "Easy"}, {"slug": "smallest-divisible-digit-product-ii", "title": "Smallest Divisible Digit Product II", "difficulty": "Hard"}]},
    {"number": 2856, "slug": "minimum-array-length-after-pair-removals", "title": "Minimum Array Length After Pair Removals", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Greedy", "Counting"], "similar_problems": [{"slug": "find-the-maximum-number-of-marked-indices", "title": "Find the Maximum Number of Marked Indices", "difficulty": "Medium"}]},
    {"number": 2864, "slug": "maximum-odd-binary-number", "title": "Maximum Odd Binary Number", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": []},
    {"number": 2868, "slug": "the-wording-game", "title": "The Wording Game", "difficulty": "Hard", "tags": ["Array", "Math", "Two Pointers", "String", "Greedy", "Game Theory"], "similar_problems": []},
    {"number": 2870, "slug": "minimum-number-of-operations-to-make-array-empty", "title": "Minimum Number of Operations to Make Array Empty", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": []},
    {"number": 2871, "slug": "split-array-into-maximum-number-of-subarrays", "title": "Split Array Into Maximum Number of Subarrays", "difficulty": "Medium", "tags": ["Array", "Greedy", "Bit Manipulation"], "similar_problems": []},
    {"number": 2892, "slug": "minimizing-array-after-replacing-pairs-with-their-product", "title": "Minimizing Array After Replacing Pairs With Their Product", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2895, "slug": "minimum-processing-time", "title": "Minimum Processing Time", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2897, "slug": "apply-operations-on-array-to-maximize-sum-of-squares", "title": "Apply Operations on Array to Maximize Sum of Squares", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "minimize-or-of-remaining-elements-using-operations", "title": "Minimize OR of Remaining Elements Using Operations", "difficulty": "Hard"}]},
    {"number": 2900, "slug": "longest-unequal-adjacent-groups-subsequence-i", "title": "Longest Unequal Adjacent Groups Subsequence I", "difficulty": "Easy", "tags": ["Array", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2910, "slug": "minimum-number-of-groups-to-create-a-valid-assignment", "title": "Minimum Number of Groups to Create a Valid Assignment", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": []},
    {"number": 2918, "slug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros", "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 2931, "slug": "maximum-spending-after-buying-items", "title": "Maximum Spending After Buying Items", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "maximum-points-you-can-obtain-from-cards", "title": "Maximum Points You Can Obtain from Cards", "difficulty": "Medium"}, {"slug": "maximum-score-from-performing-multiplication-operations", "title": "Maximum Score from Performing Multiplication Operations", "difficulty": "Hard"}]},
    {"number": 2938, "slug": "separate-black-and-white-balls", "title": "Separate Black and White Balls", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": []},
    {"number": 2939, "slug": "maximum-xor-product", "title": "Maximum Xor Product", "difficulty": "Medium", "tags": ["Math", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "maximum-xor-after-operations", "title": "Maximum XOR After Operations ", "difficulty": "Medium"}]},
    {"number": 2952, "slug": "minimum-number-of-coins-to-be-added", "title": "Minimum Number of Coins to be Added", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "coin-change", "title": "Coin Change", "difficulty": "Medium"}, {"slug": "most-expensive-item-that-can-not-be-bought", "title": "Most Expensive Item That Can Not Be Bought", "difficulty": "Medium"}]},
    {"number": 2957, "slug": "remove-adjacent-almost-equal-characters", "title": "Remove Adjacent Almost-Equal Characters", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "minimum-changes-to-make-alternating-binary-string", "title": "Minimum Changes To Make Alternating Binary String", "difficulty": "Easy"}]},
    {"number": 2966, "slug": "divide-array-into-arrays-with-max-difference", "title": "Divide Array Into Arrays With Max Difference", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2967, "slug": "minimum-cost-to-make-array-equalindromic", "title": "Minimum Cost to Make Array Equalindromic", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}]},
    {"number": 2971, "slug": "find-polygon-with-the-largest-perimeter", "title": "Find Polygon With the Largest Perimeter", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "valid-triangle-number", "title": "Valid Triangle Number", "difficulty": "Medium"}]},
    {"number": 3002, "slug": "maximum-size-of-a-set-after-removals", "title": "Maximum Size of a Set After Removals", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}]},
    {"number": 3012, "slug": "minimize-length-of-array-using-operations", "title": "Minimize Length of Array Using Operations", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Number Theory"], "similar_problems": []},
    {"number": 3014, "slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}]},
    {"number": 3016, "slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}]},
    {"number": 3022, "slug": "minimize-or-of-remaining-elements-using-operations", "title": "Minimize OR of Remaining Elements Using Operations", "difficulty": "Hard", "tags": ["Array", "Greedy", "Bit Manipulation"], "similar_problems": [{"slug": "maximum-xor-after-operations", "title": "Maximum XOR After Operations ", "difficulty": "Medium"}, {"slug": "apply-operations-on-array-to-maximize-sum-of-squares", "title": "Apply Operations on Array to Maximize Sum of Squares", "difficulty": "Hard"}]},
    {"number": 3035, "slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}]},
    {"number": 3049, "slug": "earliest-second-to-mark-indices-ii", "title": "Earliest Second to Mark Indices II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3068, "slug": "find-the-maximum-sum-of-node-values", "title": "Find the Maximum Sum of Node Values", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Greedy", "Bit Manipulation", "Tree", "Sorting"], "similar_problems": [{"slug": "maximum-score-after-applying-operations-on-a-tree", "title": "Maximum Score After Applying Operations on a Tree", "difficulty": "Medium"}, {"slug": "find-number-of-coins-to-place-in-tree-nodes", "title": "Find Number of Coins to Place in Tree Nodes", "difficulty": "Hard"}]},
    {"number": 3074, "slug": "apple-redistribution-into-boxes", "title": "Apple Redistribution into Boxes", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3075, "slug": "maximize-happiness-of-selected-children", "title": "Maximize Happiness of Selected Children", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}]},
    {"number": 3081, "slug": "replace-question-marks-in-string-to-minimize-its-value", "title": "Replace Question Marks in String to Minimize Its Value", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}]},
    {"number": 3085, "slug": "minimum-deletions-to-make-string-k-special", "title": "Minimum Deletions to Make String K-Special", "difficulty": "Medium", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": [{"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}]},
    {"number": 3086, "slug": "minimum-moves-to-pick-k-ones", "title": "Minimum Moves to Pick K Ones", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "minimum-swaps-to-group-all-1s-together", "title": "Minimum Swaps to Group All 1's Together", "difficulty": "Medium"}]},
    {"number": 3088, "slug": "make-string-anti-palindrome", "title": "Make String Anti-palindrome", "difficulty": "Hard", "tags": ["String", "Greedy", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 3091, "slug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k", "title": "Apply Operations to Make Sum of Array Greater Than or Equal to k", "difficulty": "Medium", "tags": ["Math", "Greedy", "Enumeration"], "similar_problems": []},
    {"number": 3106, "slug": "lexicographically-smallest-string-after-operations-with-constraint", "title": "Lexicographically Smallest String After Operations With Constraint", "difficulty": "Medium", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-substring-operation", "title": "Lexicographically Smallest String After Substring Operation", "difficulty": "Medium"}]},
    {"number": 3107, "slug": "minimum-operations-to-make-median-of-array-equal-to-k", "title": "Minimum Operations to Make Median of Array Equal to K", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-median-from-data-stream", "title": "Find Median from Data Stream", "difficulty": "Hard"}, {"slug": "sliding-window-median", "title": "Sliding Window Median", "difficulty": "Hard"}]},
    {"number": 3111, "slug": "minimum-rectangles-to-cover-points", "title": "Minimum Rectangles to Cover Points", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-area-rectangle", "title": "Minimum Area Rectangle", "difficulty": "Medium"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}]},
    {"number": 3119, "slug": "maximum-number-of-potholes-that-can-be-fixed", "title": "Maximum Number of Potholes That Can Be Fixed", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3125, "slug": "maximum-number-that-makes-result-of-bitwise-and-zero", "title": "Maximum Number That Makes Result of Bitwise AND Zero", "difficulty": "Medium", "tags": ["String", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3139, "slug": "minimum-cost-to-equalize-array", "title": "Minimum Cost to Equalize Array", "difficulty": "Hard", "tags": ["Array", "Greedy", "Enumeration"], "similar_problems": []},
    {"number": 3170, "slug": "lexicographically-minimum-string-after-removing-stars", "title": "Lexicographically Minimum String After Removing Stars", "difficulty": "Medium", "tags": ["Hash Table", "String", "Stack", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3189, "slug": "minimum-moves-to-get-a-peaceful-board", "title": "Minimum Moves to Get a Peaceful Board", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": [{"slug": "transform-to-chessboard", "title": "Transform to Chessboard", "difficulty": "Hard"}, {"slug": "most-stones-removed-with-same-row-or-column", "title": "Most Stones Removed with Same Row or Column", "difficulty": "Medium"}]},
    {"number": 3192, "slug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii", "title": "Minimum Operations to Make Binary Array Elements Equal to One II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "minimum-suffix-flips", "title": "Minimum Suffix Flips", "difficulty": "Medium"}]},
    {"number": 3205, "slug": "maximum-array-hopping-score-i", "title": "Maximum Array Hopping Score I", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3207, "slug": "maximum-points-after-enemy-battles", "title": "Maximum Points After Enemy Battles", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 3216, "slug": "lexicographically-smallest-string-after-a-swap", "title": "Lexicographically Smallest String After a Swap", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium"}]},
    {"number": 3218, "slug": "minimum-cost-for-cutting-cake-i", "title": "Minimum Cost for Cutting Cake I", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-cost-for-cutting-cake-ii", "title": "Minimum Cost for Cutting Cake II", "difficulty": "Hard"}]},
    {"number": 3219, "slug": "minimum-cost-for-cutting-cake-ii", "title": "Minimum Cost for Cutting Cake II", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-cost-for-cutting-cake-i", "title": "Minimum Cost for Cutting Cake I", "difficulty": "Medium"}]},
    {"number": 3221, "slug": "maximum-array-hopping-score-ii", "title": "Maximum Array Hopping Score II", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3228, "slug": "maximum-number-of-operations-to-move-ones-to-the-end", "title": "Maximum Number of Operations to Move Ones to the End", "difficulty": "Medium", "tags": ["String", "Greedy", "Counting"], "similar_problems": []},
    {"number": 3229, "slug": "minimum-operations-to-make-array-equal-to-target", "title": "Minimum Operations to Make Array Equal to Target", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3244, "slug": "shortest-distance-after-road-addition-queries-ii", "title": "Shortest Distance After Road Addition Queries II", "difficulty": "Hard", "tags": ["Array", "Greedy", "Graph", "Ordered Set"], "similar_problems": []},
    {"number": 3260, "slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard", "tags": ["Math", "String", "Dynamic Programming", "Greedy", "Number Theory"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "find-the-closest-palindrome", "title": "Find the Closest Palindrome", "difficulty": "Hard"}]},
    {"number": 3273, "slug": "minimum-amount-of-damage-dealt-to-bob", "title": "Minimum Amount of Damage Dealt to Bob", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "minimum-penalty-for-a-shop", "title": "Minimum Penalty for a Shop", "difficulty": "Medium"}]},
    {"number": 3281, "slug": "maximize-score-of-numbers-in-ranges", "title": "Maximize Score of Numbers in Ranges", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}]},
    {"number": 3282, "slug": "reach-end-of-array-with-max-score", "title": "Reach End of Array With Max Score", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 3296, "slug": "minimum-number-of-seconds-to-make-mountain-height-zero", "title": "Minimum Number of Seconds to Make Mountain Height Zero", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3301, "slug": "maximize-the-total-height-of-unique-towers", "title": "Maximize the Total Height of Unique Towers", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3302, "slug": "find-the-lexicographically-smallest-valid-sequence", "title": "Find the Lexicographically Smallest Valid Sequence", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}]},
    {"number": 3326, "slug": "minimum-division-operations-to-make-array-non-decreasing", "title": "Minimum Division Operations to Make Array Non Decreasing", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Number Theory"], "similar_problems": [{"slug": "smallest-value-after-replacing-with-sum-of-prime-factors", "title": "Smallest Value After Replacing With Sum of Prime Factors", "difficulty": "Medium"}]},
    {"number": 3348, "slug": "smallest-divisible-digit-product-ii", "title": "Smallest Divisible Digit Product II", "difficulty": "Hard", "tags": ["Math", "String", "Backtracking", "Greedy", "Number Theory"], "similar_problems": [{"slug": "smallest-number-with-given-digit-product", "title": "Smallest Number With Given Digit Product", "difficulty": "Medium"}]},
    {"number": 3357, "slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium"}, {"slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard"}]},
    {"number": 3362, "slug": "zero-array-transformation-iii", "title": "Zero Array Transformation III", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "corporate-flight-bookings", "title": "Corporate Flight Bookings", "difficulty": "Medium"}, {"slug": "minimum-moves-to-make-array-complementary", "title": "Minimum Moves to Make Array Complementary", "difficulty": "Medium"}, {"slug": "zero-array-transformation-iv", "title": "Zero Array Transformation IV", "difficulty": "Medium"}]},
    {"number": 3397, "slug": "maximum-number-of-distinct-elements-after-operations", "title": "Maximum Number of Distinct Elements After Operations", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "least-number-of-unique-integers-after-k-removals", "title": "Least Number of Unique Integers after K Removals", "difficulty": "Medium"}]},
    {"number": 3402, "slug": "minimum-operations-to-make-columns-strictly-increasing", "title": "Minimum Operations to Make Columns Strictly Increasing", "difficulty": "Easy", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 3413, "slug": "maximum-coins-from-k-consecutive-bags", "title": "Maximum Coins From K Consecutive Bags", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 3424, "slug": "minimum-cost-to-make-arrays-identical", "title": "Minimum Cost to Make Arrays Identical", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3434, "slug": "maximum-frequency-after-subarray-operation", "title": "Maximum Frequency After Subarray Operation", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Dynamic Programming", "Greedy", "Enumeration", "Prefix Sum"], "similar_problems": []},
    {"number": 3439, "slug": "reschedule-meetings-for-maximum-free-time-i", "title": "Reschedule Meetings for Maximum Free Time I", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sliding Window"], "similar_problems": [{"slug": "meeting-scheduler", "title": "Meeting Scheduler", "difficulty": "Medium"}]},
    {"number": 3440, "slug": "reschedule-meetings-for-maximum-free-time-ii", "title": "Reschedule Meetings for Maximum Free Time II", "difficulty": "Medium", "tags": ["Array", "Greedy", "Enumeration"], "similar_problems": []},
    {"number": 3449, "slug": "maximize-the-minimum-game-score", "title": "Maximize the Minimum Game Score", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": []},
    {"number": 3457, "slug": "eat-pizzas", "title": "Eat Pizzas!", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3458, "slug": "select-k-disjoint-special-substrings", "title": "Select K Disjoint Special Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-longest-self-contained-substring", "title": "Find Longest Self-Contained Substring", "difficulty": "Hard"}]},
    {"number": 3462, "slug": "maximum-sum-with-at-most-k-elements", "title": "Maximum Sum With at Most K Elements", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 3464, "slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}, {"slug": "maximum-points-inside-the-square", "title": "Maximum Points Inside the Square", "difficulty": "Medium"}]},
    {"number": 3474, "slug": "lexicographically-smallest-generated-string", "title": "Lexicographically Smallest Generated String", "difficulty": "Hard", "tags": ["String", "Greedy", "String Matching"], "similar_problems": [{"slug": "lexicographically-smallest-equivalent-string", "title": "Lexicographically Smallest Equivalent String", "difficulty": "Medium"}]},
    {"number": 3476, "slug": "maximize-profit-from-task-assignment", "title": "Maximize Profit from Task Assignment", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3487, "slug": "maximum-unique-subarray-sum-after-deletion", "title": "Maximum Unique Subarray Sum After Deletion", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": [{"slug": "maximum-subarray-sum-with-one-deletion", "title": "Maximum Subarray Sum with One Deletion", "difficulty": "Medium"}]},
    {"number": 3496, "slug": "maximize-score-after-pair-deletions", "title": "Maximize Score After Pair Deletions", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 3506, "slug": "find-time-required-to-eliminate-bacterial-strains", "title": "Find Time Required to Eliminate Bacterial Strains", "difficulty": "Hard", "tags": ["Array", "Math", "Greedy", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-time-to-build-blocks", "title": "Minimum Time to Build Blocks", "difficulty": "Hard"}]},
    {"number": 3511, "slug": "make-a-positive-array", "title": "Make a Positive Array", "difficulty": "Medium", "tags": ["Array", "Greedy", "Prefix Sum"], "similar_problems": []},
    {"number": 3523, "slug": "make-array-non-decreasing", "title": "Make Array Non-decreasing", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3534, "slug": "path-existence-queries-in-a-graph-ii", "title": "Path Existence Queries in a Graph II", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Dynamic Programming", "Greedy", "Bit Manipulation", "Graph", "Sorting"], "similar_problems": []},
    {"number": 3542, "slug": "minimum-operations-to-convert-all-elements-to-zero", "title": "Minimum Operations to Convert All Elements to Zero", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3545, "slug": "minimum-deletions-for-at-most-k-distinct-characters", "title": "Minimum Deletions for At Most K Distinct Characters", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": []},
    {"number": 3547, "slug": "maximum-sum-of-edge-values-in-a-graph", "title": "Maximum Sum of Edge Values in a Graph", "difficulty": "Hard", "tags": ["Math", "Greedy", "Graph"], "similar_problems": []},
    {"number": 3555, "slug": "smallest-subarray-to-sort-in-every-sliding-window", "title": "Smallest Subarray to Sort in Every Sliding Window", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "shortest-unsorted-continuous-subarray", "title": "Shortest Unsorted Continuous Subarray", "difficulty": "Medium"}]},
    {"number": 3557, "slug": "find-maximum-number-of-non-intersecting-substrings", "title": "Find Maximum Number of Non Intersecting Substrings", "difficulty": "Medium", "tags": ["Hash Table", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 3572, "slug": "maximize-ysum-by-picking-a-triplet-of-distinct-xvalues", "title": "Maximize Y‑Sum by Picking a Triplet of Distinct X‑Values", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-sum-of-3-non-overlapping-subarrays", "title": "Maximum Sum of 3 Non-Overlapping Subarrays", "difficulty": "Hard"}, {"slug": "largest-values-from-labels", "title": "Largest Values From Labels", "difficulty": "Medium"}]},
    {"number": 3576, "slug": "transform-array-to-all-equal-elements", "title": "Transform Array to All Equal Elements", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 3579, "slug": "minimum-steps-to-convert-string-with-operations", "title": "Minimum Steps to Convert String with Operations", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 3587, "slug": "minimum-adjacent-swaps-to-alternate-parity", "title": "Minimum Adjacent Swaps to Alternate Parity", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 3588, "slug": "find-maximum-area-of-a-triangle", "title": "Find Maximum Area of a Triangle", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Greedy", "Geometry", "Enumeration"], "similar_problems": []},
    {"number": 3600, "slug": "maximize-spanning-tree-stability-with-upgrades", "title": "Maximize Spanning Tree Stability with Upgrades", "difficulty": "Hard", "tags": ["Binary Search", "Greedy", "Union Find", "Graph", "Minimum Spanning Tree"], "similar_problems": []},
    {"number": 3605, "slug": "minimum-stability-factor-of-array", "title": "Minimum Stability Factor of Array", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Greedy", "Segment Tree", "Number Theory"], "similar_problems": []},
    {"number": 3627, "slug": "maximum-median-sum-of-subsequences-of-size-3", "title": "Maximum Median Sum of Subsequences of Size 3", "difficulty": "Medium", "tags": ["Array", "Math", "Greedy", "Sorting", "Game Theory"], "similar_problems": []},
    {"number": 3628, "slug": "maximum-number-of-subsequences-after-one-inserting", "title": "Maximum Number of Subsequences After One Inserting", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": []},
    {"number": 3630, "slug": "partition-array-for-maximum-xor-and-and", "title": "Partition Array for Maximum XOR and AND", "difficulty": "Hard", "tags": ["Array", "Math", "Greedy", "Bit Manipulation", "Enumeration"], "similar_problems": []},
    {"number": 3633, "slug": "earliest-finish-time-for-land-and-water-rides-i", "title": "Earliest Finish Time for Land and Water Rides I", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3635, "slug": "earliest-finish-time-for-land-and-water-rides-ii", "title": "Earliest Finish Time for Land and Water Rides II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3638, "slug": "maximum-balanced-shipments", "title": "Maximum Balanced Shipments", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3645, "slug": "maximum-total-from-optimal-activation-order", "title": "Maximum Total from Optimal Activation Order", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": []}
]