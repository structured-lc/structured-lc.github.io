[
    {"number": 1768, "slug": "merge-strings-alternately", "title": "Merge Strings Alternately", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium"}]},
    {"number": 1071, "slug": "greatest-common-divisor-of-strings", "title": "Greatest Common Divisor of Strings", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}, {"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}, {"slug": "find-the-maximum-factor-score-of-array", "title": "Find the Maximum Factor Score of Array", "difficulty": "Medium"}]},
    {"number": 1431, "slug": "kids-with-the-greatest-number-of-candies", "title": "Kids With the Greatest Number of Candies", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 605, "slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}]},
    {"number": 345, "slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}, {"slug": "sort-vowels-in-a-string", "title": "Sort Vowels in a String", "difficulty": "Medium"}]},
    {"number": 151, "slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium"}]},
    {"number": 238, "slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "minimum-difference-in-sums-after-removal-of-elements", "title": "Minimum Difference in Sums After Removal of Elements", "difficulty": "Hard"}, {"slug": "construct-product-matrix", "title": "Construct Product Matrix", "difficulty": "Medium"}, {"slug": "find-sum-of-array-product-of-magical-sequences", "title": "Find Sum of Array Product of Magical Sequences", "difficulty": "Hard"}]},
    {"number": 334, "slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "count-special-quadruplets", "title": "Count Special Quadruplets", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 443, "slug": "string-compression", "title": "String Compression", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "count-and-say", "title": "Count and Say", "difficulty": "Medium"}, {"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "decompress-run-length-encoded-list", "title": "Decompress Run-Length Encoded List", "difficulty": "Easy"}, {"slug": "string-compression-iii", "title": "String Compression III", "difficulty": "Medium"}, {"slug": "better-compression-of-string", "title": "Better Compression of String", "difficulty": "Medium"}]},
    {"number": 283, "slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}]},
    {"number": 392, "slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}, {"slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium"}, {"slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium"}, {"slug": "make-string-a-subsequence-using-cyclic-increments", "title": "Make String a Subsequence Using Cyclic Increments", "difficulty": "Medium"}]},
    {"number": 11, "slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}]},
    {"number": 1679, "slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "divide-players-into-teams-of-equal-skill", "title": "Divide Players Into Teams of Equal Skill", "difficulty": "Medium"}]},
    {"number": 643, "slug": "maximum-average-subarray-i", "title": "Maximum Average Subarray I", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": [{"slug": "maximum-average-subarray-ii", "title": "Maximum Average Subarray II", "difficulty": "Hard"}, {"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 1456, "slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium", "tags": ["String", "Sliding Window"], "similar_problems": [{"slug": "maximum-white-tiles-covered-by-a-carpet", "title": "Maximum White Tiles Covered by a Carpet", "difficulty": "Medium"}, {"slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy"}, {"slug": "length-of-the-longest-alphabetical-continuous-substring", "title": "Length of the Longest Alphabetical Continuous Substring", "difficulty": "Medium"}]},
    {"number": 1004, "slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "max-consecutive-ones-ii", "title": "Max Consecutive Ones II", "difficulty": "Medium"}, {"slug": "longest-subarray-of-1s-after-deleting-one-element", "title": "Longest Subarray of 1's After Deleting One Element", "difficulty": "Medium"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}, {"slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "maximum-sum-of-distinct-subarrays-with-length-k", "title": "Maximum Sum of Distinct Subarrays With Length K", "difficulty": "Medium"}, {"slug": "maximum-enemy-forts-that-can-be-captured", "title": "Maximum Enemy Forts That Can Be Captured", "difficulty": "Easy"}]},
    {"number": 1493, "slug": "longest-subarray-of-1s-after-deleting-one-element", "title": "Longest Subarray of 1's After Deleting One Element", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Sliding Window"], "similar_problems": [{"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}]},
    {"number": 1732, "slug": "find-the-highest-altitude", "title": "Find the Highest Altitude", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 724, "slug": "find-pivot-index", "title": "Find Pivot Index", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "maximum-sum-score-of-array", "title": "Maximum Sum Score of Array", "difficulty": "Medium"}, {"slug": "left-and-right-sum-differences", "title": "Left and Right Sum Differences", "difficulty": "Easy"}]},
    {"number": 2215, "slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 1207, "slug": "unique-number-of-occurrences", "title": "Unique Number of Occurrences", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 1657, "slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sorting", "Counting"], "similar_problems": [{"slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy"}, {"slug": "minimum-swaps-to-make-strings-equal", "title": "Minimum Swaps to Make Strings Equal", "difficulty": "Medium"}, {"slug": "minimum-number-of-steps-to-make-two-strings-anagram", "title": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": "Medium"}]},
    {"number": 2352, "slug": "equal-row-and-column-pairs", "title": "Equal Row and Column Pairs", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix", "Simulation"], "similar_problems": [{"slug": "delete-greatest-value-in-each-row", "title": "Delete Greatest Value in Each Row", "difficulty": "Easy"}]},
    {"number": 394, "slug": "decode-string", "title": "Decode String", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 735, "slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium", "tags": ["Array", "Stack", "Simulation"], "similar_problems": [{"slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy"}, {"slug": "destroying-asteroids", "title": "Destroying Asteroids", "difficulty": "Medium"}, {"slug": "count-collisions-on-a-road", "title": "Count Collisions on a Road", "difficulty": "Medium"}, {"slug": "robot-collisions", "title": "Robot Collisions", "difficulty": "Hard"}]},
    {"number": 2390, "slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium", "tags": ["String", "Stack", "Simulation"], "similar_problems": [{"slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy"}, {"slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}]},
    {"number": 933, "slug": "number-of-recent-calls", "title": "Number of Recent Calls", "difficulty": "Easy", "tags": ["Design", "Queue", "Data Stream"], "similar_problems": []},
    {"number": 649, "slug": "dota2-senate", "title": "Dota2 Senate", "difficulty": "Medium", "tags": ["String", "Greedy", "Queue"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}]},
    {"number": 2095, "slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium"}, {"slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium"}, {"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy"}]},
    {"number": 328, "slug": "odd-even-linked-list", "title": "Odd Even Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium"}, {"slug": "transform-array-by-parity", "title": "Transform Array by Parity", "difficulty": "Easy"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 2130, "slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy"}]},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}]},
    {"number": 872, "slug": "leaf-similar-trees", "title": "Leaf-Similar Trees", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1448, "slug": "count-good-nodes-in-binary-tree", "title": "Count Good Nodes in Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 437, "slug": "path-sum-iii", "title": "Path Sum III", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum", "title": "Path Sum", "difficulty": "Easy"}, {"slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"}, {"slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}]},
    {"number": 1372, "slug": "longest-zigzag-path-in-a-binary-tree", "title": "Longest ZigZag Path in a Binary Tree", "difficulty": "Medium", "tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy"}]},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "find-players-with-zero-or-one-losses", "title": "Find Players With Zero or One Losses", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 199, "slug": "binary-tree-right-side-view", "title": "Binary Tree Right Side View", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium"}, {"slug": "boundary-of-binary-tree", "title": "Boundary of Binary Tree", "difficulty": "Medium"}]},
    {"number": 1161, "slug": "maximum-level-sum-of-a-binary-tree", "title": "Maximum Level Sum of a Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "kth-largest-sum-in-a-binary-tree", "title": "Kth Largest Sum in a Binary Tree", "difficulty": "Medium"}, {"slug": "cousins-in-binary-tree-ii", "title": "Cousins in Binary Tree II", "difficulty": "Medium"}]},
    {"number": 700, "slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy", "tags": ["Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}, {"slug": "insert-into-a-binary-search-tree", "title": "Insert into a Binary Search Tree", "difficulty": "Medium"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 450, "slug": "delete-node-in-a-bst", "title": "Delete Node in a BST", "difficulty": "Medium", "tags": ["Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "split-bst", "title": "Split BST", "difficulty": "Medium"}]},
    {"number": 841, "slug": "keys-and-rooms", "title": "Keys and Rooms", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "graph-valid-tree", "title": "Graph Valid Tree", "difficulty": "Medium"}]},
    {"number": 547, "slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy"}, {"slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy"}, {"slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium"}, {"slug": "the-earliest-moment-when-everyone-become-friends", "title": "The Earliest Moment When Everyone Become Friends", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}]},
    {"number": 1466, "slug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero", "title": "Reorder Routes to Make All Paths Lead to the City Zero", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "minimum-edge-reversals-so-every-node-is-reachable", "title": "Minimum Edge Reversals So Every Node Is Reachable", "difficulty": "Hard"}]},
    {"number": 399, "slug": "evaluate-division", "title": "Evaluate Division", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Shortest Path"], "similar_problems": [{"slug": "check-for-contradictions-in-equations", "title": "Check for Contradictions in Equations", "difficulty": "Hard"}, {"slug": "maximize-amount-after-two-days-of-conversions", "title": "Maximize Amount After Two Days of Conversions", "difficulty": "Medium"}]},
    {"number": 1926, "slug": "nearest-exit-from-entrance-in-maze", "title": "Nearest Exit from Entrance in Maze", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 994, "slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}, {"slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard"}]},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 2336, "slug": "smallest-number-in-infinite-set", "title": "Smallest Number in Infinite Set", "difficulty": "Medium", "tags": ["Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}]},
    {"number": 2542, "slug": "maximum-subsequence-score", "title": "Maximum Subsequence Score", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "ipo", "title": "IPO", "difficulty": "Hard"}, {"slug": "minimum-cost-to-hire-k-workers", "title": "Minimum Cost to Hire K Workers", "difficulty": "Hard"}]},
    {"number": 2462, "slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Heap (Priority Queue)", "Simulation"], "similar_problems": [{"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "time-to-cross-a-bridge", "title": "Time to Cross a Bridge", "difficulty": "Hard"}]},
    {"number": 374, "slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower-ii", "title": "Guess Number Higher or Lower II", "difficulty": "Medium"}, {"slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium"}]},
    {"number": 2499, "slug": "minimum-total-cost-to-make-arrays-unequal", "title": "Minimum Total Cost to Make Arrays Unequal", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Greedy", "Counting"], "similar_problems": []},
    {"number": 162, "slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}, {"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}, {"slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy"}]},
    {"number": 875, "slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "minimize-max-distance-to-gas-station", "title": "Minimize Max Distance to Gas Station", "difficulty": "Hard"}, {"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "minimum-time-to-repair-cars", "title": "Minimum Time to Repair Cars", "difficulty": "Medium"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 216, "slug": "combination-sum-iii", "title": "Combination Sum III", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}]},
    {"number": 1137, "slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}]},
    {"number": 746, "slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}]},
    {"number": 198, "slug": "house-robber", "title": "House Robber", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "house-robber-ii", "title": "House Robber II", "difficulty": "Medium"}, {"slug": "paint-house", "title": "Paint House", "difficulty": "Medium"}, {"slug": "paint-fence", "title": "Paint Fence", "difficulty": "Medium"}, {"slug": "house-robber-iii", "title": "House Robber III", "difficulty": "Medium"}, {"slug": "non-negative-integers-without-consecutive-ones", "title": "Non-negative Integers without Consecutive Ones", "difficulty": "Hard"}, {"slug": "coin-path", "title": "Coin Path", "difficulty": "Hard"}, {"slug": "delete-and-earn", "title": "Delete and Earn", "difficulty": "Medium"}, {"slug": "solving-questions-with-brainpower", "title": "Solving Questions With Brainpower", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}, {"slug": "mice-and-cheese", "title": "Mice and Cheese", "difficulty": "Medium"}, {"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 790, "slug": "domino-and-tromino-tiling", "title": "Domino and Tromino Tiling", "difficulty": "Medium", "tags": ["Dynamic Programming"], "similar_problems": []},
    {"number": 62, "slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Combinatorics"], "similar_problems": [{"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 1143, "slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}, {"slug": "shortest-common-supersequence", "title": "Shortest Common Supersequence ", "difficulty": "Hard"}, {"slug": "maximize-number-of-subsequences-in-a-string", "title": "Maximize Number of Subsequences in a String", "difficulty": "Medium"}, {"slug": "subsequence-with-the-minimum-score", "title": "Subsequence With the Minimum Score", "difficulty": "Hard"}]},
    {"number": 714, "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "title": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}]},
    {"number": 72, "slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium", "tags": ["String", "Dynamic Programming"], "similar_problems": [{"slug": "one-edit-distance", "title": "One Edit Distance", "difficulty": "Medium"}, {"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "uncrossed-lines", "title": "Uncrossed Lines", "difficulty": "Medium"}, {"slug": "minimum-white-tiles-after-covering-with-carpets", "title": "Minimum White Tiles After Covering With Carpets", "difficulty": "Hard"}, {"slug": "longest-palindrome-after-substring-concatenation-ii", "title": "Longest Palindrome After Substring Concatenation II", "difficulty": "Hard"}, {"slug": "minimum-steps-to-convert-string-with-operations", "title": "Minimum Steps to Convert String with Operations", "difficulty": "Hard"}]},
    {"number": 338, "slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy", "tags": ["Dynamic Programming", "Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "sum-of-values-at-indices-with-k-set-bits", "title": "Sum of Values at Indices With K Set Bits", "difficulty": "Easy"}, {"slug": "find-the-k-or-of-an-array", "title": "Find the K-or of an Array", "difficulty": "Easy"}]},
    {"number": 136, "slug": "single-number", "title": "Single Number", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 1318, "slug": "minimum-flips-to-make-a-or-b-equal-to-c", "title": "Minimum Flips to Make a OR b Equal to c", "difficulty": "Medium", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "minimum-bit-flips-to-convert-number", "title": "Minimum Bit Flips to Convert Number", "difficulty": "Easy"}]},
    {"number": 208, "slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard"}, {"slug": "replace-words", "title": "Replace Words", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 1268, "slug": "search-suggestions-system", "title": "Search Suggestions System", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Trie", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 435, "slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}]},
    {"number": 452, "slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium"}]},
    {"number": 739, "slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium"}]},
    {"number": 901, "slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium", "tags": ["Stack", "Design", "Monotonic Stack", "Data Stream"], "similar_problems": [{"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}]}
]