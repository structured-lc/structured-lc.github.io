[
    {"number": 36, "slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "sudoku-solver", "title": "Sudoku Solver", "difficulty": "Hard"}, {"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}]},
    {"number": 37, "slug": "sudoku-solver", "title": "Sudoku Solver", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Backtracking", "Matrix"], "similar_problems": [{"slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}]},
    {"number": 48, "slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium", "tags": ["Array", "Math", "Matrix"], "similar_problems": [{"slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy"}]},
    {"number": 54, "slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 59, "slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 63, "slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 64, "slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "cherry-pickup", "title": "Cherry Pickup", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "maximum-number-of-points-with-cost", "title": "Maximum Number of Points with Cost", "difficulty": "Medium"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}, {"slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "difficulty": "Medium"}, {"slug": "minimum-cost-of-a-path-with-special-roads", "title": "Minimum Cost of a Path With Special Roads", "difficulty": "Medium"}]},
    {"number": 73, "slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "game-of-life", "title": "Game of Life", "difficulty": "Medium"}, {"slug": "number-of-laser-beams-in-a-bank", "title": "Number of Laser Beams in a Bank", "difficulty": "Medium"}, {"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium"}]},
    {"number": 74, "slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 79, "slug": "word-search", "title": "Word Search", "difficulty": "Medium", "tags": ["Array", "String", "Backtracking", "Depth-First Search", "Matrix"], "similar_problems": [{"slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard"}]},
    {"number": 85, "slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard"}, {"slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium"}, {"slug": "find-sorted-submatrices-with-maximum-element-at-most-k", "title": "Find Sorted Submatrices With Maximum Element at Most K", "difficulty": "Hard"}]},
    {"number": 130, "slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}]},
    {"number": 174, "slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "cherry-pickup", "title": "Cherry Pickup", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "minimum-health-to-beat-game", "title": "Minimum Health to Beat Game", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}, {"slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "difficulty": "Medium"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 212, "slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "similar_problems": [{"slug": "word-search", "title": "Word Search", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 221, "slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}, {"slug": "largest-plus-sign", "title": "Largest Plus Sign", "difficulty": "Medium"}, {"slug": "count-artifacts-that-can-be-extracted", "title": "Count Artifacts That Can Be Extracted", "difficulty": "Medium"}, {"slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard"}, {"slug": "maximize-area-of-square-hole-in-grid", "title": "Maximize Area of Square Hole in Grid", "difficulty": "Medium"}]},
    {"number": 240, "slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}]},
    {"number": 286, "slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "shortest-distance-from-all-buildings", "title": "Shortest Distance from All Buildings", "difficulty": "Hard"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard"}, {"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}, {"slug": "count-the-number-of-houses-at-a-certain-distance-i", "title": "Count the Number of Houses at a Certain Distance I", "difficulty": "Medium"}, {"slug": "count-the-number-of-houses-at-a-certain-distance-ii", "title": "Count the Number of Houses at a Certain Distance II", "difficulty": "Hard"}]},
    {"number": 289, "slug": "game-of-life", "title": "Game of Life", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}]},
    {"number": 296, "slug": "best-meeting-point", "title": "Best Meeting Point", "difficulty": "Hard", "tags": ["Array", "Math", "Sorting", "Matrix"], "similar_problems": [{"slug": "shortest-distance-from-all-buildings", "title": "Shortest Distance from All Buildings", "difficulty": "Hard"}, {"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}]},
    {"number": 302, "slug": "smallest-rectangle-enclosing-black-pixels", "title": "Smallest Rectangle Enclosing Black Pixels", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "find-the-minimum-area-to-cover-all-ones-ii", "title": "Find the Minimum Area to Cover All Ones II", "difficulty": "Hard"}, {"slug": "find-the-minimum-area-to-cover-all-ones-i", "title": "Find the Minimum Area to Cover All Ones I", "difficulty": "Medium"}]},
    {"number": 304, "slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium", "tags": ["Array", "Design", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "range-sum-query-immutable", "title": "Range Sum Query - Immutable", "difficulty": "Easy"}, {"slug": "range-sum-query-2d-mutable", "title": "Range Sum Query 2D - Mutable", "difficulty": "Medium"}, {"slug": "find-the-grid-of-region-average", "title": "Find the Grid of Region Average", "difficulty": "Medium"}]},
    {"number": 308, "slug": "range-sum-query-2d-mutable", "title": "Range Sum Query 2D - Mutable", "difficulty": "Medium", "tags": ["Array", "Design", "Binary Indexed Tree", "Segment Tree", "Matrix"], "similar_problems": [{"slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium"}, {"slug": "range-sum-query-mutable", "title": "Range Sum Query - Mutable", "difficulty": "Medium"}, {"slug": "increment-submatrices-by-one", "title": "Increment Submatrices by One", "difficulty": "Medium"}, {"slug": "sum-of-matrix-after-queries", "title": "Sum of Matrix After Queries", "difficulty": "Medium"}]},
    {"number": 311, "slug": "sparse-matrix-multiplication", "title": "Sparse Matrix Multiplication", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": []},
    {"number": 317, "slug": "shortest-distance-from-all-buildings", "title": "Shortest Distance from All Buildings", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "best-meeting-point", "title": "Best Meeting Point", "difficulty": "Hard"}, {"slug": "as-far-from-land-as-possible", "title": "As Far from Land as Possible", "difficulty": "Medium"}]},
    {"number": 329, "slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 348, "slug": "design-tic-tac-toe", "title": "Design Tic-Tac-Toe", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Design", "Matrix", "Simulation"], "similar_problems": [{"slug": "valid-tic-tac-toe-state", "title": "Valid Tic-Tac-Toe State", "difficulty": "Medium"}]},
    {"number": 361, "slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard"}, {"slug": "count-unguarded-cells-in-the-grid", "title": "Count Unguarded Cells in the Grid", "difficulty": "Medium"}, {"slug": "maximum-trailing-zeros-in-a-cornered-path", "title": "Maximum Trailing Zeros in a Cornered Path", "difficulty": "Medium"}]},
    {"number": 363, "slug": "max-sum-of-rectangle-no-larger-than-k", "title": "Max Sum of Rectangle No Larger Than K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum", "Ordered Set"], "similar_problems": []},
    {"number": 378, "slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "find-k-pairs-with-smallest-sums", "title": "Find K Pairs with Smallest Sums", "difficulty": "Medium"}, {"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium"}]},
    {"number": 407, "slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-number-of-points-from-grid-queries", "title": "Maximum Number of Points From Grid Queries", "difficulty": "Hard"}]},
    {"number": 417, "slug": "pacific-atlantic-water-flow", "title": "Pacific Atlantic Water Flow", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 419, "slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}]},
    {"number": 422, "slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "word-squares", "title": "Word Squares", "difficulty": "Hard"}, {"slug": "toeplitz-matrix", "title": "Toeplitz Matrix", "difficulty": "Easy"}]},
    {"number": 427, "slug": "construct-quad-tree", "title": "Construct Quad Tree", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Tree", "Matrix"], "similar_problems": []},
    {"number": 463, "slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "flood-fill", "title": "Flood Fill", "difficulty": "Easy"}, {"slug": "coloring-a-border", "title": "Coloring A Border", "difficulty": "Medium"}]},
    {"number": 490, "slug": "the-maze", "title": "The Maze", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "the-maze-iii", "title": "The Maze III", "difficulty": "Hard"}, {"slug": "the-maze-ii", "title": "The Maze II", "difficulty": "Medium"}]},
    {"number": 498, "slug": "diagonal-traverse", "title": "Diagonal Traverse", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "decode-the-slanted-ciphertext", "title": "Decode the Slanted Ciphertext", "difficulty": "Medium"}]},
    {"number": 499, "slug": "the-maze-iii", "title": "The Maze III", "difficulty": "Hard", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "the-maze", "title": "The Maze", "difficulty": "Medium"}, {"slug": "the-maze-ii", "title": "The Maze II", "difficulty": "Medium"}]},
    {"number": 505, "slug": "the-maze-ii", "title": "The Maze II", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "the-maze", "title": "The Maze", "difficulty": "Medium"}, {"slug": "the-maze-iii", "title": "The Maze III", "difficulty": "Hard"}]},
    {"number": 529, "slug": "minesweeper", "title": "Minesweeper", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}]},
    {"number": 531, "slug": "lonely-pixel-i", "title": "Lonely Pixel I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "lonely-pixel-ii", "title": "Lonely Pixel II", "difficulty": "Medium"}]},
    {"number": 533, "slug": "lonely-pixel-ii", "title": "Lonely Pixel II", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "lonely-pixel-i", "title": "Lonely Pixel I", "difficulty": "Medium"}]},
    {"number": 542, "slug": "01-matrix", "title": "01 Matrix", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "shortest-path-to-get-food", "title": "Shortest Path to Get Food", "difficulty": "Medium"}, {"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium"}]},
    {"number": 562, "slug": "longest-line-of-consecutive-one-in-matrix", "title": "Longest Line of Consecutive One in Matrix", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 566, "slug": "reshape-the-matrix", "title": "Reshape the Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "convert-1d-array-into-2d-array", "title": "Convert 1D Array Into 2D Array", "difficulty": "Easy"}]},
    {"number": 568, "slug": "maximum-vacation-days", "title": "Maximum Vacation Days", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "cheapest-flights-within-k-stops", "title": "Cheapest Flights Within K Stops", "difficulty": "Medium"}]},
    {"number": 631, "slug": "design-excel-sum-formula", "title": "Design Excel Sum Formula", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Graph", "Design", "Topological Sort", "Matrix"], "similar_problems": []},
    {"number": 661, "slug": "image-smoother", "title": "Image Smoother", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 675, "slug": "cut-off-trees-for-golf-event", "title": "Cut Off Trees for Golf Event", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 695, "slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}, {"slug": "largest-submatrix-with-rearrangements", "title": "Largest Submatrix With Rearrangements", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}]},
    {"number": 723, "slug": "candy-crush", "title": "Candy Crush", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 733, "slug": "flood-fill", "title": "Flood Fill", "difficulty": "Easy", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}]},
    {"number": 741, "slug": "cherry-pickup", "title": "Cherry Pickup", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "maximum-path-quality-of-a-graph", "title": "Maximum Path Quality of a Graph", "difficulty": "Hard"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 749, "slug": "contain-virus", "title": "Contain Virus", "difficulty": "Hard", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix", "Simulation"], "similar_problems": [{"slug": "count-the-number-of-infection-sequences", "title": "Count the Number of Infection Sequences", "difficulty": "Hard"}]},
    {"number": 750, "slug": "number-of-corner-rectangles", "title": "Number Of Corner Rectangles", "difficulty": "Medium", "tags": ["Array", "Math", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 766, "slug": "toeplitz-matrix", "title": "Toeplitz Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy"}]},
    {"number": 773, "slug": "sliding-puzzle", "title": "Sliding Puzzle", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Backtracking", "Breadth-First Search", "Memoization", "Matrix"], "similar_problems": []},
    {"number": 778, "slug": "swim-in-rising-water", "title": "Swim in Rising Water", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 782, "slug": "transform-to-chessboard", "title": "Transform to Chessboard", "difficulty": "Hard", "tags": ["Array", "Math", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "minimum-moves-to-get-a-peaceful-board", "title": "Minimum Moves to Get a Peaceful Board", "difficulty": "Medium"}]},
    {"number": 794, "slug": "valid-tic-tac-toe-state", "title": "Valid Tic-Tac-Toe State", "difficulty": "Medium", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "design-tic-tac-toe", "title": "Design Tic-Tac-Toe", "difficulty": "Medium"}]},
    {"number": 803, "slug": "bricks-falling-when-hit", "title": "Bricks Falling When Hit", "difficulty": "Hard", "tags": ["Array", "Union Find", "Matrix"], "similar_problems": [{"slug": "last-day-where-you-can-still-cross", "title": "Last Day Where You Can Still Cross", "difficulty": "Hard"}, {"slug": "number-of-ways-to-build-sturdy-brick-wall", "title": "Number of Ways to Build Sturdy Brick Wall", "difficulty": "Medium"}]},
    {"number": 807, "slug": "max-increase-to-keep-city-skyline", "title": "Max Increase to Keep City Skyline", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 827, "slug": "making-a-large-island", "title": "Making A Large Island", "difficulty": "Hard", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 832, "slug": "flipping-an-image", "title": "Flipping an Image", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Bit Manipulation", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 835, "slug": "image-overlap", "title": "Image Overlap", "difficulty": "Medium", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 840, "slug": "magic-squares-in-grid", "title": "Magic Squares In Grid", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Matrix"], "similar_problems": [{"slug": "largest-magic-square", "title": "Largest Magic Square", "difficulty": "Medium"}]},
    {"number": 861, "slug": "score-after-flipping-matrix", "title": "Score After Flipping Matrix", "difficulty": "Medium", "tags": ["Array", "Greedy", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}]},
    {"number": 864, "slug": "shortest-path-to-get-all-keys", "title": "Shortest Path to Get All Keys", "difficulty": "Hard", "tags": ["Array", "Bit Manipulation", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 867, "slug": "transpose-matrix", "title": "Transpose Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 883, "slug": "projection-area-of-3d-shapes", "title": "Projection Area of 3D Shapes", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Matrix"], "similar_problems": []},
    {"number": 885, "slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium"}, {"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 892, "slug": "surface-area-of-3d-shapes", "title": "Surface Area of 3D Shapes", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Matrix"], "similar_problems": []},
    {"number": 909, "slug": "snakes-and-ladders", "title": "Snakes and Ladders", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "most-profitable-path-in-a-tree", "title": "Most Profitable Path in a Tree", "difficulty": "Medium"}]},
    {"number": 931, "slug": "minimum-falling-path-sum", "title": "Minimum Falling Path Sum", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-falling-path-sum-ii", "title": "Minimum Falling Path Sum II", "difficulty": "Hard"}]},
    {"number": 934, "slug": "shortest-bridge", "title": "Shortest Bridge", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "minimum-number-of-operations-to-make-x-and-y-equal", "title": "Minimum Number of Operations to Make X and Y Equal", "difficulty": "Medium"}]},
    {"number": 959, "slug": "regions-cut-by-slashes", "title": "Regions Cut By Slashes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 980, "slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard", "tags": ["Array", "Backtracking", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "sudoku-solver", "title": "Sudoku Solver", "difficulty": "Hard"}, {"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard"}]},
    {"number": 994, "slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "detonate-the-maximum-bombs", "title": "Detonate the Maximum Bombs", "difficulty": "Medium"}, {"slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard"}]},
    {"number": 999, "slug": "available-captures-for-rook", "title": "Available Captures for Rook", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "count-unguarded-cells-in-the-grid", "title": "Count Unguarded Cells in the Grid", "difficulty": "Medium"}, {"slug": "minimum-moves-to-capture-the-queen", "title": "Minimum Moves to Capture The Queen", "difficulty": "Medium"}, {"slug": "maximum-value-sum-by-placing-three-rooks-ii", "title": "Maximum Value Sum by Placing Three Rooks II", "difficulty": "Hard"}, {"slug": "maximum-value-sum-by-placing-three-rooks-i", "title": "Maximum Value Sum by Placing Three Rooks I", "difficulty": "Hard"}]},
    {"number": 1020, "slug": "number-of-enclaves", "title": "Number of Enclaves", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 1030, "slug": "matrix-cells-in-distance-order", "title": "Matrix Cells in Distance Order", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Sorting", "Matrix"], "similar_problems": [{"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 1034, "slug": "coloring-a-border", "title": "Coloring A Border", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}]},
    {"number": 1072, "slug": "flip-columns-for-maximum-number-of-equal-rows", "title": "Flip Columns For Maximum Number of Equal Rows", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": []},
    {"number": 1074, "slug": "number-of-submatrices-that-sum-to-target", "title": "Number of Submatrices That Sum to Target", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip", "title": "Disconnect Path in a Binary Matrix by at Most One Flip", "difficulty": "Medium"}]},
    {"number": 1091, "slug": "shortest-path-in-binary-matrix", "title": "Shortest Path in Binary Matrix", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 1102, "slug": "path-with-maximum-minimum-value", "title": "Path With Maximum Minimum Value", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 1139, "slug": "largest-1-bordered-square", "title": "Largest 1-Bordered Square", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 1162, "slug": "as-far-from-land-as-possible", "title": "As Far from Land as Possible", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "shortest-distance-from-all-buildings", "title": "Shortest Distance from All Buildings", "difficulty": "Hard"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}, {"slug": "maximum-manhattan-distance-after-k-changes", "title": "Maximum Manhattan Distance After K Changes", "difficulty": "Medium"}]},
    {"number": 1198, "slug": "find-smallest-common-element-in-all-rows", "title": "Find Smallest Common Element in All Rows", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Matrix", "Counting"], "similar_problems": [{"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 1210, "slug": "minimum-moves-to-reach-target-with-rotations", "title": "Minimum Moves to Reach Target with Rotations", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 1219, "slug": "path-with-maximum-gold", "title": "Path with Maximum Gold", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Matrix"], "similar_problems": []},
    {"number": 1222, "slug": "queens-that-can-attack-the-king", "title": "Queens That Can Attack the King", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "minimum-moves-to-capture-the-queen", "title": "Minimum Moves to Capture The Queen", "difficulty": "Medium"}]},
    {"number": 1253, "slug": "reconstruct-a-2-row-binary-matrix", "title": "Reconstruct a 2-Row Binary Matrix", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "find-valid-matrix-given-row-and-column-sums", "title": "Find Valid Matrix Given Row and Column Sums", "difficulty": "Medium"}]},
    {"number": 1254, "slug": "number-of-closed-islands", "title": "Number of Closed Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 1260, "slug": "shift-2d-grid", "title": "Shift 2D Grid", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 1263, "slug": "minimum-moves-to-move-a-box-to-their-target-location", "title": "Minimum Moves to Move a Box to Their Target Location", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1267, "slug": "count-servers-that-communicate", "title": "Count Servers that Communicate", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix", "Counting"], "similar_problems": []},
    {"number": 1275, "slug": "find-winner-on-a-tic-tac-toe-game", "title": "Find Winner on a Tic Tac Toe Game", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Matrix", "Simulation"], "similar_problems": [{"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 1277, "slug": "count-square-submatrices-with-all-ones", "title": "Count Square Submatrices with All Ones", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "count-fertile-pyramids-in-a-land", "title": "Count Fertile Pyramids in a Land", "difficulty": "Hard"}]},
    {"number": 1284, "slug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Bit Manipulation", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}, {"slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium"}]},
    {"number": 1289, "slug": "minimum-falling-path-sum-ii", "title": "Minimum Falling Path Sum II", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-falling-path-sum", "title": "Minimum Falling Path Sum", "difficulty": "Medium"}]},
    {"number": 1292, "slug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold", "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum"], "similar_problems": []},
    {"number": 1293, "slug": "shortest-path-in-a-grid-with-obstacles-elimination", "title": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "shortest-path-to-get-food", "title": "Shortest Path to Get Food", "difficulty": "Medium"}, {"slug": "minimum-obstacle-removal-to-reach-corner", "title": "Minimum Obstacle Removal to Reach Corner", "difficulty": "Hard"}, {"slug": "find-a-safe-walk-through-a-grid", "title": "Find a Safe Walk Through a Grid", "difficulty": "Medium"}]},
    {"number": 1301, "slug": "number-of-paths-with-max-score", "title": "Number of Paths with Max Score", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 1314, "slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard"}, {"slug": "maximum-sum-of-an-hourglass", "title": "Maximum Sum of an Hourglass", "difficulty": "Medium"}, {"slug": "design-neighbor-sum-service", "title": "Design Neighbor Sum Service", "difficulty": "Easy"}]},
    {"number": 1329, "slug": "sort-the-matrix-diagonally", "title": "Sort the Matrix Diagonally", "difficulty": "Medium", "tags": ["Array", "Sorting", "Matrix"], "similar_problems": [{"slug": "sort-matrix-by-diagonals", "title": "Sort Matrix by Diagonals", "difficulty": "Medium"}]},
    {"number": 1337, "slug": "the-k-weakest-rows-in-a-matrix", "title": "The K Weakest Rows in a Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1349, "slug": "maximum-students-taking-exam", "title": "Maximum Students Taking Exam", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Matrix", "Bitmask"], "similar_problems": []},
    {"number": 1351, "slug": "count-negative-numbers-in-a-sorted-matrix", "title": "Count Negative Numbers in a Sorted Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy"}]},
    {"number": 1368, "slug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid", "title": "Minimum Cost to Make at Least One Valid Path in a Grid", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "minimum-weighted-subgraph-with-the-required-paths", "title": "Minimum Weighted Subgraph With the Required Paths", "difficulty": "Hard"}, {"slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip", "title": "Disconnect Path in a Binary Matrix by at Most One Flip", "difficulty": "Medium"}]},
    {"number": 1380, "slug": "lucky-numbers-in-a-matrix", "title": "Lucky Numbers in a Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 1391, "slug": "check-if-there-is-a-valid-path-in-a-grid", "title": "Check if There is a Valid Path in a Grid", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "check-if-there-is-a-valid-parentheses-string-path", "title": " Check if There Is a Valid Parentheses String Path", "difficulty": "Hard"}]},
    {"number": 1428, "slug": "leftmost-column-with-at-least-a-one", "title": "Leftmost Column with at Least a One", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix", "Interactive"], "similar_problems": []},
    {"number": 1439, "slug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1444, "slug": "number-of-ways-of-cutting-a-pizza", "title": "Number of Ways of Cutting a Pizza", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Memoization", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "selling-pieces-of-wood", "title": "Selling Pieces of Wood", "difficulty": "Hard"}]},
    {"number": 1463, "slug": "cherry-pickup-ii", "title": "Cherry Pickup II", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 1476, "slug": "subrectangle-queries", "title": "Subrectangle Queries", "difficulty": "Medium", "tags": ["Array", "Design", "Matrix"], "similar_problems": []},
    {"number": 1504, "slug": "count-submatrices-with-all-ones", "title": "Count Submatrices With All Ones", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "count-submatrices-with-equal-frequency-of-x-and-y", "title": "Count Submatrices With Equal Frequency of X and Y", "difficulty": "Medium"}]},
    {"number": 1536, "slug": "minimum-swaps-to-arrange-a-binary-grid", "title": "Minimum Swaps to Arrange a Binary Grid", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 1559, "slug": "detect-cycles-in-2d-grid", "title": "Detect Cycles in 2D Grid", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 1568, "slug": "minimum-number-of-days-to-disconnect-island", "title": "Minimum Number of Days to Disconnect Island", "difficulty": "Hard", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix", "Strongly Connected Component"], "similar_problems": [{"slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip", "title": "Disconnect Path in a Binary Matrix by at Most One Flip", "difficulty": "Medium"}, {"slug": "minimum-runes-to-add-to-cast-spell", "title": "Minimum Runes to Add to Cast Spell", "difficulty": "Hard"}]},
    {"number": 1572, "slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}, {"slug": "check-if-matrix-is-x-matrix", "title": "Check if Matrix Is X-Matrix", "difficulty": "Easy"}]},
    {"number": 1582, "slug": "special-positions-in-a-binary-matrix", "title": "Special Positions in a Binary Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium"}]},
    {"number": 1591, "slug": "strange-printer-ii", "title": "Strange Printer II", "difficulty": "Hard", "tags": ["Array", "Graph", "Topological Sort", "Matrix"], "similar_problems": [{"slug": "strange-printer", "title": "Strange Printer", "difficulty": "Hard"}, {"slug": "longest-cycle-in-a-graph", "title": "Longest Cycle in a Graph", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 1594, "slug": "maximum-non-negative-product-in-a-matrix", "title": "Maximum Non Negative Product in a Matrix", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 1595, "slug": "minimum-cost-to-connect-two-groups-of-points", "title": "Minimum Cost to Connect Two Groups of Points", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Matrix", "Bitmask"], "similar_problems": []},
    {"number": 1605, "slug": "find-valid-matrix-given-row-and-column-sums", "title": "Find Valid Matrix Given Row and Column Sums", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "reconstruct-a-2-row-binary-matrix", "title": "Reconstruct a 2-Row Binary Matrix", "difficulty": "Medium"}]},
    {"number": 1631, "slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "swim-in-rising-water", "title": "Swim in Rising Water", "difficulty": "Hard"}, {"slug": "path-with-maximum-minimum-value", "title": "Path With Maximum Minimum Value", "difficulty": "Medium"}, {"slug": "find-the-safest-path-in-a-grid", "title": "Find the Safest Path in a Grid", "difficulty": "Medium"}]},
    {"number": 1632, "slug": "rank-transform-of-a-matrix", "title": "Rank Transform of a Matrix", "difficulty": "Hard", "tags": ["Array", "Union Find", "Graph", "Topological Sort", "Sorting", "Matrix"], "similar_problems": [{"slug": "rank-transform-of-an-array", "title": "Rank Transform of an Array", "difficulty": "Easy"}, {"slug": "gcd-sort-of-an-array", "title": "GCD Sort of an Array", "difficulty": "Hard"}]},
    {"number": 1672, "slug": "richest-customer-wealth", "title": "Richest Customer Wealth", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 1706, "slug": "where-will-the-ball-fall", "title": "Where Will the Ball Fall", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 1727, "slug": "largest-submatrix-with-rearrangements", "title": "Largest Submatrix With Rearrangements", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Matrix"], "similar_problems": [{"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}]},
    {"number": 1728, "slug": "cat-and-mouse-ii", "title": "Cat and Mouse II", "difficulty": "Hard", "tags": ["Array", "Math", "Dynamic Programming", "Graph", "Topological Sort", "Memoization", "Matrix", "Game Theory"], "similar_problems": [{"slug": "escape-the-ghosts", "title": "Escape The Ghosts", "difficulty": "Medium"}, {"slug": "cat-and-mouse", "title": "Cat and Mouse", "difficulty": "Hard"}]},
    {"number": 1730, "slug": "shortest-path-to-get-food", "title": "Shortest Path to Get Food", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "01-matrix", "title": "01 Matrix", "difficulty": "Medium"}, {"slug": "shortest-path-in-a-grid-with-obstacles-elimination", "title": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": "Hard"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}]},
    {"number": 1738, "slug": "find-kth-largest-xor-coordinate-value", "title": "Find Kth Largest XOR Coordinate Value", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Bit Manipulation", "Sorting", "Heap (Priority Queue)", "Matrix", "Prefix Sum", "Quickselect"], "similar_problems": []},
    {"number": 1765, "slug": "map-of-highest-peak", "title": "Map of Highest Peak", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 1778, "slug": "shortest-path-in-a-hidden-grid", "title": "Shortest Path in a Hidden Grid", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix", "Interactive"], "similar_problems": [{"slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-hidden-grid", "title": "Minimum Path Cost in a Hidden Grid", "difficulty": "Medium"}]},
    {"number": 1810, "slug": "minimum-path-cost-in-a-hidden-grid", "title": "Minimum Path Cost in a Hidden Grid", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Interactive", "Shortest Path"], "similar_problems": [{"slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard"}, {"slug": "shortest-path-in-a-hidden-grid", "title": "Shortest Path in a Hidden Grid", "difficulty": "Medium"}]},
    {"number": 1820, "slug": "maximum-number-of-accepted-invitations", "title": "Maximum Number of Accepted Invitations", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Graph", "Matrix"], "similar_problems": []},
    {"number": 1861, "slug": "rotating-the-box", "title": "Rotating the Box", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Matrix"], "similar_problems": []},
    {"number": 1878, "slug": "get-biggest-three-rhombus-sums-in-a-grid", "title": "Get Biggest Three Rhombus Sums in a Grid", "difficulty": "Medium", "tags": ["Array", "Math", "Sorting", "Heap (Priority Queue)", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "count-fertile-pyramids-in-a-land", "title": "Count Fertile Pyramids in a Land", "difficulty": "Hard"}]},
    {"number": 1886, "slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium"}]},
    {"number": 1895, "slug": "largest-magic-square", "title": "Largest Magic Square", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "magic-squares-in-grid", "title": "Magic Squares In Grid", "difficulty": "Medium"}]},
    {"number": 1901, "slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy"}]},
    {"number": 1905, "slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}]},
    {"number": 1914, "slug": "cyclically-rotating-a-grid", "title": "Cyclically Rotating a Grid", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 1926, "slug": "nearest-exit-from-entrance-in-maze", "title": "Nearest Exit from Entrance in Maze", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 1937, "slug": "maximum-number-of-points-with-cost", "title": "Maximum Number of Points with Cost", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "minimize-the-difference-between-target-and-chosen-elements", "title": "Minimize the Difference Between Target and Chosen Elements", "difficulty": "Medium"}]},
    {"number": 1958, "slug": "check-if-move-is-legal", "title": "Check if Move is Legal", "difficulty": "Medium", "tags": ["Array", "Matrix", "Enumeration"], "similar_problems": []},
    {"number": 1970, "slug": "last-day-where-you-can-still-cross", "title": "Last Day Where You Can Still Cross", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "bricks-falling-when-hit", "title": "Bricks Falling When Hit", "difficulty": "Hard"}, {"slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard"}]},
    {"number": 1975, "slug": "maximum-matrix-sum", "title": "Maximum Matrix Sum", "difficulty": "Medium", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": []},
    {"number": 1981, "slug": "minimize-the-difference-between-target-and-chosen-elements", "title": "Minimize the Difference Between Target and Chosen Elements", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "closest-subsequence-sum", "title": "Closest Subsequence Sum", "difficulty": "Hard"}, {"slug": "maximum-number-of-points-with-cost", "title": "Maximum Number of Points with Cost", "difficulty": "Medium"}]},
    {"number": 1992, "slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}]},
    {"number": 2017, "slug": "grid-game", "title": "Grid Game", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "minimum-penalty-for-a-shop", "title": "Minimum Penalty for a Shop", "difficulty": "Medium"}]},
    {"number": 2018, "slug": "check-if-word-can-be-placed-in-crossword", "title": "Check if Word Can Be Placed In Crossword", "difficulty": "Medium", "tags": ["Array", "Matrix", "Enumeration"], "similar_problems": []},
    {"number": 2022, "slug": "convert-1d-array-into-2d-array", "title": "Convert 1D Array Into 2D Array", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "reshape-the-matrix", "title": "Reshape the Matrix", "difficulty": "Easy"}]},
    {"number": 2033, "slug": "minimum-operations-to-make-a-uni-value-grid", "title": "Minimum Operations to Make a Uni-Value Grid", "difficulty": "Medium", "tags": ["Array", "Math", "Sorting", "Matrix"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}]},
    {"number": 2061, "slug": "number-of-spaces-cleaning-robot-cleaned", "title": "Number of Spaces Cleaning Robot Cleaned", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard"}]},
    {"number": 2088, "slug": "count-fertile-pyramids-in-a-land", "title": "Count Fertile Pyramids in a Land", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "count-square-submatrices-with-all-ones", "title": "Count Square Submatrices with All Ones", "difficulty": "Medium"}, {"slug": "get-biggest-three-rhombus-sums-in-a-grid", "title": "Get Biggest Three Rhombus Sums in a Grid", "difficulty": "Medium"}]},
    {"number": 2123, "slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard", "tags": ["Array", "Graph", "Matrix"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}, {"slug": "01-matrix", "title": "01 Matrix", "difficulty": "Medium"}, {"slug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}]},
    {"number": 2125, "slug": "number-of-laser-beams-in-a-bank", "title": "Number of Laser Beams in a Bank", "difficulty": "Medium", "tags": ["Array", "Math", "String", "Matrix"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}]},
    {"number": 2128, "slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium", "tags": ["Array", "Math", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "score-after-flipping-matrix", "title": "Score After Flipping Matrix", "difficulty": "Medium"}, {"slug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "difficulty": "Hard"}, {"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium"}, {"slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium"}]},
    {"number": 2132, "slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard", "tags": ["Array", "Greedy", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium"}, {"slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium"}, {"slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium"}]},
    {"number": 2133, "slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium"}, {"slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy"}, {"slug": "first-completely-painted-row-or-column", "title": "First Completely Painted Row or Column", "difficulty": "Medium"}]},
    {"number": 2146, "slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "as-far-from-land-as-possible", "title": "As Far from Land as Possible", "difficulty": "Medium"}, {"slug": "reward-top-k-students", "title": "Reward Top K Students", "difficulty": "Medium"}]},
    {"number": 2174, "slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium", "tags": ["Array", "Bit Manipulation", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium"}, {"slug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}]},
    {"number": 2245, "slug": "maximum-trailing-zeros-in-a-cornered-path", "title": "Maximum Trailing Zeros in a Cornered Path", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "factorial-trailing-zeroes", "title": "Factorial Trailing Zeroes", "difficulty": "Medium"}, {"slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium"}, {"slug": "abbreviating-the-product-of-a-range", "title": "Abbreviating the Product of a Range", "difficulty": "Hard"}]},
    {"number": 2257, "slug": "count-unguarded-cells-in-the-grid", "title": "Count Unguarded Cells in the Grid", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "bomb-enemy", "title": "Bomb Enemy", "difficulty": "Medium"}, {"slug": "available-captures-for-rook", "title": "Available Captures for Rook", "difficulty": "Easy"}]},
    {"number": 2258, "slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}, {"slug": "last-day-where-you-can-still-cross", "title": "Last Day Where You Can Still Cross", "difficulty": "Hard"}, {"slug": "minimum-weighted-subgraph-with-the-required-paths", "title": "Minimum Weighted Subgraph With the Required Paths", "difficulty": "Hard"}, {"slug": "maximum-number-of-points-from-grid-queries", "title": "Maximum Number of Points From Grid Queries", "difficulty": "Hard"}]},
    {"number": 2267, "slug": "check-if-there-is-a-valid-parentheses-string-path", "title": " Check if There Is a Valid Parentheses String Path", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "check-if-there-is-a-valid-path-in-a-grid", "title": "Check if There is a Valid Path in a Grid", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 2282, "slug": "number-of-people-that-can-be-seen-in-a-grid", "title": "Number of People That Can Be Seen in a Grid", "difficulty": "Medium", "tags": ["Array", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}]},
    {"number": 2290, "slug": "minimum-obstacle-removal-to-reach-corner", "title": "Minimum Obstacle Removal to Reach Corner", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "shortest-path-in-a-grid-with-obstacles-elimination", "title": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": "Hard"}]},
    {"number": 2304, "slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "paint-house", "title": "Paint House", "difficulty": "Medium"}]},
    {"number": 2319, "slug": "check-if-matrix-is-x-matrix", "title": "Check if Matrix Is X-Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy"}]},
    {"number": 2326, "slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium", "tags": ["Array", "Linked List", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium"}, {"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}]},
    {"number": 2328, "slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard"}, {"slug": "all-paths-from-source-to-target", "title": "All Paths From Source to Target", "difficulty": "Medium"}, {"slug": "maximum-strictly-increasing-cells-in-a-matrix", "title": "Maximum Strictly Increasing Cells in a Matrix", "difficulty": "Hard"}]},
    {"number": 2352, "slug": "equal-row-and-column-pairs", "title": "Equal Row and Column Pairs", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix", "Simulation"], "similar_problems": [{"slug": "delete-greatest-value-in-each-row", "title": "Delete Greatest Value in Each Row", "difficulty": "Easy"}]},
    {"number": 2371, "slug": "minimize-maximum-value-in-a-grid", "title": "Minimize Maximum Value in a Grid", "difficulty": "Hard", "tags": ["Array", "Union Find", "Graph", "Topological Sort", "Sorting", "Matrix"], "similar_problems": [{"slug": "candy", "title": "Candy", "difficulty": "Hard"}]},
    {"number": 2373, "slug": "largest-local-values-in-a-matrix", "title": "Largest Local Values in a Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2387, "slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard"}]},
    {"number": 2392, "slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard", "tags": ["Array", "Graph", "Topological Sort", "Matrix"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "find-eventual-safe-states", "title": "Find Eventual Safe States", "difficulty": "Medium"}, {"slug": "loud-and-rich", "title": "Loud and Rich", "difficulty": "Medium"}]},
    {"number": 2397, "slug": "maximum-rows-covered-by-columns", "title": "Maximum Rows Covered by Columns", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Bit Manipulation", "Matrix", "Enumeration"], "similar_problems": [{"slug": "matchsticks-to-square", "title": "Matchsticks to Square", "difficulty": "Medium"}, {"slug": "partition-to-k-equal-sum-subsets", "title": "Partition to K Equal Sum Subsets", "difficulty": "Medium"}, {"slug": "find-the-shortest-superstring", "title": "Find the Shortest Superstring", "difficulty": "Hard"}, {"slug": "smallest-sufficient-team", "title": "Smallest Sufficient Team", "difficulty": "Hard"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}]},
    {"number": 2428, "slug": "maximum-sum-of-an-hourglass", "title": "Maximum Sum of an Hourglass", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium"}]},
    {"number": 2435, "slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "cherry-pickup", "title": "Cherry Pickup", "difficulty": "Hard"}, {"slug": "shortest-path-in-binary-matrix", "title": "Shortest Path in Binary Matrix", "difficulty": "Medium"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "difficulty": "Medium"}]},
    {"number": 2482, "slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "01-matrix", "title": "01 Matrix", "difficulty": "Medium"}, {"slug": "special-positions-in-a-binary-matrix", "title": "Special Positions in a Binary Matrix", "difficulty": "Easy"}, {"slug": "remove-all-ones-with-row-and-column-flips", "title": "Remove All Ones With Row and Column Flips", "difficulty": "Medium"}, {"slug": "first-completely-painted-row-or-column", "title": "First Completely Painted Row or Column", "difficulty": "Medium"}]},
    {"number": 2500, "slug": "delete-greatest-value-in-each-row", "title": "Delete Greatest Value in Each Row", "difficulty": "Easy", "tags": ["Array", "Sorting", "Heap (Priority Queue)", "Matrix", "Simulation"], "similar_problems": [{"slug": "equal-row-and-column-pairs", "title": "Equal Row and Column Pairs", "difficulty": "Medium"}]},
    {"number": 2503, "slug": "maximum-number-of-points-from-grid-queries", "title": "Maximum Number of Points From Grid Queries", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Breadth-First Search", "Union Find", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard"}]},
    {"number": 2510, "slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 2536, "slug": "increment-submatrices-by-one", "title": "Increment Submatrices by One", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "range-sum-query-2d-mutable", "title": "Range Sum Query 2D - Mutable", "difficulty": "Medium"}, {"slug": "count-positions-on-street-with-required-brightness", "title": "Count Positions on Street With Required Brightness", "difficulty": "Medium"}]},
    {"number": 2545, "slug": "sort-the-students-by-their-kth-score", "title": "Sort the Students by Their Kth Score", "difficulty": "Medium", "tags": ["Array", "Sorting", "Matrix"], "similar_problems": [{"slug": "erect-the-fence", "title": "Erect the Fence", "difficulty": "Hard"}, {"slug": "custom-sort-string", "title": "Custom Sort String", "difficulty": "Medium"}, {"slug": "sort-the-people", "title": "Sort the People", "difficulty": "Easy"}, {"slug": "sort-threats-by-severity-and-exploitability", "title": "Sort Threats by Severity and Exploitability", "difficulty": "Medium"}]},
    {"number": 2556, "slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip", "title": "Disconnect Path in a Binary Matrix by at Most One Flip", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "number-of-submatrices-that-sum-to-target", "title": "Number of Submatrices That Sum to Target", "difficulty": "Hard"}, {"slug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid", "title": "Minimum Cost to Make at Least One Valid Path in a Grid", "difficulty": "Hard"}, {"slug": "minimum-number-of-days-to-disconnect-island", "title": "Minimum Number of Days to Disconnect Island", "difficulty": "Hard"}, {"slug": "minimum-weighted-subgraph-with-the-required-paths", "title": "Minimum Weighted Subgraph With the Required Paths", "difficulty": "Hard"}]},
    {"number": 2573, "slug": "find-the-string-with-lcp", "title": "Find the String with LCP", "difficulty": "Hard", "tags": ["Array", "String", "Dynamic Programming", "Greedy", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 2577, "slug": "minimum-time-to-visit-a-cell-in-a-grid", "title": "Minimum Time to Visit a Cell In a Grid", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "find-minimum-time-to-reach-last-room-i", "title": "Find Minimum Time to Reach Last Room I", "difficulty": "Medium"}, {"slug": "find-minimum-time-to-reach-last-room-ii", "title": "Find Minimum Time to Reach Last Room II", "difficulty": "Medium"}]},
    {"number": 2596, "slug": "check-knight-tour-configuration", "title": "Check Knight Tour Configuration", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix", "Simulation"], "similar_problems": [{"slug": "minimum-knight-moves", "title": "Minimum Knight Moves", "difficulty": "Medium"}, {"slug": "maximum-number-of-moves-to-kill-all-pawns", "title": "Maximum Number of Moves to Kill All Pawns", "difficulty": "Hard"}]},
    {"number": 2614, "slug": "prime-in-diagonal", "title": "Prime In Diagonal", "difficulty": "Easy", "tags": ["Array", "Math", "Matrix", "Number Theory"], "similar_problems": []},
    {"number": 2617, "slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}]},
    {"number": 2639, "slug": "find-the-width-of-columns-of-a-grid", "title": "Find the Width of Columns of a Grid", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "next-greater-numerically-balanced-number", "title": "Next Greater Numerically Balanced Number", "difficulty": "Medium"}]},
    {"number": 2643, "slug": "row-with-maximum-ones", "title": "Row With Maximum Ones", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2658, "slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}]},
    {"number": 2661, "slug": "first-completely-painted-row-or-column", "title": "First Completely Painted Row or Column", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}, {"slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium"}]},
    {"number": 2664, "slug": "the-knights-tour", "title": "The Knight’s Tour", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Matrix"], "similar_problems": []},
    {"number": 2679, "slug": "sum-in-a-matrix", "title": "Sum in a Matrix", "difficulty": "Medium", "tags": ["Array", "Sorting", "Heap (Priority Queue)", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 2684, "slug": "maximum-number-of-moves-in-a-grid", "title": "Maximum Number of Moves in a Grid", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 2711, "slug": "difference-of-number-of-distinct-values-on-diagonals", "title": "Difference of Number of Distinct Values on Diagonals", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": []},
    {"number": 2713, "slug": "maximum-strictly-increasing-cells-in-a-matrix", "title": "Maximum Strictly Increasing Cells in a Matrix", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Memoization", "Sorting", "Matrix", "Ordered Set"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 2732, "slug": "find-a-good-subset-of-the-matrix", "title": "Find a Good Subset of the Matrix", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Bit Manipulation", "Matrix"], "similar_problems": []},
    {"number": 2812, "slug": "find-the-safest-path-in-a-grid", "title": "Find the Safest Path in a Grid", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 2814, "slug": "minimum-time-takes-to-reach-destination-without-drowning", "title": "Minimum Time Takes to Reach Destination Without Drowning", "difficulty": "Hard", "tags": ["Array", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 2850, "slug": "minimum-moves-to-spread-stones-over-grid", "title": "Minimum Moves to Spread Stones Over Grid", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "minimum-number-of-operations-to-move-all-balls-to-each-box", "title": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-x-and-y-equal", "title": "Minimum Number of Operations to Make X and Y Equal", "difficulty": "Medium"}]},
    {"number": 2852, "slug": "sum-of-remoteness-of-all-cells", "title": "Sum of Remoteness of All Cells", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": []},
    {"number": 2906, "slug": "construct-product-matrix", "title": "Construct Product Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}]},
    {"number": 2923, "slug": "find-champion-i", "title": "Find Champion I", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2931, "slug": "maximum-spending-after-buying-items", "title": "Maximum Spending After Buying Items", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "maximum-points-you-can-obtain-from-cards", "title": "Maximum Points You Can Obtain from Cards", "difficulty": "Medium"}, {"slug": "maximum-score-from-performing-multiplication-operations", "title": "Maximum Score from Performing Multiplication Operations", "difficulty": "Hard"}]},
    {"number": 2946, "slug": "matrix-similarity-after-cyclic-shifts", "title": "Matrix Similarity After Cyclic Shifts", "difficulty": "Easy", "tags": ["Array", "Math", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 2965, "slug": "find-missing-and-repeated-values", "title": "Find Missing and Repeated Values", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Matrix"], "similar_problems": []},
    {"number": 3030, "slug": "find-the-grid-of-region-average", "title": "Find the Grid of Region Average", "difficulty": "Medium", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium"}, {"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 3033, "slug": "modify-the-matrix", "title": "Modify the Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 3044, "slug": "most-frequent-prime", "title": "Most Frequent Prime", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Matrix", "Counting", "Enumeration", "Number Theory"], "similar_problems": []},
    {"number": 3070, "slug": "count-submatrices-with-top-left-element-and-sum-less-than-k", "title": "Count Submatrices with Top-Left Element and Sum Less Than k", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": []},
    {"number": 3071, "slug": "minimum-operations-to-write-the-letter-y-on-a-grid", "title": "Minimum Operations to Write the Letter Y on a Grid", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix", "Counting"], "similar_problems": []},
    {"number": 3078, "slug": "match-alphanumerical-pattern-in-matrix-i", "title": "Match Alphanumerical Pattern in Matrix I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Matrix"], "similar_problems": []},
    {"number": 3122, "slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "candy", "title": "Candy", "difficulty": "Hard"}, {"slug": "distribute-candies", "title": "Distribute Candies", "difficulty": "Easy"}, {"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}]},
    {"number": 3127, "slug": "make-a-square-with-the-same-color", "title": "Make a Square with the Same Color", "difficulty": "Easy", "tags": ["Array", "Matrix", "Enumeration"], "similar_problems": []},
    {"number": 3142, "slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "candy", "title": "Candy", "difficulty": "Hard"}, {"slug": "distribute-candies", "title": "Distribute Candies", "difficulty": "Easy"}, {"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}]},
    {"number": 3148, "slug": "maximum-difference-score-in-a-grid", "title": "Maximum Difference Score in a Grid", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "maximum-score-from-grid-operations", "title": "Maximum Score From Grid Operations", "difficulty": "Hard"}]},
    {"number": 3195, "slug": "find-the-minimum-area-to-cover-all-ones-i", "title": "Find the Minimum Area to Cover All Ones I", "difficulty": "Medium", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "smallest-rectangle-enclosing-black-pixels", "title": "Smallest Rectangle Enclosing Black Pixels", "difficulty": "Hard"}]},
    {"number": 3197, "slug": "find-the-minimum-area-to-cover-all-ones-ii", "title": "Find the Minimum Area to Cover All Ones II", "difficulty": "Hard", "tags": ["Array", "Matrix", "Enumeration"], "similar_problems": [{"slug": "smallest-rectangle-enclosing-black-pixels", "title": "Smallest Rectangle Enclosing Black Pixels", "difficulty": "Hard"}]},
    {"number": 3212, "slug": "count-submatrices-with-equal-frequency-of-x-and-y", "title": "Count Submatrices With Equal Frequency of X and Y", "difficulty": "Medium", "tags": ["Array", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "maximum-equal-frequency", "title": "Maximum Equal Frequency", "difficulty": "Hard"}, {"slug": "count-submatrices-with-all-ones", "title": "Count Submatrices With All Ones", "difficulty": "Medium"}]},
    {"number": 3225, "slug": "maximum-score-from-grid-operations", "title": "Maximum Score From Grid Operations", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix", "Prefix Sum"], "similar_problems": [{"slug": "maximum-difference-score-in-a-grid", "title": "Maximum Difference Score in a Grid", "difficulty": "Medium"}]},
    {"number": 3239, "slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i", "title": "Minimum Number of Flips to Make Binary Grid Palindromic I", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Matrix"], "similar_problems": [{"slug": "minimum-number-of-moves-to-make-palindrome", "title": "Minimum Number of Moves to Make Palindrome", "difficulty": "Hard"}]},
    {"number": 3240, "slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii", "title": "Minimum Number of Flips to Make Binary Grid Palindromic II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Matrix"], "similar_problems": []},
    {"number": 3242, "slug": "design-neighbor-sum-service", "title": "Design Neighbor Sum Service", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Design", "Matrix", "Simulation"], "similar_problems": [{"slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium"}, {"slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium"}]},
    {"number": 3256, "slug": "maximum-value-sum-by-placing-three-rooks-i", "title": "Maximum Value Sum by Placing Three Rooks I", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix", "Enumeration"], "similar_problems": [{"slug": "available-captures-for-rook", "title": "Available Captures for Rook", "difficulty": "Easy"}]},
    {"number": 3257, "slug": "maximum-value-sum-by-placing-three-rooks-ii", "title": "Maximum Value Sum by Placing Three Rooks II", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix", "Enumeration"], "similar_problems": [{"slug": "available-captures-for-rook", "title": "Available Captures for Rook", "difficulty": "Easy"}]},
    {"number": 3276, "slug": "select-cells-in-grid-with-maximum-score", "title": "Select Cells in Grid With Maximum Score", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Matrix", "Bitmask"], "similar_problems": []},
    {"number": 3286, "slug": "find-a-safe-walk-through-a-grid", "title": "Find a Safe Walk Through a Grid", "difficulty": "Medium", "tags": ["Array", "Breadth-First Search", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "shortest-path-in-a-grid-with-obstacles-elimination", "title": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": "Hard"}]},
    {"number": 3311, "slug": "construct-2d-grid-matching-graph-layout", "title": "Construct 2D Grid Matching Graph Layout", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Graph", "Matrix"], "similar_problems": []},
    {"number": 3332, "slug": "maximum-points-tourist-can-earn", "title": "Maximum Points Tourist Can Earn", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 3341, "slug": "find-minimum-time-to-reach-last-room-i", "title": "Find Minimum Time to Reach Last Room I", "difficulty": "Medium", "tags": ["Array", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "minimum-cost-to-reach-destination-in-time", "title": "Minimum Cost to Reach Destination in Time", "difficulty": "Hard"}, {"slug": "minimum-time-to-visit-a-cell-in-a-grid", "title": "Minimum Time to Visit a Cell In a Grid", "difficulty": "Hard"}]},
    {"number": 3342, "slug": "find-minimum-time-to-reach-last-room-ii", "title": "Find Minimum Time to Reach Last Room II", "difficulty": "Medium", "tags": ["Array", "Graph", "Heap (Priority Queue)", "Matrix", "Shortest Path"], "similar_problems": [{"slug": "minimum-cost-to-reach-destination-in-time", "title": "Minimum Cost to Reach Destination in Time", "difficulty": "Hard"}, {"slug": "minimum-time-to-visit-a-cell-in-a-grid", "title": "Minimum Time to Visit a Cell In a Grid", "difficulty": "Hard"}]},
    {"number": 3359, "slug": "find-sorted-submatrices-with-maximum-element-at-most-k", "title": "Find Sorted Submatrices With Maximum Element at Most K", "difficulty": "Hard", "tags": ["Array", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}]},
    {"number": 3363, "slug": "find-the-maximum-number-of-fruits-collected", "title": "Find the Maximum Number of Fruits Collected", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 3391, "slug": "design-a-3d-binary-matrix-with-efficient-layer-tracking", "title": "Design a 3D Binary Matrix with Efficient Layer Tracking", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Design", "Heap (Priority Queue)", "Matrix", "Ordered Set"], "similar_problems": []},
    {"number": 3393, "slug": "count-paths-with-the-given-xor-value", "title": "Count Paths With the Given XOR Value", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Matrix"], "similar_problems": [{"slug": "count-pairs-with-xor-in-a-range", "title": "Count Pairs With XOR in a Range", "difficulty": "Hard"}]},
    {"number": 3402, "slug": "minimum-operations-to-make-columns-strictly-increasing", "title": "Minimum Operations to Make Columns Strictly Increasing", "difficulty": "Easy", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 3417, "slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"}, {"slug": "longest-zigzag-path-in-a-binary-tree", "title": "Longest ZigZag Path in a Binary Tree", "difficulty": "Medium"}]},
    {"number": 3418, "slug": "maximum-amount-of-money-robot-can-earn", "title": "Maximum Amount of Money Robot Can Earn", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 3446, "slug": "sort-matrix-by-diagonals", "title": "Sort Matrix by Diagonals", "difficulty": "Medium", "tags": ["Array", "Sorting", "Matrix"], "similar_problems": [{"slug": "sort-the-matrix-diagonally", "title": "Sort the Matrix Diagonally", "difficulty": "Medium"}]},
    {"number": 3459, "slug": "length-of-longest-v-shaped-diagonal-segment", "title": "Length of Longest V-Shaped Diagonal Segment", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Memoization", "Matrix"], "similar_problems": []},
    {"number": 3462, "slug": "maximum-sum-with-at-most-k-elements", "title": "Maximum Sum With at Most K Elements", "difficulty": "Medium", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 3484, "slug": "design-spreadsheet", "title": "Design Spreadsheet", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Design", "Matrix"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}]},
    {"number": 3529, "slug": "count-cells-in-overlapping-horizontal-and-vertical-substrings", "title": "Count Cells in Overlapping Horizontal and Vertical Substrings", "difficulty": "Medium", "tags": ["Array", "String", "Rolling Hash", "String Matching", "Matrix", "Hash Function"], "similar_problems": []},
    {"number": 3537, "slug": "fill-a-special-grid", "title": "Fill a Special Grid", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Matrix"], "similar_problems": []},
    {"number": 3546, "slug": "equal-sum-grid-partition-i", "title": "Equal Sum Grid Partition I", "difficulty": "Medium", "tags": ["Array", "Matrix", "Enumeration", "Prefix Sum"], "similar_problems": []},
    {"number": 3548, "slug": "equal-sum-grid-partition-ii", "title": "Equal Sum Grid Partition II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Matrix", "Enumeration", "Prefix Sum"], "similar_problems": []},
    {"number": 3552, "slug": "grid-teleportation-traversal", "title": "Grid Teleportation Traversal", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 3565, "slug": "sequential-grid-path-cover", "title": "Sequential Grid Path Cover", "difficulty": "Medium", "tags": ["Array", "Recursion", "Matrix"], "similar_problems": []},
    {"number": 3567, "slug": "minimum-absolute-difference-in-sliding-submatrix", "title": "Minimum Absolute Difference in Sliding Submatrix", "difficulty": "Medium", "tags": ["Array", "Sorting", "Matrix"], "similar_problems": []},
    {"number": 3568, "slug": "minimum-moves-to-clean-the-classroom", "title": "Minimum Moves to Clean the Classroom", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Bit Manipulation", "Breadth-First Search", "Matrix"], "similar_problems": []},
    {"number": 3603, "slug": "minimum-cost-path-with-alternating-directions-ii", "title": "Minimum Cost Path with Alternating Directions II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": []},
    {"number": 3619, "slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium"}]},
    {"number": 3643, "slug": "flip-square-submatrix-vertically", "title": "Flip Square Submatrix Vertically", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Matrix"], "similar_problems": []},
    {"number": 3651, "slug": "minimum-cost-path-with-teleportations", "title": "Minimum Cost Path with Teleportations", "difficulty": "Hard", "tags": [], "similar_problems": []},
    {"number": 3665, "slug": "twisted-mirror-path-count", "title": "Twisted Mirror Path Count", "difficulty": "Medium", "tags": [], "similar_problems": []}
]