[
    {"number": 207, "slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "graph-valid-tree", "title": "Graph Valid Tree", "difficulty": "Medium"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}]},
    {"number": 210, "slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "sequence-reconstruction", "title": "Sequence Reconstruction", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "parallel-courses", "title": "Parallel Courses", "difficulty": "Medium"}, {"slug": "find-all-possible-recipes-from-given-supplies", "title": "Find All Possible Recipes from Given Supplies", "difficulty": "Medium"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 269, "slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}]},
    {"number": 310, "slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "collect-coins-in-a-tree", "title": "Collect Coins in a Tree", "difficulty": "Hard"}, {"slug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network", "title": "Count Pairs of Connectable Servers in a Weighted Tree Network", "difficulty": "Medium"}, {"slug": "find-minimum-diameter-after-merging-two-trees", "title": "Find Minimum Diameter After Merging Two Trees", "difficulty": "Hard"}]},
    {"number": 329, "slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 444, "slug": "sequence-reconstruction", "title": "Sequence Reconstruction", "difficulty": "Medium", "tags": ["Array", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}]},
    {"number": 631, "slug": "design-excel-sum-formula", "title": "Design Excel Sum Formula", "difficulty": "Hard", "tags": ["Array", "Hash Table", "String", "Graph", "Design", "Topological Sort", "Matrix"], "similar_problems": []},
    {"number": 802, "slug": "find-eventual-safe-states", "title": "Find Eventual Safe States", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}]},
    {"number": 851, "slug": "loud-and-rich", "title": "Loud and Rich", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}]},
    {"number": 913, "slug": "cat-and-mouse", "title": "Cat and Mouse", "difficulty": "Hard", "tags": ["Math", "Dynamic Programming", "Graph", "Topological Sort", "Memoization", "Game Theory"], "similar_problems": [{"slug": "cat-and-mouse-ii", "title": "Cat and Mouse II", "difficulty": "Hard"}]},
    {"number": 1059, "slug": "all-paths-from-source-lead-to-destination", "title": "All Paths from Source Lead to Destination", "difficulty": "Medium", "tags": ["Graph", "Topological Sort"], "similar_problems": []},
    {"number": 1136, "slug": "parallel-courses", "title": "Parallel Courses", "difficulty": "Medium", "tags": ["Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "parallel-courses-ii", "title": "Parallel Courses II", "difficulty": "Hard"}, {"slug": "parallel-courses-iii", "title": "Parallel Courses III", "difficulty": "Hard"}]},
    {"number": 1203, "slug": "sort-items-by-groups-respecting-dependencies", "title": "Sort Items by Groups Respecting Dependencies", "difficulty": "Hard", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": []},
    {"number": 1245, "slug": "tree-diameter", "title": "Tree Diameter", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "count-subtrees-with-max-distance-between-cities", "title": "Count Subtrees With Max Distance Between Cities", "difficulty": "Hard"}, {"slug": "find-minimum-diameter-after-merging-two-trees", "title": "Find Minimum Diameter After Merging Two Trees", "difficulty": "Hard"}]},
    {"number": 1462, "slug": "course-schedule-iv", "title": "Course Schedule IV", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": []},
    {"number": 1591, "slug": "strange-printer-ii", "title": "Strange Printer II", "difficulty": "Hard", "tags": ["Array", "Graph", "Topological Sort", "Matrix"], "similar_problems": [{"slug": "strange-printer", "title": "Strange Printer", "difficulty": "Hard"}, {"slug": "longest-cycle-in-a-graph", "title": "Longest Cycle in a Graph", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 1632, "slug": "rank-transform-of-a-matrix", "title": "Rank Transform of a Matrix", "difficulty": "Hard", "tags": ["Array", "Union Find", "Graph", "Topological Sort", "Sorting", "Matrix"], "similar_problems": [{"slug": "rank-transform-of-an-array", "title": "Rank Transform of an Array", "difficulty": "Easy"}, {"slug": "gcd-sort-of-an-array", "title": "GCD Sort of an Array", "difficulty": "Hard"}]},
    {"number": 1728, "slug": "cat-and-mouse-ii", "title": "Cat and Mouse II", "difficulty": "Hard", "tags": ["Array", "Math", "Dynamic Programming", "Graph", "Topological Sort", "Memoization", "Matrix", "Game Theory"], "similar_problems": [{"slug": "escape-the-ghosts", "title": "Escape The Ghosts", "difficulty": "Medium"}, {"slug": "cat-and-mouse", "title": "Cat and Mouse", "difficulty": "Hard"}]},
    {"number": 1786, "slug": "number-of-restricted-paths-from-first-to-last-node", "title": "Number of Restricted Paths From First to Last Node", "difficulty": "Medium", "tags": ["Dynamic Programming", "Graph", "Topological Sort", "Heap (Priority Queue)", "Shortest Path"], "similar_problems": [{"slug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph", "title": "All Ancestors of a Node in a Directed Acyclic Graph", "difficulty": "Medium"}, {"slug": "design-graph-with-shortest-path-calculator", "title": "Design Graph With Shortest Path Calculator", "difficulty": "Hard"}, {"slug": "minimum-cost-of-a-path-with-special-roads", "title": "Minimum Cost of a Path With Special Roads", "difficulty": "Medium"}]},
    {"number": 1857, "slug": "largest-color-value-in-a-directed-graph", "title": "Largest Color Value in a Directed Graph", "difficulty": "Hard", "tags": ["Hash Table", "Dynamic Programming", "Graph", "Topological Sort", "Memoization", "Counting"], "similar_problems": []},
    {"number": 1916, "slug": "count-ways-to-build-rooms-in-an-ant-colony", "title": "Count Ways to Build Rooms in an Ant Colony", "difficulty": "Hard", "tags": ["Math", "Dynamic Programming", "Tree", "Graph", "Topological Sort", "Combinatorics"], "similar_problems": [{"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}, {"slug": "count-the-number-of-good-subsequences", "title": "Count the Number of Good Subsequences", "difficulty": "Medium"}]},
    {"number": 1976, "slug": "number-of-ways-to-arrive-at-destination", "title": "Number of Ways to Arrive at Destination", "difficulty": "Medium", "tags": ["Dynamic Programming", "Graph", "Topological Sort", "Shortest Path"], "similar_problems": [{"slug": "all-paths-from-source-to-target", "title": "All Paths From Source to Target", "difficulty": "Medium"}, {"slug": "path-with-maximum-probability", "title": "Path with Maximum Probability", "difficulty": "Medium"}, {"slug": "second-minimum-time-to-reach-destination", "title": "Second Minimum Time to Reach Destination", "difficulty": "Hard"}]},
    {"number": 2050, "slug": "parallel-courses-iii", "title": "Parallel Courses III", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "parallel-courses", "title": "Parallel Courses", "difficulty": "Medium"}, {"slug": "single-threaded-cpu", "title": "Single-Threaded CPU", "difficulty": "Medium"}, {"slug": "process-tasks-using-servers", "title": "Process Tasks Using Servers", "difficulty": "Medium"}, {"slug": "maximum-employees-to-be-invited-to-a-meeting", "title": "Maximum Employees to Be Invited to a Meeting", "difficulty": "Hard"}]},
    {"number": 2115, "slug": "find-all-possible-recipes-from-given-supplies", "title": "Find All Possible Recipes from Given Supplies", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}]},
    {"number": 2127, "slug": "maximum-employees-to-be-invited-to-a-meeting", "title": "Maximum Employees to Be Invited to a Meeting", "difficulty": "Hard", "tags": ["Depth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "redundant-connection", "title": "Redundant Connection", "difficulty": "Medium"}, {"slug": "parallel-courses-iii", "title": "Parallel Courses III", "difficulty": "Hard"}, {"slug": "process-restricted-friend-requests", "title": "Process Restricted Friend Requests", "difficulty": "Hard"}]},
    {"number": 2192, "slug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph", "title": "All Ancestors of a Node in a Directed Acyclic Graph", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "number-of-restricted-paths-from-first-to-last-node", "title": "Number of Restricted Paths From First to Last Node", "difficulty": "Medium"}]},
    {"number": 2246, "slug": "longest-path-with-different-adjacent-characters", "title": "Longest Path With Different Adjacent Characters", "difficulty": "Hard", "tags": ["Array", "String", "Tree", "Depth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}, {"slug": "choose-edges-to-maximize-score-in-a-tree", "title": "Choose Edges to Maximize Score in a Tree", "difficulty": "Medium"}]},
    {"number": 2328, "slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard"}, {"slug": "all-paths-from-source-to-target", "title": "All Paths From Source to Target", "difficulty": "Medium"}, {"slug": "maximum-strictly-increasing-cells-in-a-matrix", "title": "Maximum Strictly Increasing Cells in a Matrix", "difficulty": "Hard"}]},
    {"number": 2360, "slug": "longest-cycle-in-a-graph", "title": "Longest Cycle in a Graph", "difficulty": "Hard", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "strange-printer-ii", "title": "Strange Printer II", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level", "title": "Minimum Number of Operations to Sort a Binary Tree by Level", "difficulty": "Medium"}, {"slug": "shortest-cycle-in-a-graph", "title": "Shortest Cycle in a Graph", "difficulty": "Hard"}]},
    {"number": 2371, "slug": "minimize-maximum-value-in-a-grid", "title": "Minimize Maximum Value in a Grid", "difficulty": "Hard", "tags": ["Array", "Union Find", "Graph", "Topological Sort", "Sorting", "Matrix"], "similar_problems": [{"slug": "candy", "title": "Candy", "difficulty": "Hard"}]},
    {"number": 2392, "slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard", "tags": ["Array", "Graph", "Topological Sort", "Matrix"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "find-eventual-safe-states", "title": "Find Eventual Safe States", "difficulty": "Medium"}, {"slug": "loud-and-rich", "title": "Loud and Rich", "difficulty": "Medium"}]},
    {"number": 2603, "slug": "collect-coins-in-a-tree", "title": "Collect Coins in a Tree", "difficulty": "Hard", "tags": ["Array", "Tree", "Graph", "Topological Sort"], "similar_problems": [{"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "sum-of-distances-in-tree", "title": "Sum of Distances in Tree", "difficulty": "Hard"}, {"slug": "maximum-score-after-applying-operations-on-a-tree", "title": "Maximum Score After Applying Operations on a Tree", "difficulty": "Medium"}, {"slug": "find-number-of-coins-to-place-in-tree-nodes", "title": "Find Number of Coins to Place in Tree Nodes", "difficulty": "Hard"}]},
    {"number": 3383, "slug": "minimum-runes-to-add-to-cast-spell", "title": "Minimum Runes to Add to Cast Spell", "difficulty": "Hard", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Topological Sort"], "similar_problems": [{"slug": "minimum-number-of-days-to-disconnect-island", "title": "Minimum Number of Days to Disconnect Island", "difficulty": "Hard"}, {"slug": "minimum-edge-weight-equilibrium-queries-in-a-tree", "title": "Minimum Edge Weight Equilibrium Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 3435, "slug": "frequencies-of-shortest-supersequences", "title": "Frequencies of Shortest Supersequences", "difficulty": "Hard", "tags": ["Array", "String", "Bit Manipulation", "Graph", "Topological Sort", "Enumeration"], "similar_problems": []},
    {"number": 3481, "slug": "apply-substitutions", "title": "Apply Substitutions", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "evaluate-the-bracket-pairs-of-a-string", "title": "Evaluate the Bracket Pairs of a String", "difficulty": "Medium"}]},
    {"number": 3530, "slug": "maximum-profit-from-valid-topological-order-in-dag", "title": "Maximum Profit from Valid Topological Order in DAG", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Graph", "Topological Sort", "Bitmask"], "similar_problems": []},
    {"number": 3620, "slug": "network-recovery-pathways", "title": "Network Recovery Pathways", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Graph", "Topological Sort", "Heap (Priority Queue)", "Shortest Path"], "similar_problems": []}
]