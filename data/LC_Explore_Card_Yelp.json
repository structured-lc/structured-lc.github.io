[
    {"number": 14, "slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}, {"slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium"}, {"slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard"}, {"slug": "longest-common-prefix-after-at-most-one-removal", "title": "Longest Common Prefix After at Most One Removal", "difficulty": "Medium"}]},
    {"number": 15, "slug": "3sum", "title": "3Sum", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "3sum-closest", "title": "3Sum Closest", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-ii", "title": "Minimum Sum of Mountain Triplets II", "difficulty": "Medium"}]},
    {"number": 49, "slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}, {"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}]},
    {"number": 54, "slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 88, "slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 118, "slug": "pascals-triangle", "title": "Pascal's Triangle", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "pascals-triangle-ii", "title": "Pascal's Triangle II", "difficulty": "Easy"}, {"slug": "check-if-digits-are-equal-in-string-after-operations-ii", "title": "Check If Digits Are Equal in String After Operations II", "difficulty": "Hard"}]},
    {"number": 227, "slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium", "tags": ["Math", "String", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}]},
    {"number": 238, "slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "minimum-difference-in-sums-after-removal-of-elements", "title": "Minimum Difference in Sums After Removal of Elements", "difficulty": "Hard"}, {"slug": "construct-product-matrix", "title": "Construct Product Matrix", "difficulty": "Medium"}, {"slug": "find-sum-of-array-product-of-magical-sequences", "title": "Find Sum of Array Product of Magical Sequences", "difficulty": "Hard"}]},
    {"number": 564, "slug": "find-the-closest-palindrome", "title": "Find the Closest Palindrome", "difficulty": "Hard", "tags": ["Math", "String"], "similar_problems": [{"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}, {"slug": "next-palindrome-using-same-digits", "title": "Next Palindrome Using Same Digits", "difficulty": "Hard"}, {"slug": "find-the-count-of-good-integers", "title": "Find the Count of Good Integers", "difficulty": "Hard"}, {"slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard"}]},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 599, "slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy"}]},
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 207, "slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium"}, {"slug": "graph-valid-tree", "title": "Graph Valid Tree", "difficulty": "Medium"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}]},
    {"number": 332, "slug": "reconstruct-itinerary", "title": "Reconstruct Itinerary", "difficulty": "Hard", "tags": ["Depth-First Search", "Graph", "Eulerian Circuit"], "similar_problems": [{"slug": "longest-common-subpath", "title": "Longest Common Subpath", "difficulty": "Hard"}, {"slug": "valid-arrangement-of-pairs", "title": "Valid Arrangement of Pairs", "difficulty": "Hard"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 22, "slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 39, "slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "combination-sum-ii", "title": "Combination Sum II", "difficulty": "Medium"}, {"slug": "combinations", "title": "Combinations", "difficulty": "Medium"}, {"slug": "combination-sum-iii", "title": "Combination Sum III", "difficulty": "Medium"}, {"slug": "factor-combinations", "title": "Factor Combinations", "difficulty": "Medium"}, {"slug": "combination-sum-iv", "title": "Combination Sum IV", "difficulty": "Medium"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 10, "slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}, {"slug": "count-ways-to-group-overlapping-ranges", "title": "Count Ways to Group Overlapping Ranges", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}, {"slug": "count-days-without-meetings", "title": "Count Days Without Meetings", "difficulty": "Medium"}, {"slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium"}]},
    {"number": 252, "slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 253, "slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "car-pooling", "title": "Car Pooling", "difficulty": "Medium"}, {"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 528, "slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Prefix Sum", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}, {"slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium"}]},
    {"number": 239, "slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard", "tags": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}, {"slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "paint-house-ii", "title": "Paint House II", "difficulty": "Hard"}, {"slug": "jump-game-vi", "title": "Jump Game VI", "difficulty": "Medium"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "maximal-score-after-applying-k-operations", "title": "Maximal Score After Applying K Operations", "difficulty": "Medium"}]},
    {"number": 347, "slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting", "Quickselect"], "similar_problems": [{"slug": "word-frequency", "title": "Word Frequency", "difficulty": "Medium"}, {"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "split-array-into-consecutive-subsequences", "title": "Split Array into Consecutive Subsequences", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "sort-features-by-popularity", "title": "Sort Features by Popularity", "difficulty": "Medium"}, {"slug": "sender-with-largest-word-count", "title": "Sender With Largest Word Count", "difficulty": "Medium"}, {"slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy"}, {"slug": "linked-list-frequency", "title": "Linked List Frequency", "difficulty": "Easy"}]},
    {"number": 692, "slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Trie", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "sort-features-by-popularity", "title": "Sort Features by Popularity", "difficulty": "Medium"}, {"slug": "sender-with-largest-word-count", "title": "Sender With Largest Word Count", "difficulty": "Medium"}, {"slug": "maximum-number-of-pairs-in-array", "title": "Maximum Number of Pairs in Array", "difficulty": "Easy"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "sum-of-beauty-in-the-array", "title": "Sum of Beauty in the Array", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-v", "title": "Best Time to Buy and Sell Stock V", "difficulty": "Medium"}]},
    {"number": 139, "slug": "word-break", "title": "Word Break", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie", "Memoization"], "similar_problems": [{"slug": "word-break-ii", "title": "Word Break II", "difficulty": "Hard"}, {"slug": "extra-characters-in-a-string", "title": "Extra Characters in a String", "difficulty": "Medium"}]},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 221, "slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}, {"slug": "largest-plus-sign", "title": "Largest Plus Sign", "difficulty": "Medium"}, {"slug": "count-artifacts-that-can-be-extracted", "title": "Count Artifacts That Can Be Extracted", "difficulty": "Medium"}, {"slug": "stamping-the-grid", "title": "Stamping the Grid", "difficulty": "Hard"}, {"slug": "maximize-area-of-square-hole-in-grid", "title": "Maximize Area of Square Hole in Grid", "difficulty": "Medium"}]},
    {"number": 418, "slug": "sentence-screen-fitting", "title": "Sentence Screen Fitting", "difficulty": "Medium", "tags": ["Array", "String", "Dynamic Programming"], "similar_problems": [{"slug": "minimum-cost-to-separate-sentence-into-rows", "title": "Minimum Cost to Separate Sentence Into Rows", "difficulty": "Medium"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 359, "slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy", "tags": ["Hash Table", "Design", "Data Stream"], "similar_problems": [{"slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium"}]},
    {"number": 380, "slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "similar_problems": [{"slug": "insert-delete-getrandom-o1-duplicates-allowed", "title": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": "Hard"}]},
    {"number": 593, "slug": "valid-square", "title": "Valid Square", "difficulty": "Medium", "tags": ["Math", "Geometry"], "similar_problems": []},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard", "tags": ["Math", "String", "Recursion"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]}
]