[
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 10, "slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 24, "slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard"}, {"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}]},
    {"number": 25, "slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium"}, {"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}]},
    {"number": 44, "slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"], "similar_problems": [{"slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard"}, {"slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy"}]},
    {"number": 50, "slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"}, {"slug": "super-pow", "title": "Super Pow", "difficulty": "Medium"}, {"slug": "count-collisions-of-monkeys-on-a-polygon", "title": "Count Collisions of Monkeys on a Polygon", "difficulty": "Medium"}]},
    {"number": 60, "slug": "permutation-sequence", "title": "Permutation Sequence", "difficulty": "Hard", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}, {"slug": "permutations", "title": "Permutations", "difficulty": "Medium"}]},
    {"number": 143, "slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 203, "slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}, {"slug": "convert-doubly-linked-list-to-array-i", "title": "Convert Doubly Linked List to Array I", "difficulty": "Easy"}, {"slug": "convert-doubly-linked-list-to-array-ii", "title": "Convert Doubly Linked List to Array II", "difficulty": "Medium"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 224, "slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard", "tags": ["Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}, {"slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 231, "slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy"}, {"slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy"}]},
    {"number": 233, "slug": "number-of-digit-one", "title": "Number of Digit One", "difficulty": "Hard", "tags": ["Math", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "factorial-trailing-zeroes", "title": "Factorial Trailing Zeroes", "difficulty": "Medium"}, {"slug": "digit-count-in-range", "title": "Digit Count in Range", "difficulty": "Hard"}]},
    {"number": 234, "slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 241, "slug": "different-ways-to-add-parentheses", "title": "Different Ways to Add Parentheses", "difficulty": "Medium", "tags": ["Math", "String", "Dynamic Programming", "Recursion", "Memoization"], "similar_problems": [{"slug": "unique-binary-search-trees-ii", "title": "Unique Binary Search Trees II", "difficulty": "Medium"}, {"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}, {"slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"}, {"slug": "minimize-result-by-adding-parentheses-to-expression", "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium"}]},
    {"number": 247, "slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium", "tags": ["Array", "String", "Recursion"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "sum-of-k-mirror-numbers", "title": "Sum of k-Mirror Numbers", "difficulty": "Hard"}]},
    {"number": 248, "slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard", "tags": ["Array", "String", "Recursion"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium"}]},
    {"number": 255, "slug": "verify-preorder-sequence-in-binary-search-tree", "title": "Verify Preorder Sequence in Binary Search Tree", "difficulty": "Medium", "tags": ["Array", "Stack", "Tree", "Binary Search Tree", "Recursion", "Monotonic Stack", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}]},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard", "tags": ["Math", "String", "Recursion"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 326, "slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy"}, {"slug": "check-if-number-is-a-sum-of-powers-of-three", "title": "Check if Number is a Sum of Powers of Three", "difficulty": "Medium"}]},
    {"number": 342, "slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": [{"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy"}]},
    {"number": 390, "slug": "elimination-game", "title": "Elimination Game", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "min-max-game", "title": "Min Max Game", "difficulty": "Easy"}]},
    {"number": 394, "slug": "decode-string", "title": "Decode String", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 439, "slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"}, {"slug": "remove-comments", "title": "Remove Comments", "difficulty": "Medium"}, {"slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"}]},
    {"number": 486, "slug": "predict-the-winner", "title": "Predict the Winner", "difficulty": "Medium", "tags": ["Array", "Math", "Dynamic Programming", "Recursion", "Game Theory"], "similar_problems": [{"slug": "can-i-win", "title": "Can I Win", "difficulty": "Medium"}, {"slug": "find-the-winning-player-in-coin-game", "title": "Find the Winning Player in Coin Game", "difficulty": "Easy"}, {"slug": "find-the-number-of-winning-players", "title": "Find the Number of Winning Players", "difficulty": "Easy"}, {"slug": "count-the-number-of-winning-sequences", "title": "Count The Number of Winning Sequences", "difficulty": "Hard"}]},
    {"number": 509, "slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Recursion", "Memoization"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "split-array-into-fibonacci-sequence", "title": "Split Array into Fibonacci Sequence", "difficulty": "Medium"}, {"slug": "length-of-longest-fibonacci-subsequence", "title": "Length of Longest Fibonacci Subsequence", "difficulty": "Medium"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}]},
    {"number": 544, "slug": "output-contest-matches", "title": "Output Contest Matches", "difficulty": "Medium", "tags": ["String", "Recursion", "Simulation"], "similar_problems": []},
    {"number": 736, "slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard", "tags": ["Hash Table", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard"}]},
    {"number": 761, "slug": "special-binary-string", "title": "Special Binary String", "difficulty": "Hard", "tags": ["String", "Recursion"], "similar_problems": [{"slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium"}, {"slug": "number-of-good-binary-strings", "title": "Number of Good Binary Strings", "difficulty": "Medium"}]},
    {"number": 770, "slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard", "tags": ["Hash Table", "Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"}, {"slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"}]},
    {"number": 772, "slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard", "tags": ["Math", "String", "Stack", "Recursion"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"}, {"slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard"}, {"slug": "build-binary-expression-tree-from-infix-expression", "title": "Build Binary Expression Tree From Infix Expression", "difficulty": "Hard"}]},
    {"number": 776, "slug": "split-bst", "title": "Split BST", "difficulty": "Medium", "tags": ["Tree", "Binary Search Tree", "Recursion", "Binary Tree"], "similar_problems": [{"slug": "delete-node-in-a-bst", "title": "Delete Node in a BST", "difficulty": "Medium"}]},
    {"number": 779, "slug": "k-th-symbol-in-grammar", "title": "K-th Symbol in Grammar", "difficulty": "Medium", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": []},
    {"number": 894, "slug": "all-possible-full-binary-trees", "title": "All Possible Full Binary Trees", "difficulty": "Medium", "tags": ["Dynamic Programming", "Tree", "Recursion", "Memoization", "Binary Tree"], "similar_problems": []},
    {"number": 1106, "slug": "parsing-a-boolean-expression", "title": "Parsing A Boolean Expression", "difficulty": "Hard", "tags": ["String", "Stack", "Recursion"], "similar_problems": []},
    {"number": 1265, "slug": "print-immutable-linked-list-in-reverse", "title": "Print Immutable Linked List in Reverse", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": []},
    {"number": 1545, "slug": "find-kth-bit-in-nth-binary-string", "title": "Find Kth Bit in Nth Binary String", "difficulty": "Medium", "tags": ["String", "Recursion", "Simulation"], "similar_problems": []},
    {"number": 1808, "slug": "maximize-number-of-nice-divisors", "title": "Maximize Number of Nice Divisors", "difficulty": "Hard", "tags": ["Math", "Recursion", "Number Theory"], "similar_problems": [{"slug": "integer-break", "title": "Integer Break", "difficulty": "Medium"}]},
    {"number": 1823, "slug": "find-the-winner-of-the-circular-game", "title": "Find the Winner of the Circular Game", "difficulty": "Medium", "tags": ["Array", "Math", "Recursion", "Queue", "Simulation"], "similar_problems": []},
    {"number": 1922, "slug": "count-good-numbers", "title": "Count Good Numbers", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "count-the-number-of-arrays-with-k-matching-adjacent-elements", "title": "Count the Number of Arrays with K Matching Adjacent Elements", "difficulty": "Hard"}]},
    {"number": 1969, "slug": "minimum-non-zero-product-of-the-array-elements", "title": "Minimum Non-Zero Product of the Array Elements", "difficulty": "Medium", "tags": ["Math", "Greedy", "Recursion"], "similar_problems": []},
    {"number": 2487, "slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium", "tags": ["Linked List", "Stack", "Recursion", "Monotonic Stack"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}]},
    {"number": 2550, "slug": "count-collisions-of-monkeys-on-a-polygon", "title": "Count Collisions of Monkeys on a Polygon", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"}]},
    {"number": 3304, "slug": "find-the-k-th-character-in-string-game-i", "title": "Find the K-th Character in String Game I", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion", "Simulation"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}]},
    {"number": 3307, "slug": "find-the-k-th-character-in-string-game-ii", "title": "Find the K-th Character in String Game II", "difficulty": "Hard", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}]},
    {"number": 3483, "slug": "unique-3-digit-even-numbers", "title": "Unique 3-Digit Even Numbers", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Recursion", "Enumeration"], "similar_problems": []},
    {"number": 3565, "slug": "sequential-grid-path-cover", "title": "Sequential Grid Path Cover", "difficulty": "Medium", "tags": ["Array", "Recursion", "Matrix"], "similar_problems": []},
    {"number": 3566, "slug": "partition-array-into-two-equal-product-subsets", "title": "Partition Array into Two Equal Product Subsets", "difficulty": "Medium", "tags": ["Array", "Bit Manipulation", "Recursion", "Enumeration"], "similar_problems": []}
]