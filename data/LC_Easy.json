[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 9, "slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}, {"slug": "strictly-palindromic-number", "title": "Strictly Palindromic Number", "difficulty": "Medium"}, {"slug": "count-symmetric-integers", "title": "  Count Symmetric Integers", "difficulty": "Easy"}, {"slug": "find-the-count-of-good-integers", "title": "Find the Count of Good Integers", "difficulty": "Hard"}, {"slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard"}]},
    {"number": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 14, "slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}, {"slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium"}, {"slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard"}, {"slug": "longest-common-prefix-after-at-most-one-removal", "title": "Longest Common Prefix After at Most One Removal", "difficulty": "Medium"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 26, "slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "remove-duplicates-from-sorted-array-ii", "title": "Remove Duplicates from Sorted Array II", "difficulty": "Medium"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}, {"slug": "sum-of-distances", "title": "Sum of Distances", "difficulty": "Medium"}]},
    {"number": 27, "slug": "remove-element", "title": "Remove Element", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "Easy"}, {"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "Easy"}]},
    {"number": 28, "slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy"}]},
    {"number": 35, "slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}]},
    {"number": 58, "slug": "length-of-last-word", "title": "Length of Last Word", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 66, "slug": "plus-one", "title": "Plus One", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "minimum-operations-to-reduce-an-integer-to-0", "title": "Minimum Operations to Reduce an Integer to 0", "difficulty": "Medium"}]},
    {"number": 67, "slug": "add-binary", "title": "Add Binary", "difficulty": "Easy", "tags": ["Math", "String", "Bit Manipulation", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}]},
    {"number": 69, "slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"}, {"slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy"}]},
    {"number": 70, "slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}, {"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "count-ways-to-build-good-strings", "title": "Count Ways To Build Good Strings", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 83, "slug": "remove-duplicates-from-sorted-list", "title": "Remove Duplicates from Sorted List", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-list-ii", "title": "Remove Duplicates from Sorted List II", "difficulty": "Medium"}, {"slug": "remove-duplicates-from-an-unsorted-linked-list", "title": "Remove Duplicates From an Unsorted Linked List", "difficulty": "Medium"}]},
    {"number": 88, "slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium"}, {"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}, {"slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"}, {"slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"}, {"slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "inorder-successor-in-bst", "title": "Inorder Successor in BST", "difficulty": "Medium"}, {"slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium"}, {"slug": "minimum-distance-between-bst-nodes", "title": "Minimum Distance Between BST Nodes", "difficulty": "Easy"}]},
    {"number": 100, "slug": "same-tree", "title": "Same Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 101, "slug": "symmetric-tree", "title": "Symmetric Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}]},
    {"number": 108, "slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy", "tags": ["Array", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 110, "slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "k-th-largest-perfect-subtree-size-in-binary-tree", "title": "K-th Largest Perfect Subtree Size in Binary Tree", "difficulty": "Medium"}, {"slug": "check-balanced-string", "title": "Check Balanced String", "difficulty": "Easy"}]},
    {"number": 111, "slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}]},
    {"number": 112, "slug": "path-sum", "title": "Path Sum", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"}, {"slug": "binary-tree-maximum-path-sum", "title": "Binary Tree Maximum Path Sum", "difficulty": "Hard"}, {"slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"}, {"slug": "path-sum-iii", "title": "Path Sum III", "difficulty": "Medium"}, {"slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"}]},
    {"number": 118, "slug": "pascals-triangle", "title": "Pascal's Triangle", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "pascals-triangle-ii", "title": "Pascal's Triangle II", "difficulty": "Easy"}, {"slug": "check-if-digits-are-equal-in-string-after-operations-ii", "title": "Check If Digits Are Equal in String After Operations II", "difficulty": "Hard"}]},
    {"number": 119, "slug": "pascals-triangle-ii", "title": "Pascal's Triangle II", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "pascals-triangle", "title": "Pascal's Triangle", "difficulty": "Easy"}, {"slug": "find-triangular-sum-of-an-array", "title": "Find Triangular Sum of an Array", "difficulty": "Medium"}]},
    {"number": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "sum-of-beauty-in-the-array", "title": "Sum of Beauty in the Array", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-v", "title": "Best Time to Buy and Sell Stock V", "difficulty": "Medium"}]},
    {"number": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}, {"slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium"}]},
    {"number": 136, "slug": "single-number", "title": "Single Number", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 141, "slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}]},
    {"number": 144, "slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "verify-preorder-sequence-in-binary-search-tree", "title": "Verify Preorder Sequence in Binary Search Tree", "difficulty": "Medium"}, {"slug": "n-ary-tree-preorder-traversal", "title": "N-ary Tree Preorder Traversal", "difficulty": "Easy"}, {"slug": "kth-largest-sum-in-a-binary-tree", "title": "Kth Largest Sum in a Binary Tree", "difficulty": "Medium"}]},
    {"number": 145, "slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "n-ary-tree-postorder-traversal", "title": "N-ary Tree Postorder Traversal", "difficulty": "Easy"}, {"slug": "minimum-fuel-cost-to-report-to-the-capital", "title": "Minimum Fuel Cost to Report to the Capital", "difficulty": "Medium"}]},
    {"number": 157, "slug": "read-n-characters-given-read4", "title": "Read N Characters Given Read4", "difficulty": "Easy", "tags": ["Array", "Simulation", "Interactive"], "similar_problems": [{"slug": "read-n-characters-given-read4-ii-call-multiple-times", "title": "Read N Characters Given read4 II - Call Multiple Times", "difficulty": "Hard"}]},
    {"number": 160, "slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy"}]},
    {"number": 163, "slug": "missing-ranges", "title": "Missing Ranges", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 168, "slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}, {"slug": "design-spreadsheet", "title": "Design Spreadsheet", "difficulty": "Medium"}]},
    {"number": 169, "slug": "majority-element", "title": "Majority Element", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Divide and Conquer", "Sorting", "Counting"], "similar_problems": [{"slug": "majority-element-ii", "title": "Majority Element II", "difficulty": "Medium"}, {"slug": "check-if-a-number-is-majority-element-in-a-sorted-array", "title": "Check If a Number Is Majority Element in a Sorted Array", "difficulty": "Easy"}, {"slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy"}, {"slug": "minimum-index-of-a-valid-split", "title": "Minimum Index of a Valid Split", "difficulty": "Medium"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}, {"slug": "find-the-most-common-response", "title": "Find the Most Common Response", "difficulty": "Medium"}, {"slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy"}]},
    {"number": 170, "slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Design", "Data Stream"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "unique-word-abbreviation", "title": "Unique Word Abbreviation", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}]},
    {"number": 171, "slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 175, "slug": "combine-two-tables", "title": "Combine Two Tables", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "employee-bonus", "title": "Employee Bonus", "difficulty": "Easy"}]},
    {"number": 181, "slug": "employees-earning-more-than-their-managers", "title": "Employees Earning More Than Their Managers", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 182, "slug": "duplicate-emails", "title": "Duplicate Emails", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 183, "slug": "customers-who-never-order", "title": "Customers Who Never Order", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 190, "slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy", "tags": ["Divide and Conquer", "Bit Manipulation"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy"}]},
    {"number": 191, "slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy", "tags": ["Divide and Conquer", "Bit Manipulation"], "similar_problems": [{"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}, {"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "hamming-distance", "title": "Hamming Distance", "difficulty": "Easy"}, {"slug": "binary-number-with-alternating-bits", "title": "Binary Number with Alternating Bits", "difficulty": "Easy"}, {"slug": "prime-number-of-set-bits-in-binary-representation", "title": "Prime Number of Set Bits in Binary Representation", "difficulty": "Easy"}, {"slug": "convert-date-to-binary", "title": "Convert Date to Binary", "difficulty": "Easy"}]},
    {"number": 193, "slug": "valid-phone-numbers", "title": "Valid Phone Numbers", "difficulty": "Easy", "tags": ["Shell"], "similar_problems": []},
    {"number": 195, "slug": "tenth-line", "title": "Tenth Line", "difficulty": "Easy", "tags": ["Shell"], "similar_problems": []},
    {"number": 196, "slug": "delete-duplicate-emails", "title": "Delete Duplicate Emails", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 197, "slug": "rising-temperature", "title": "Rising Temperature", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 202, "slug": "happy-number", "title": "Happy Number", "difficulty": "Easy", "tags": ["Hash Table", "Math", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy"}, {"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "ugly-number", "title": "Ugly Number", "difficulty": "Easy"}, {"slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy"}, {"slug": "minimum-addition-to-make-integer-beautiful", "title": "Minimum Addition to Make Integer Beautiful", "difficulty": "Medium"}, {"slug": "smallest-value-after-replacing-with-sum-of-prime-factors", "title": "Smallest Value After Replacing With Sum of Prime Factors", "difficulty": "Medium"}, {"slug": "count-the-digits-that-divide-a-number", "title": "Count the Digits That Divide a Number", "difficulty": "Easy"}]},
    {"number": 203, "slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}, {"slug": "convert-doubly-linked-list-to-array-i", "title": "Convert Doubly Linked List to Array I", "difficulty": "Easy"}, {"slug": "convert-doubly-linked-list-to-array-ii", "title": "Convert Doubly Linked List to Array II", "difficulty": "Medium"}]},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 217, "slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "contains-duplicate-ii", "title": "Contains Duplicate II", "difficulty": "Easy"}, {"slug": "contains-duplicate-iii", "title": "Contains Duplicate III", "difficulty": "Hard"}, {"slug": "make-array-zero-by-subtracting-equal-amounts", "title": "Make Array Zero by Subtracting Equal Amounts", "difficulty": "Easy"}, {"slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy"}]},
    {"number": 219, "slug": "contains-duplicate-ii", "title": "Contains Duplicate II", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sliding Window"], "similar_problems": [{"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}, {"slug": "contains-duplicate-iii", "title": "Contains Duplicate III", "difficulty": "Hard"}]},
    {"number": 222, "slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy", "tags": ["Binary Search", "Bit Manipulation", "Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}]},
    {"number": 225, "slug": "implement-stack-using-queues", "title": "Implement Stack using Queues", "difficulty": "Easy", "tags": ["Stack", "Design", "Queue"], "similar_problems": [{"slug": "implement-queue-using-stacks", "title": "Implement Queue using Stacks", "difficulty": "Easy"}]},
    {"number": 226, "slug": "invert-binary-tree", "title": "Invert Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "reverse-odd-levels-of-binary-tree", "title": "Reverse Odd Levels of Binary Tree", "difficulty": "Medium"}]},
    {"number": 228, "slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "missing-ranges", "title": "Missing Ranges", "difficulty": "Easy"}, {"slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard"}, {"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 231, "slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy"}, {"slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy"}]},
    {"number": 232, "slug": "implement-queue-using-stacks", "title": "Implement Queue using Stacks", "difficulty": "Easy", "tags": ["Stack", "Design", "Queue"], "similar_problems": [{"slug": "implement-stack-using-queues", "title": "Implement Stack using Queues", "difficulty": "Easy"}]},
    {"number": 234, "slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 242, "slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}]},
    {"number": 243, "slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "shortest-word-distance-iii", "title": "Shortest Word Distance III", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}]},
    {"number": 246, "slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy", "tags": ["Hash Table", "Two Pointers", "String"], "similar_problems": [{"slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "confusing-number", "title": "Confusing Number", "difficulty": "Easy"}]},
    {"number": 252, "slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 257, "slug": "binary-tree-paths", "title": "Binary Tree Paths", "difficulty": "Easy", "tags": ["String", "Backtracking", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"}, {"slug": "smallest-string-starting-from-leaf", "title": "Smallest String Starting From Leaf", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}]},
    {"number": 258, "slug": "add-digits", "title": "Add Digits", "difficulty": "Easy", "tags": ["Math", "Simulation", "Number Theory"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}, {"slug": "sum-of-digits-in-the-minimum-number", "title": "Sum of Digits in the Minimum Number", "difficulty": "Easy"}, {"slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy"}, {"slug": "minimum-sum-of-four-digit-number-after-splitting-digits", "title": "Minimum Sum of Four Digit Number After Splitting Digits", "difficulty": "Easy"}, {"slug": "calculate-digit-sum-of-a-string", "title": "Calculate Digit Sum of a String", "difficulty": "Easy"}, {"slug": "difference-between-element-sum-and-digit-sum-of-an-array", "title": "Difference Between Element Sum and Digit Sum of an Array", "difficulty": "Easy"}, {"slug": "alternating-digit-sum", "title": "Alternating Digit Sum", "difficulty": "Easy"}]},
    {"number": 263, "slug": "ugly-number", "title": "Ugly Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}, {"slug": "count-primes", "title": "Count Primes", "difficulty": "Medium"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}]},
    {"number": 266, "slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation"], "similar_problems": [{"slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium"}, {"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "palindrome-permutation-ii", "title": "Palindrome Permutation II", "difficulty": "Medium"}, {"slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy"}]},
    {"number": 268, "slug": "missing-number", "title": "Missing Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}, {"slug": "find-the-largest-almost-missing-integer", "title": "Find the Largest Almost Missing Integer", "difficulty": "Easy"}]},
    {"number": 270, "slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy", "tags": ["Binary Search", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 278, "slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy"}]},
    {"number": 283, "slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}]},
    {"number": 290, "slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy"}, {"slug": "word-pattern-ii", "title": "Word Pattern II", "difficulty": "Medium"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 292, "slug": "nim-game", "title": "Nim Game", "difficulty": "Easy", "tags": ["Math", "Brainteaser", "Game Theory"], "similar_problems": [{"slug": "flip-game-ii", "title": "Flip Game II", "difficulty": "Medium"}]},
    {"number": 293, "slug": "flip-game", "title": "Flip Game", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "flip-game-ii", "title": "Flip Game II", "difficulty": "Medium"}]},
    {"number": 303, "slug": "range-sum-query-immutable", "title": "Range Sum Query - Immutable", "difficulty": "Easy", "tags": ["Array", "Design", "Prefix Sum"], "similar_problems": [{"slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium"}, {"slug": "range-sum-query-mutable", "title": "Range Sum Query - Mutable", "difficulty": "Medium"}, {"slug": "maximum-size-subarray-sum-equals-k", "title": "Maximum Size Subarray Sum Equals k", "difficulty": "Medium"}, {"slug": "sum-of-variable-length-subarrays", "title": "Sum of Variable Length Subarrays", "difficulty": "Easy"}]},
    {"number": 326, "slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy"}, {"slug": "check-if-number-is-a-sum-of-powers-of-three", "title": "Check if Number is a Sum of Powers of Three", "difficulty": "Medium"}]},
    {"number": 338, "slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy", "tags": ["Dynamic Programming", "Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "sum-of-values-at-indices-with-k-set-bits", "title": "Sum of Values at Indices With K Set Bits", "difficulty": "Easy"}, {"slug": "find-the-k-or-of-an-array", "title": "Find the K-or of an Array", "difficulty": "Easy"}]},
    {"number": 342, "slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion"], "similar_problems": [{"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy"}]},
    {"number": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 345, "slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}, {"slug": "sort-vowels-in-a-string", "title": "Sort Vowels in a String", "difficulty": "Medium"}]},
    {"number": 346, "slug": "moving-average-from-data-stream", "title": "Moving Average from Data Stream", "difficulty": "Easy", "tags": ["Array", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 349, "slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}, {"slug": "intersection-of-three-sorted-arrays", "title": "Intersection of Three Sorted Arrays", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}, {"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}, {"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}, {"slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy"}, {"slug": "maximum-size-of-a-set-after-removals", "title": "Maximum Size of a Set After Removals", "difficulty": "Medium"}]},
    {"number": 350, "slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "find-common-characters", "title": "Find Common Characters", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}, {"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}, {"slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy"}]},
    {"number": 359, "slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy", "tags": ["Hash Table", "Design", "Data Stream"], "similar_problems": [{"slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium"}]},
    {"number": 367, "slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"}, {"slug": "sum-of-square-numbers", "title": "Sum of Square Numbers", "difficulty": "Medium"}]},
    {"number": 374, "slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower-ii", "title": "Guess Number Higher or Lower II", "difficulty": "Medium"}, {"slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium"}]},
    {"number": 383, "slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "stickers-to-spell-word", "title": "Stickers to Spell Word", "difficulty": "Hard"}, {"slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy"}]},
    {"number": 387, "slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Queue", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}]},
    {"number": 389, "slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "permutation-difference-between-two-strings", "title": "Permutation Difference between Two Strings", "difficulty": "Easy"}]},
    {"number": 392, "slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}, {"slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium"}, {"slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium"}, {"slug": "make-string-a-subsequence-using-cyclic-increments", "title": "Make String a Subsequence Using Cyclic Increments", "difficulty": "Medium"}]},
    {"number": 401, "slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy", "tags": ["Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}]},
    {"number": 404, "slug": "sum-of-left-leaves", "title": "Sum of Left Leaves", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 405, "slug": "convert-a-number-to-hexadecimal", "title": "Convert a Number to Hexadecimal", "difficulty": "Easy", "tags": ["Math", "String", "Bit Manipulation"], "similar_problems": []},
    {"number": 408, "slug": "valid-word-abbreviation", "title": "Valid Word Abbreviation", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "minimum-unique-word-abbreviation", "title": "Minimum Unique Word Abbreviation", "difficulty": "Hard"}, {"slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard"}, {"slug": "check-if-an-original-string-exists-given-two-encoded-strings", "title": "Check if an Original String Exists Given Two Encoded Strings", "difficulty": "Hard"}]},
    {"number": 409, "slug": "longest-palindrome", "title": "Longest Palindrome", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy"], "similar_problems": [{"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "longest-palindrome-by-concatenating-two-letter-words", "title": "Longest Palindrome by Concatenating Two Letter Words", "difficulty": "Medium"}, {"slug": "largest-palindromic-number", "title": "Largest Palindromic Number", "difficulty": "Medium"}]},
    {"number": 412, "slug": "fizz-buzz", "title": "Fizz Buzz", "difficulty": "Easy", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "fizz-buzz-multithreaded", "title": "Fizz Buzz Multithreaded", "difficulty": "Medium"}, {"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 414, "slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "neither-minimum-nor-maximum", "title": "Neither Minimum nor Maximum", "difficulty": "Easy"}]},
    {"number": 415, "slug": "add-strings", "title": "Add Strings", "difficulty": "Easy", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}]},
    {"number": 422, "slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "word-squares", "title": "Word Squares", "difficulty": "Hard"}, {"slug": "toeplitz-matrix", "title": "Toeplitz Matrix", "difficulty": "Easy"}]},
    {"number": 434, "slug": "number-of-segments-in-a-string", "title": "Number of Segments in a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 441, "slug": "arranging-coins", "title": "Arranging Coins", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 448, "slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "find-all-duplicates-in-an-array", "title": "Find All Duplicates in an Array", "difficulty": "Medium"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "replace-elements-in-an-array", "title": "Replace Elements in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}]},
    {"number": 455, "slug": "assign-cookies", "title": "Assign Cookies", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 459, "slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy"}, {"slug": "repeated-string-match", "title": "Repeated String Match", "difficulty": "Medium"}]},
    {"number": 461, "slug": "hamming-distance", "title": "Hamming Distance", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "total-hamming-distance", "title": "Total Hamming Distance", "difficulty": "Medium"}]},
    {"number": 463, "slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "flood-fill", "title": "Flood Fill", "difficulty": "Easy"}, {"slug": "coloring-a-border", "title": "Coloring A Border", "difficulty": "Medium"}]},
    {"number": 476, "slug": "number-complement", "title": "Number Complement", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": []},
    {"number": 482, "slug": "license-key-formatting", "title": "License Key Formatting", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 485, "slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "max-consecutive-ones-ii", "title": "Max Consecutive Ones II", "difficulty": "Medium"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}, {"slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy"}, {"slug": "length-of-the-longest-alphabetical-continuous-substring", "title": "Length of the Longest Alphabetical Continuous Substring", "difficulty": "Medium"}, {"slug": "maximum-enemy-forts-that-can-be-captured", "title": "Maximum Enemy Forts That Can Be Captured", "difficulty": "Easy"}]},
    {"number": 492, "slug": "construct-the-rectangle", "title": "Construct the Rectangle", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 495, "slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy"}, {"slug": "dota2-senate", "title": "Dota2 Senate", "difficulty": "Medium"}]},
    {"number": 496, "slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"}, {"slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium"}, {"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}, {"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}]},
    {"number": 500, "slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "find-the-sequence-of-strings-appeared-on-the-screen", "title": "Find the Sequence of Strings Appeared on the Screen", "difficulty": "Medium"}, {"slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-ii", "title": "Find the Original Typed String II", "difficulty": "Hard"}]},
    {"number": 501, "slug": "find-mode-in-binary-search-tree", "title": "Find Mode in Binary Search Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 504, "slug": "base-7", "title": "Base 7", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 506, "slug": "relative-ranks", "title": "Relative Ranks", "difficulty": "Easy", "tags": ["Array", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 507, "slug": "perfect-number", "title": "Perfect Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "self-dividing-numbers", "title": "Self Dividing Numbers", "difficulty": "Easy"}]},
    {"number": 509, "slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Recursion", "Memoization"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "split-array-into-fibonacci-sequence", "title": "Split Array into Fibonacci Sequence", "difficulty": "Medium"}, {"slug": "length-of-longest-fibonacci-subsequence", "title": "Length of Longest Fibonacci Subsequence", "difficulty": "Medium"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}]},
    {"number": 511, "slug": "game-play-analysis-i", "title": "Game Play Analysis I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "game-play-analysis-ii", "title": "Game Play Analysis II", "difficulty": "Easy"}]},
    {"number": 512, "slug": "game-play-analysis-ii", "title": "Game Play Analysis II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "game-play-analysis-i", "title": "Game Play Analysis I", "difficulty": "Easy"}, {"slug": "game-play-analysis-iii", "title": "Game Play Analysis III", "difficulty": "Medium"}]},
    {"number": 520, "slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy"}, {"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}, {"slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy"}]},
    {"number": 521, "slug": "longest-uncommon-subsequence-i", "title": "Longest Uncommon Subsequence I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "longest-uncommon-subsequence-ii", "title": "Longest Uncommon Subsequence II", "difficulty": "Medium"}]},
    {"number": 530, "slug": "minimum-absolute-difference-in-bst", "title": "Minimum Absolute Difference in BST", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}]},
    {"number": 541, "slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy"}, {"slug": "reverse-words-in-a-string-iii", "title": "Reverse Words in a String III", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 543, "slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "diameter-of-n-ary-tree", "title": "Diameter of N-Ary Tree", "difficulty": "Medium"}, {"slug": "longest-path-with-different-adjacent-characters", "title": "Longest Path With Different Adjacent Characters", "difficulty": "Hard"}]},
    {"number": 551, "slug": "student-attendance-record-i", "title": "Student Attendance Record I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "student-attendance-record-ii", "title": "Student Attendance Record II", "difficulty": "Hard"}]},
    {"number": 557, "slug": "reverse-words-in-a-string-iii", "title": "Reverse Words in a String III", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 559, "slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search"], "similar_problems": [{"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "the-time-when-the-network-becomes-idle", "title": "The Time When the Network Becomes Idle", "difficulty": "Medium"}, {"slug": "count-the-number-of-good-nodes", "title": "Count the Number of Good Nodes", "difficulty": "Medium"}]},
    {"number": 561, "slug": "array-partition", "title": "Array Partition", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": [{"slug": "minimum-difference-between-highest-and-lowest-of-k-scores", "title": "Minimum Difference Between Highest and Lowest of K Scores", "difficulty": "Easy"}, {"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 563, "slug": "binary-tree-tilt", "title": "Binary Tree Tilt", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "find-all-the-lonely-nodes", "title": "Find All The Lonely Nodes", "difficulty": "Easy"}]},
    {"number": 566, "slug": "reshape-the-matrix", "title": "Reshape the Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "convert-1d-array-into-2d-array", "title": "Convert 1D Array Into 2D Array", "difficulty": "Easy"}]},
    {"number": 572, "slug": "subtree-of-another-tree", "title": "Subtree of Another Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "String Matching", "Binary Tree", "Hash Function"], "similar_problems": [{"slug": "count-univalue-subtrees", "title": "Count Univalue Subtrees", "difficulty": "Medium"}, {"slug": "most-frequent-subtree-sum", "title": "Most Frequent Subtree Sum", "difficulty": "Medium"}]},
    {"number": 575, "slug": "distribute-candies", "title": "Distribute Candies", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 577, "slug": "employee-bonus", "title": "Employee Bonus", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "combine-two-tables", "title": "Combine Two Tables", "difficulty": "Easy"}]},
    {"number": 584, "slug": "find-customer-referee", "title": "Find Customer Referee", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 586, "slug": "customer-placing-the-largest-number-of-orders", "title": "Customer Placing the Largest Number of Orders", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 589, "slug": "n-ary-tree-preorder-traversal", "title": "N-ary Tree Preorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search"], "similar_problems": [{"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}, {"slug": "n-ary-tree-level-order-traversal", "title": "N-ary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "n-ary-tree-postorder-traversal", "title": "N-ary Tree Postorder Traversal", "difficulty": "Easy"}]},
    {"number": 590, "slug": "n-ary-tree-postorder-traversal", "title": "N-ary Tree Postorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search"], "similar_problems": [{"slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"}, {"slug": "n-ary-tree-level-order-traversal", "title": "N-ary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "n-ary-tree-preorder-traversal", "title": "N-ary Tree Preorder Traversal", "difficulty": "Easy"}]},
    {"number": 594, "slug": "longest-harmonious-subsequence", "title": "Longest Harmonious Subsequence", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sliding Window", "Sorting", "Counting"], "similar_problems": []},
    {"number": 595, "slug": "big-countries", "title": "Big Countries", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 596, "slug": "classes-with-at-least-5-students", "title": "Classes With at Least 5 Students", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 597, "slug": "friend-requests-i-overall-acceptance-rate", "title": "Friend Requests I: Overall Acceptance Rate", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 598, "slug": "range-addition-ii", "title": "Range Addition II", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "range-addition", "title": "Range Addition", "difficulty": "Medium"}, {"slug": "sum-of-matrix-after-queries", "title": "Sum of Matrix After Queries", "difficulty": "Medium"}]},
    {"number": 599, "slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy"}]},
    {"number": 603, "slug": "consecutive-available-seats", "title": "Consecutive Available Seats", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 604, "slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy", "tags": ["Array", "String", "Design", "Iterator"], "similar_problems": [{"slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium"}, {"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 605, "slug": "can-place-flowers", "title": "Can Place Flowers", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"}]},
    {"number": 607, "slug": "sales-person", "title": "Sales Person", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 610, "slug": "triangle-judgement", "title": "Triangle Judgement", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 613, "slug": "shortest-distance-in-a-line", "title": "Shortest Distance in a Line", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 617, "slug": "merge-two-binary-trees", "title": "Merge Two Binary Trees", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 619, "slug": "biggest-single-number", "title": "Biggest Single Number", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 620, "slug": "not-boring-movies", "title": "Not Boring Movies", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 627, "slug": "swap-salary", "title": "Swap Salary", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 628, "slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy", "tags": ["Array", "Math", "Sorting"], "similar_problems": [{"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}]},
    {"number": 637, "slug": "average-of-levels-in-binary-tree", "title": "Average of Levels in Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "binary-tree-level-order-traversal-ii", "title": "Binary Tree Level Order Traversal II", "difficulty": "Medium"}]},
    {"number": 643, "slug": "maximum-average-subarray-i", "title": "Maximum Average Subarray I", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": [{"slug": "maximum-average-subarray-ii", "title": "Maximum Average Subarray II", "difficulty": "Hard"}, {"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}]},
    {"number": 645, "slug": "set-mismatch", "title": "Set Mismatch", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}]},
    {"number": 653, "slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy", "tags": ["Hash Table", "Two Pointers", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "two-sum-bsts", "title": "Two Sum BSTs", "difficulty": "Medium"}]},
    {"number": 657, "slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "execution-of-all-suffix-instructions-staying-in-a-grid", "title": "Execution of All Suffix Instructions Staying in a Grid", "difficulty": "Medium"}, {"slug": "furthest-point-from-origin", "title": "Furthest Point From Origin", "difficulty": "Easy"}]},
    {"number": 661, "slug": "image-smoother", "title": "Image Smoother", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 671, "slug": "second-minimum-node-in-a-binary-tree", "title": "Second Minimum Node In a Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"}]},
    {"number": 674, "slug": "longest-continuous-increasing-subsequence", "title": "Longest Continuous Increasing Subsequence", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "number-of-longest-increasing-subsequence", "title": "Number of Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}]},
    {"number": 680, "slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "valid-palindrome-iii", "title": "Valid Palindrome III", "difficulty": "Hard"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}]},
    {"number": 682, "slug": "baseball-game", "title": "Baseball Game", "difficulty": "Easy", "tags": ["Array", "Stack", "Simulation"], "similar_problems": [{"slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy"}]},
    {"number": 693, "slug": "binary-number-with-alternating-bits", "title": "Binary Number with Alternating Bits", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}]},
    {"number": 696, "slug": "count-binary-substrings", "title": "Count Binary Substrings", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "number-of-substrings-with-fixed-ratio", "title": "Number of Substrings With Fixed Ratio", "difficulty": "Medium"}, {"slug": "count-the-number-of-substrings-with-dominant-ones", "title": "Count the Number of Substrings With Dominant Ones", "difficulty": "Medium"}]},
    {"number": 697, "slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 700, "slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy", "tags": ["Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}, {"slug": "insert-into-a-binary-search-tree", "title": "Insert into a Binary Search Tree", "difficulty": "Medium"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 703, "slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy", "tags": ["Tree", "Design", "Binary Search Tree", "Heap (Priority Queue)", "Binary Tree", "Data Stream"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "finding-mk-average", "title": "Finding MK Average", "difficulty": "Hard"}, {"slug": "sequentially-ordinal-rank-tracker", "title": "Sequentially Ordinal Rank Tracker", "difficulty": "Hard"}]},
    {"number": 704, "slug": "binary-search", "title": "Binary Search", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-a-sorted-array-of-unknown-size", "title": "Search in a Sorted Array of Unknown Size", "difficulty": "Medium"}, {"slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy"}]},
    {"number": 705, "slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"], "similar_problems": [{"slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy"}, {"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]},
    {"number": 706, "slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"], "similar_problems": [{"slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy"}, {"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]},
    {"number": 709, "slug": "to-lower-case", "title": "To Lower Case", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy"}]},
    {"number": 717, "slug": "1-bit-and-2-bit-characters", "title": "1-bit and 2-bit Characters", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "gray-code", "title": "Gray Code", "difficulty": "Medium"}]},
    {"number": 724, "slug": "find-pivot-index", "title": "Find Pivot Index", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "maximum-sum-score-of-array", "title": "Maximum Sum Score of Array", "difficulty": "Medium"}, {"slug": "left-and-right-sum-differences", "title": "Left and Right Sum Differences", "difficulty": "Easy"}]},
    {"number": 728, "slug": "self-dividing-numbers", "title": "Self Dividing Numbers", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "perfect-number", "title": "Perfect Number", "difficulty": "Easy"}, {"slug": "check-if-number-has-equal-digit-count-and-digit-value", "title": "Check if Number Has Equal Digit Count and Digit Value", "difficulty": "Easy"}, {"slug": "count-the-digits-that-divide-a-number", "title": "Count the Digits That Divide a Number", "difficulty": "Easy"}]},
    {"number": 733, "slug": "flood-fill", "title": "Flood Fill", "difficulty": "Easy", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "island-perimeter", "title": "Island Perimeter", "difficulty": "Easy"}]},
    {"number": 734, "slug": "sentence-similarity", "title": "Sentence Similarity", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "number-of-provinces", "title": "Number of Provinces", "difficulty": "Medium"}, {"slug": "accounts-merge", "title": "Accounts Merge", "difficulty": "Medium"}, {"slug": "sentence-similarity-ii", "title": "Sentence Similarity II", "difficulty": "Medium"}]},
    {"number": 744, "slug": "find-smallest-letter-greater-than-target", "title": "Find Smallest Letter Greater Than Target", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "count-elements-with-strictly-smaller-and-greater-elements", "title": "Count Elements With Strictly Smaller and Greater Elements ", "difficulty": "Easy"}]},
    {"number": 746, "slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}]},
    {"number": 747, "slug": "largest-number-at-least-twice-of-others", "title": "Largest Number At Least Twice of Others", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "keep-multiplying-found-values-by-two", "title": "Keep Multiplying Found Values by Two", "difficulty": "Easy"}, {"slug": "largest-number-after-digit-swaps-by-parity", "title": "Largest Number After Digit Swaps by Parity", "difficulty": "Easy"}]},
    {"number": 748, "slug": "shortest-completing-word", "title": "Shortest Completing Word", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 760, "slug": "find-anagram-mappings", "title": "Find Anagram Mappings", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 762, "slug": "prime-number-of-set-bits-in-binary-representation", "title": "Prime Number of Set Bits in Binary Representation", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}]},
    {"number": 766, "slug": "toeplitz-matrix", "title": "Toeplitz Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy"}]},
    {"number": 771, "slug": "jewels-and-stones", "title": "Jewels and Stones", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 783, "slug": "minimum-distance-between-bst-nodes", "title": "Minimum Distance Between BST Nodes", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}]},
    {"number": 796, "slug": "rotate-string", "title": "Rotate String", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": []},
    {"number": 800, "slug": "similar-rgb-color", "title": "Similar RGB Color", "difficulty": "Easy", "tags": ["Math", "String", "Enumeration"], "similar_problems": []},
    {"number": 804, "slug": "unique-morse-code-words", "title": "Unique Morse Code Words", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 806, "slug": "number-of-lines-to-write-string", "title": "Number of Lines To Write String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 812, "slug": "largest-triangle-area", "title": "Largest Triangle Area", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry"], "similar_problems": [{"slug": "largest-perimeter-triangle", "title": "Largest Perimeter Triangle", "difficulty": "Easy"}]},
    {"number": 819, "slug": "most-common-word", "title": "Most Common Word", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 821, "slug": "shortest-distance-to-a-character", "title": "Shortest Distance to a Character", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}]},
    {"number": 824, "slug": "goat-latin", "title": "Goat Latin", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 830, "slug": "positions-of-large-groups", "title": "Positions of Large Groups", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy"}]},
    {"number": 832, "slug": "flipping-an-image", "title": "Flipping an Image", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Bit Manipulation", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 836, "slug": "rectangle-overlap", "title": "Rectangle Overlap", "difficulty": "Easy", "tags": ["Math", "Geometry"], "similar_problems": [{"slug": "rectangle-area", "title": "Rectangle Area", "difficulty": "Medium"}]},
    {"number": 844, "slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Stack", "Simulation"], "similar_problems": [{"slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy"}, {"slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"}]},
    {"number": 859, "slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "determine-if-two-strings-are-close", "title": "Determine if Two Strings Are Close", "difficulty": "Medium"}, {"slug": "check-if-one-string-swap-can-make-strings-equal", "title": "Check if One String Swap Can Make Strings Equal", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 860, "slug": "lemonade-change", "title": "Lemonade Change", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 867, "slug": "transpose-matrix", "title": "Transpose Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 868, "slug": "binary-gap", "title": "Binary Gap", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": []},
    {"number": 872, "slug": "leaf-similar-trees", "title": "Leaf-Similar Trees", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 876, "slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 883, "slug": "projection-area-of-3d-shapes", "title": "Projection Area of 3D Shapes", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Matrix"], "similar_problems": []},
    {"number": 884, "slug": "uncommon-words-from-two-sentences", "title": "Uncommon Words from Two Sentences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}]},
    {"number": 888, "slug": "fair-candy-swap", "title": "Fair Candy Swap", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 892, "slug": "surface-area-of-3d-shapes", "title": "Surface Area of 3D Shapes", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Matrix"], "similar_problems": []},
    {"number": 896, "slug": "monotonic-array", "title": "Monotonic Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}, {"slug": "find-the-count-of-monotonic-pairs-i", "title": "Find the Count of Monotonic Pairs I", "difficulty": "Hard"}]},
    {"number": 897, "slug": "increasing-order-search-tree", "title": "Increasing Order Search Tree", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": []},
    {"number": 905, "slug": "sort-array-by-parity", "title": "Sort Array By Parity", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "sort-array-by-parity-ii", "title": "Sort Array By Parity II", "difficulty": "Easy"}, {"slug": "sort-even-and-odd-indices-independently", "title": "Sort Even and Odd Indices Independently", "difficulty": "Easy"}, {"slug": "largest-number-after-digit-swaps-by-parity", "title": "Largest Number After Digit Swaps by Parity", "difficulty": "Easy"}]},
    {"number": 908, "slug": "smallest-range-i", "title": "Smallest Range I", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 914, "slug": "x-of-a-kind-in-a-deck-of-cards", "title": "X of a Kind in a Deck of Cards", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Counting", "Number Theory"], "similar_problems": []},
    {"number": 917, "slug": "reverse-only-letters", "title": "Reverse Only Letters", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 922, "slug": "sort-array-by-parity-ii", "title": "Sort Array By Parity II", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "sort-array-by-parity", "title": "Sort Array By Parity", "difficulty": "Easy"}, {"slug": "rearrange-array-elements-by-sign", "title": "Rearrange Array Elements by Sign", "difficulty": "Medium"}, {"slug": "sort-even-and-odd-indices-independently", "title": "Sort Even and Odd Indices Independently", "difficulty": "Easy"}, {"slug": "largest-number-after-digit-swaps-by-parity", "title": "Largest Number After Digit Swaps by Parity", "difficulty": "Easy"}, {"slug": "find-the-number-of-k-even-arrays", "title": "Find the Number of K-Even Arrays", "difficulty": "Medium"}]},
    {"number": 925, "slug": "long-pressed-name", "title": "Long Pressed Name", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 929, "slug": "unique-email-addresses", "title": "Unique Email Addresses", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 933, "slug": "number-of-recent-calls", "title": "Number of Recent Calls", "difficulty": "Easy", "tags": ["Design", "Queue", "Data Stream"], "similar_problems": []},
    {"number": 938, "slug": "range-sum-of-bst", "title": "Range Sum of BST", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": []},
    {"number": 941, "slug": "valid-mountain-array", "title": "Valid Mountain Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium"}]},
    {"number": 942, "slug": "di-string-match", "title": "DI String Match", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String", "Greedy"], "similar_problems": [{"slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium"}]},
    {"number": 944, "slug": "delete-columns-to-make-sorted", "title": "Delete Columns to Make Sorted", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 953, "slug": "verifying-an-alien-dictionary", "title": "Verifying an Alien Dictionary", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 961, "slug": "n-repeated-element-in-size-2n-array", "title": "N-Repeated Element in Size 2N Array", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 965, "slug": "univalued-binary-tree", "title": "Univalued Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "find-all-the-lonely-nodes", "title": "Find All The Lonely Nodes", "difficulty": "Easy"}]},
    {"number": 976, "slug": "largest-perimeter-triangle", "title": "Largest Perimeter Triangle", "difficulty": "Easy", "tags": ["Array", "Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "largest-triangle-area", "title": "Largest Triangle Area", "difficulty": "Easy"}]},
    {"number": 977, "slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-transformed-array", "title": "Sort Transformed Array", "difficulty": "Medium"}]},
    {"number": 989, "slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}]},
    {"number": 993, "slug": "cousins-in-binary-tree", "title": "Cousins in Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "cousins-in-binary-tree-ii", "title": "Cousins in Binary Tree II", "difficulty": "Medium"}]},
    {"number": 997, "slug": "find-the-town-judge", "title": "Find the Town Judge", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Graph"], "similar_problems": [{"slug": "find-the-celebrity", "title": "Find the Celebrity", "difficulty": "Medium"}]},
    {"number": 999, "slug": "available-captures-for-rook", "title": "Available Captures for Rook", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "count-unguarded-cells-in-the-grid", "title": "Count Unguarded Cells in the Grid", "difficulty": "Medium"}, {"slug": "minimum-moves-to-capture-the-queen", "title": "Minimum Moves to Capture The Queen", "difficulty": "Medium"}, {"slug": "maximum-value-sum-by-placing-three-rooks-ii", "title": "Maximum Value Sum by Placing Three Rooks II", "difficulty": "Hard"}, {"slug": "maximum-value-sum-by-placing-three-rooks-i", "title": "Maximum Value Sum by Placing Three Rooks I", "difficulty": "Hard"}]},
    {"number": 1002, "slug": "find-common-characters", "title": "Find Common Characters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}]},
    {"number": 1005, "slug": "maximize-sum-of-array-after-k-negations", "title": "Maximize Sum Of Array After K Negations", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}]},
    {"number": 1009, "slug": "complement-of-base-10-integer", "title": "Complement of Base 10 Integer", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": []},
    {"number": 1013, "slug": "partition-array-into-three-parts-with-equal-sum", "title": "Partition Array Into Three Parts With Equal Sum", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy"}]},
    {"number": 1018, "slug": "binary-prefix-divisible-by-5", "title": "Binary Prefix Divisible By 5", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "average-value-of-even-numbers-that-are-divisible-by-three", "title": "Average Value of Even Numbers That Are Divisible by Three", "difficulty": "Easy"}, {"slug": "find-the-maximum-divisibility-score", "title": "Find the Maximum Divisibility Score", "difficulty": "Easy"}]},
    {"number": 1021, "slug": "remove-outermost-parentheses", "title": "Remove Outermost Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1022, "slug": "sum-of-root-to-leaf-binary-numbers", "title": "Sum of Root To Leaf Binary Numbers", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1025, "slug": "divisor-game", "title": "Divisor Game", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Brainteaser", "Game Theory"], "similar_problems": []},
    {"number": 1030, "slug": "matrix-cells-in-distance-order", "title": "Matrix Cells in Distance Order", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry", "Sorting", "Matrix"], "similar_problems": [{"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 1037, "slug": "valid-boomerang", "title": "Valid Boomerang", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry"], "similar_problems": []},
    {"number": 1046, "slug": "last-stone-weight", "title": "Last Stone Weight", "difficulty": "Easy", "tags": ["Array", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1047, "slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium"}, {"slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"}, {"slug": "minimize-string-length", "title": "Minimize String Length", "difficulty": "Easy"}]},
    {"number": 1050, "slug": "actors-and-directors-who-cooperated-at-least-three-times", "title": "Actors and Directors Who Cooperated At Least Three Times", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1051, "slug": "height-checker", "title": "Height Checker", "difficulty": "Easy", "tags": ["Array", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 1056, "slug": "confusing-number", "title": "Confusing Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "confusing-number-ii", "title": "Confusing Number II", "difficulty": "Hard"}]},
    {"number": 1064, "slug": "fixed-point", "title": "Fixed Point", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 1065, "slug": "index-pairs-of-a-string", "title": "Index Pairs of a String", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Sorting"], "similar_problems": []},
    {"number": 1068, "slug": "product-sales-analysis-i", "title": "Product Sales Analysis I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "product-sales-analysis-ii", "title": "Product Sales Analysis II", "difficulty": "Easy"}, {"slug": "product-sales-analysis-iv", "title": "Product Sales Analysis IV", "difficulty": "Medium"}, {"slug": "product-sales-analysis-v", "title": "Product Sales Analysis V", "difficulty": "Easy"}]},
    {"number": 1069, "slug": "product-sales-analysis-ii", "title": "Product Sales Analysis II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "product-sales-analysis-i", "title": "Product Sales Analysis I", "difficulty": "Easy"}, {"slug": "product-sales-analysis-iii", "title": "Product Sales Analysis III", "difficulty": "Medium"}, {"slug": "product-sales-analysis-iv", "title": "Product Sales Analysis IV", "difficulty": "Medium"}, {"slug": "product-sales-analysis-v", "title": "Product Sales Analysis V", "difficulty": "Easy"}]},
    {"number": 1071, "slug": "greatest-common-divisor-of-strings", "title": "Greatest Common Divisor of Strings", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}, {"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}, {"slug": "find-the-maximum-factor-score-of-array", "title": "Find the Maximum Factor Score of Array", "difficulty": "Medium"}]},
    {"number": 1075, "slug": "project-employees-i", "title": "Project Employees I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "project-employees-ii", "title": "Project Employees II", "difficulty": "Easy"}]},
    {"number": 1076, "slug": "project-employees-ii", "title": "Project Employees II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "project-employees-i", "title": "Project Employees I", "difficulty": "Easy"}, {"slug": "project-employees-iii", "title": "Project Employees III", "difficulty": "Medium"}]},
    {"number": 1078, "slug": "occurrences-after-bigram", "title": "Occurrences After Bigram", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1082, "slug": "sales-analysis-i", "title": "Sales Analysis I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "sales-analysis-ii", "title": "Sales Analysis II", "difficulty": "Easy"}]},
    {"number": 1083, "slug": "sales-analysis-ii", "title": "Sales Analysis II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "sales-analysis-i", "title": "Sales Analysis I", "difficulty": "Easy"}, {"slug": "sales-analysis-iii", "title": "Sales Analysis III", "difficulty": "Easy"}]},
    {"number": 1084, "slug": "sales-analysis-iii", "title": "Sales Analysis III", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "sales-analysis-ii", "title": "Sales Analysis II", "difficulty": "Easy"}]},
    {"number": 1085, "slug": "sum-of-digits-in-the-minimum-number", "title": "Sum of Digits in the Minimum Number", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}]},
    {"number": 1086, "slug": "high-five", "title": "High Five", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "determine-the-winner-of-a-bowling-game", "title": "Determine the Winner of a Bowling Game", "difficulty": "Easy"}]},
    {"number": 1089, "slug": "duplicate-zeros", "title": "Duplicate Zeros", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": []},
    {"number": 1099, "slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 1103, "slug": "distribute-candies-to-people", "title": "Distribute Candies to People", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "distribute-money-to-maximum-children", "title": "Distribute Money to Maximum Children", "difficulty": "Easy"}]},
    {"number": 1108, "slug": "defanging-an-ip-address", "title": "Defanging an IP Address", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1113, "slug": "reported-posts", "title": "Reported Posts", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1114, "slug": "print-in-order", "title": "Print in Order", "difficulty": "Easy", "tags": ["Concurrency"], "similar_problems": [{"slug": "print-foobar-alternately", "title": "Print FooBar Alternately", "difficulty": "Medium"}]},
    {"number": 1118, "slug": "number-of-days-in-a-month", "title": "Number of Days in a Month", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1119, "slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 1122, "slug": "relative-sort-array", "title": "Relative Sort Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 1128, "slug": "number-of-equivalent-domino-pairs", "title": "Number of Equivalent Domino Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": []},
    {"number": 1133, "slug": "largest-unique-number", "title": "Largest Unique Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": []},
    {"number": 1134, "slug": "armstrong-number", "title": "Armstrong Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1137, "slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}]},
    {"number": 1141, "slug": "user-activity-for-the-past-30-days-i", "title": "User Activity for the Past 30 Days I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1142, "slug": "user-activity-for-the-past-30-days-ii", "title": "User Activity for the Past 30 Days II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1148, "slug": "article-views-i", "title": "Article Views I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1150, "slug": "check-if-a-number-is-majority-element-in-a-sorted-array", "title": "Check If a Number Is Majority Element in a Sorted Array", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "majority-element-ii", "title": "Majority Element II", "difficulty": "Medium"}]},
    {"number": 1154, "slug": "day-of-the-year", "title": "Day of the Year", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1160, "slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "ransom-note", "title": "Ransom Note", "difficulty": "Easy"}, {"slug": "rearrange-characters-to-make-target-string", "title": "Rearrange Characters to Make Target String", "difficulty": "Easy"}]},
    {"number": 1165, "slug": "single-row-keyboard", "title": "Single-Row Keyboard", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1173, "slug": "immediate-food-delivery-i", "title": "Immediate Food Delivery I", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1175, "slug": "prime-arrangements", "title": "Prime Arrangements", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1176, "slug": "diet-plan-performance", "title": "Diet Plan Performance", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": []},
    {"number": 1179, "slug": "reformat-department-table", "title": "Reformat Department Table", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1180, "slug": "count-substrings-with-only-one-distinct-letter", "title": "Count Substrings with Only One Distinct Letter", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1184, "slug": "distance-between-bus-stops", "title": "Distance Between Bus Stops", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "minimum-costs-using-the-train-line", "title": "Minimum Costs Using the Train Line", "difficulty": "Hard"}]},
    {"number": 1185, "slug": "day-of-the-week", "title": "Day of the Week", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1189, "slug": "maximum-number-of-balloons", "title": "Maximum Number of Balloons", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1196, "slug": "how-many-apples-can-you-put-into-the-basket", "title": "How Many Apples Can You Put into the Basket", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 1200, "slug": "minimum-absolute-difference", "title": "Minimum Absolute Difference", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}, {"slug": "minimize-the-maximum-difference-of-pairs", "title": "Minimize the Maximum Difference of Pairs", "difficulty": "Medium"}]},
    {"number": 1207, "slug": "unique-number-of-occurrences", "title": "Unique Number of Occurrences", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 1211, "slug": "queries-quality-and-percentage", "title": "Queries Quality and Percentage", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "percentage-of-users-attended-a-contest", "title": "Percentage of Users Attended a Contest", "difficulty": "Easy"}]},
    {"number": 1213, "slug": "intersection-of-three-sorted-arrays", "title": "Intersection of Three Sorted Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Binary Search", "Counting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 1217, "slug": "minimum-cost-to-move-chips-to-the-same-position", "title": "Minimum Cost to Move Chips to The Same Position", "difficulty": "Easy", "tags": ["Array", "Math", "Greedy"], "similar_problems": [{"slug": "minimum-number-of-operations-to-move-all-balls-to-each-box", "title": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": "Medium"}, {"slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy"}]},
    {"number": 1221, "slug": "split-a-string-in-balanced-strings", "title": "Split a String in Balanced Strings", "difficulty": "Easy", "tags": ["String", "Greedy", "Counting"], "similar_problems": [{"slug": "split-strings-by-separator", "title": "Split Strings by Separator", "difficulty": "Easy"}]},
    {"number": 1228, "slug": "missing-number-in-arithmetic-progression", "title": "Missing Number In Arithmetic Progression", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 1232, "slug": "check-if-it-is-a-straight-line", "title": "Check If It Is a Straight Line", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry"], "similar_problems": []},
    {"number": 1241, "slug": "number-of-comments-per-post", "title": "Number of Comments per Post", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1243, "slug": "array-transformation", "title": "Array Transformation", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 1251, "slug": "average-selling-price", "title": "Average Selling Price", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1252, "slug": "cells-with-odd-values-in-a-matrix", "title": "Cells with Odd Values in a Matrix", "difficulty": "Easy", "tags": ["Array", "Math", "Simulation"], "similar_problems": []},
    {"number": 1260, "slug": "shift-2d-grid", "title": "Shift 2D Grid", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 1266, "slug": "minimum-time-visiting-all-points", "title": "Minimum Time Visiting All Points", "difficulty": "Easy", "tags": ["Array", "Math", "Geometry"], "similar_problems": []},
    {"number": 1271, "slug": "hexspeak", "title": "Hexspeak", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 1275, "slug": "find-winner-on-a-tic-tac-toe-game", "title": "Find Winner on a Tic Tac Toe Game", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Matrix", "Simulation"], "similar_problems": [{"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 1279, "slug": "traffic-light-controlled-intersection", "title": "Traffic Light Controlled Intersection", "difficulty": "Easy", "tags": ["Concurrency"], "similar_problems": []},
    {"number": 1280, "slug": "students-and-examinations", "title": "Students and Examinations", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1281, "slug": "subtract-the-product-and-sum-of-digits-of-an-integer", "title": "Subtract the Product and Sum of Digits of an Integer", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1287, "slug": "element-appearing-more-than-25-in-sorted-array", "title": "Element Appearing More Than 25% In Sorted Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1290, "slug": "convert-binary-number-in-a-linked-list-to-integer", "title": "Convert Binary Number in a Linked List to Integer", "difficulty": "Easy", "tags": ["Linked List", "Math"], "similar_problems": []},
    {"number": 1294, "slug": "weather-type-in-each-country", "title": "Weather Type in Each Country", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1295, "slug": "find-numbers-with-even-number-of-digits", "title": "Find Numbers with Even Number of Digits", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "finding-3-digit-even-numbers", "title": "Finding 3-Digit Even Numbers", "difficulty": "Easy"}, {"slug": "number-of-even-and-odd-bits", "title": "Number of Even and Odd Bits", "difficulty": "Easy"}, {"slug": "find-if-digit-game-can-be-won", "title": "Find if Digit Game Can Be Won", "difficulty": "Easy"}]},
    {"number": 1299, "slug": "replace-elements-with-greatest-element-on-right-side", "title": "Replace Elements with Greatest Element on Right Side", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "two-furthest-houses-with-different-colors", "title": "Two Furthest Houses With Different Colors", "difficulty": "Easy"}, {"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}]},
    {"number": 1303, "slug": "find-the-team-size", "title": "Find the Team Size", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1304, "slug": "find-n-unique-integers-sum-up-to-zero", "title": "Find N Unique Integers Sum up to Zero", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 1309, "slug": "decrypt-string-from-alphabet-to-integer-mapping", "title": "Decrypt String from Alphabet to Integer Mapping", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1313, "slug": "decompress-run-length-encoded-list", "title": "Decompress Run-Length Encoded List", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 1317, "slug": "convert-integer-to-the-sum-of-two-no-zero-integers", "title": "Convert Integer to the Sum of Two No-Zero Integers", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 1322, "slug": "ads-performance", "title": "Ads Performance", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1323, "slug": "maximum-69-number", "title": "Maximum 69 Number", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 1327, "slug": "list-the-products-ordered-in-a-period", "title": "List the Products Ordered in a Period", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1331, "slug": "rank-transform-of-an-array", "title": "Rank Transform of an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "rank-transform-of-a-matrix", "title": "Rank Transform of a Matrix", "difficulty": "Hard"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 1332, "slug": "remove-palindromic-subsequences", "title": "Remove Palindromic Subsequences", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": []},
    {"number": 1337, "slug": "the-k-weakest-rows-in-a-matrix", "title": "The K Weakest Rows in a Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1342, "slug": "number-of-steps-to-reduce-a-number-to-zero", "title": "Number of Steps to Reduce a Number to Zero", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation"], "similar_problems": [{"slug": "minimum-moves-to-reach-target-score", "title": "Minimum Moves to Reach Target Score", "difficulty": "Medium"}, {"slug": "count-operations-to-obtain-zero", "title": "Count Operations to Obtain Zero", "difficulty": "Easy"}]},
    {"number": 1346, "slug": "check-if-n-and-its-double-exist", "title": "Check If N and Its Double Exist", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "keep-multiplying-found-values-by-two", "title": "Keep Multiplying Found Values by Two", "difficulty": "Easy"}]},
    {"number": 1350, "slug": "students-with-invalid-departments", "title": "Students With Invalid Departments", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1351, "slug": "count-negative-numbers-in-a-sorted-matrix", "title": "Count Negative Numbers in a Sorted Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy"}]},
    {"number": 1356, "slug": "sort-integers-by-the-number-of-1-bits", "title": "Sort Integers by The Number of 1 Bits", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation", "Sorting", "Counting"], "similar_problems": [{"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "find-if-array-can-be-sorted", "title": "Find if Array Can Be Sorted", "difficulty": "Medium"}]},
    {"number": 1360, "slug": "number-of-days-between-two-dates", "title": "Number of Days Between Two Dates", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy"}]},
    {"number": 1365, "slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Counting Sort"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy"}]},
    {"number": 1370, "slug": "increasing-decreasing-string", "title": "Increasing Decreasing String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1374, "slug": "generate-a-string-with-characters-that-have-odd-counts", "title": "Generate a String With Characters That Have Odd Counts", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1378, "slug": "replace-employee-id-with-the-unique-identifier", "title": "Replace Employee ID With The Unique Identifier", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1379, "slug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree", "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1380, "slug": "lucky-numbers-in-a-matrix", "title": "Lucky Numbers in a Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 1385, "slug": "find-the-distance-value-between-two-arrays", "title": "Find the Distance Value Between Two Arrays", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1389, "slug": "create-target-array-in-the-given-order", "title": "Create Target Array in the Given Order", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 1394, "slug": "find-lucky-integer-in-an-array", "title": "Find Lucky Integer in an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": []},
    {"number": 1399, "slug": "count-largest-group", "title": "Count Largest Group", "difficulty": "Easy", "tags": ["Hash Table", "Math"], "similar_problems": []},
    {"number": 1403, "slug": "minimum-subsequence-in-non-increasing-order", "title": "Minimum Subsequence in Non-Increasing Order", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}]},
    {"number": 1407, "slug": "top-travellers", "title": "Top Travellers", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1408, "slug": "string-matching-in-an-array", "title": "String Matching in an Array", "difficulty": "Easy", "tags": ["Array", "String", "String Matching"], "similar_problems": [{"slug": "substring-xor-queries", "title": "Substring XOR Queries", "difficulty": "Medium"}]},
    {"number": 1413, "slug": "minimum-value-to-get-positive-step-by-step-sum", "title": "Minimum Value to Get Positive Step by Step Sum", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 1417, "slug": "reformat-the-string", "title": "Reformat The String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1421, "slug": "npv-queries", "title": "NPV Queries", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1422, "slug": "maximum-score-after-splitting-a-string", "title": "Maximum Score After Splitting a String", "difficulty": "Easy", "tags": ["String", "Prefix Sum"], "similar_problems": []},
    {"number": 1426, "slug": "counting-elements", "title": "Counting Elements", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 1427, "slug": "perform-string-shifts", "title": "Perform String Shifts", "difficulty": "Easy", "tags": ["Array", "Math", "String"], "similar_problems": []},
    {"number": 1431, "slug": "kids-with-the-greatest-number-of-candies", "title": "Kids With the Greatest Number of Candies", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1435, "slug": "create-a-session-bar-chart", "title": "Create a Session Bar Chart", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "count-salary-categories", "title": "Count Salary Categories", "difficulty": "Medium"}]},
    {"number": 1436, "slug": "destination-city", "title": "Destination City", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": []},
    {"number": 1437, "slug": "check-if-all-1s-are-at-least-length-k-places-away", "title": "Check If All 1's Are at Least Length K Places Away", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "task-scheduler-ii", "title": "Task Scheduler II", "difficulty": "Medium"}]},
    {"number": 1446, "slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "longest-continuous-increasing-subsequence", "title": "Longest Continuous Increasing Subsequence", "difficulty": "Easy"}, {"slug": "check-if-an-array-is-consecutive", "title": "Check if an Array Is Consecutive", "difficulty": "Easy"}, {"slug": "count-number-of-homogenous-substrings", "title": "Count Number of Homogenous Substrings", "difficulty": "Medium"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "minimum-number-of-chairs-in-a-waiting-room", "title": "Minimum Number of Chairs in a Waiting Room", "difficulty": "Easy"}]},
    {"number": 1450, "slug": "number-of-students-doing-homework-at-a-given-time", "title": "Number of Students Doing Homework at a Given Time", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1455, "slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy"}, {"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 1460, "slug": "make-two-arrays-equal-by-reversing-subarrays", "title": "Make Two Arrays Equal by Reversing Subarrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": []},
    {"number": 1464, "slug": "maximum-product-of-two-elements-in-an-array", "title": "Maximum Product of Two Elements in an Array", "difficulty": "Easy", "tags": ["Array", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1469, "slug": "find-all-the-lonely-nodes", "title": "Find All The Lonely Nodes", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-tilt", "title": "Binary Tree Tilt", "difficulty": "Easy"}, {"slug": "univalued-binary-tree", "title": "Univalued Binary Tree", "difficulty": "Easy"}]},
    {"number": 1470, "slug": "shuffle-the-array", "title": "Shuffle the Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1474, "slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium"}, {"slug": "remove-zero-sum-consecutive-nodes-from-linked-list", "title": "Remove Zero Sum Consecutive Nodes from Linked List", "difficulty": "Medium"}]},
    {"number": 1475, "slug": "final-prices-with-a-special-discount-in-a-shop", "title": "Final Prices With a Special Discount in a Shop", "difficulty": "Easy", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 1480, "slug": "running-sum-of-1d-array", "title": "Running Sum of 1d Array", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 1484, "slug": "group-sold-products-by-the-date", "title": "Group Sold Products By The Date", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "finding-the-topic-of-each-post", "title": "Finding the Topic of Each Post", "difficulty": "Hard"}]},
    {"number": 1486, "slug": "xor-operation-in-an-array", "title": "XOR Operation in an Array", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation"], "similar_problems": []},
    {"number": 1491, "slug": "average-salary-excluding-the-minimum-and-maximum-salary", "title": "Average Salary Excluding the Minimum and Maximum Salary", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": []},
    {"number": 1495, "slug": "friendly-movies-streamed-last-month", "title": "Friendly Movies Streamed Last Month", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1496, "slug": "path-crossing", "title": "Path Crossing", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1502, "slug": "can-make-arithmetic-progression-from-sequence", "title": "Can Make Arithmetic Progression From Sequence", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "arithmetic-subarrays", "title": "Arithmetic Subarrays", "difficulty": "Medium"}]},
    {"number": 1507, "slug": "reformat-date", "title": "Reformat Date", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1511, "slug": "customer-order-frequency", "title": "Customer Order Frequency", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1512, "slug": "number-of-good-pairs", "title": "Number of Good Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Counting"], "similar_problems": [{"slug": "number-of-pairs-of-interchangeable-rectangles", "title": "Number of Pairs of Interchangeable Rectangles", "difficulty": "Medium"}, {"slug": "substrings-that-begin-and-end-with-the-same-letter", "title": "Substrings That Begin and End With the Same Letter", "difficulty": "Medium"}]},
    {"number": 1517, "slug": "find-users-with-valid-e-mails", "title": "Find Users With Valid E-Mails", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1518, "slug": "water-bottles", "title": "Water Bottles", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "water-bottles-ii", "title": "Water Bottles II", "difficulty": "Medium"}]},
    {"number": 1523, "slug": "count-odd-numbers-in-an-interval-range", "title": "Count Odd Numbers in an Interval Range", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "check-if-bitwise-or-has-trailing-zeros", "title": "Check if Bitwise OR Has Trailing Zeros", "difficulty": "Easy"}]},
    {"number": 1527, "slug": "patients-with-a-condition", "title": "Patients With a Condition", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1528, "slug": "shuffle-string", "title": "Shuffle String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1534, "slug": "count-good-triplets", "title": "Count Good Triplets", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": [{"slug": "count-special-quadruplets", "title": "Count Special Quadruplets", "difficulty": "Easy"}, {"slug": "number-of-unequal-triplets-in-array", "title": "Number of Unequal Triplets in Array", "difficulty": "Easy"}]},
    {"number": 1539, "slug": "kth-missing-positive-number", "title": "Kth Missing Positive Number", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}]},
    {"number": 1543, "slug": "fix-product-name-format", "title": "Fix Product Name Format", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1544, "slug": "make-the-string-great", "title": "Make The String Great", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": []},
    {"number": 1550, "slug": "three-consecutive-odds", "title": "Three Consecutive Odds", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1556, "slug": "thousand-separator", "title": "Thousand Separator", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1560, "slug": "most-visited-sector-in-a-circular-track", "title": "Most Visited Sector in  a Circular Track", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 1565, "slug": "unique-orders-and-customers-per-month", "title": "Unique Orders and Customers Per Month", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1566, "slug": "detect-pattern-of-length-m-repeated-k-or-more-times", "title": "Detect Pattern of Length M Repeated K or More Times", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": [{"slug": "maximum-repeating-substring", "title": "Maximum Repeating Substring", "difficulty": "Easy"}]},
    {"number": 1571, "slug": "warehouse-manager", "title": "Warehouse Manager", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1572, "slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}, {"slug": "check-if-matrix-is-x-matrix", "title": "Check if Matrix Is X-Matrix", "difficulty": "Easy"}]},
    {"number": 1576, "slug": "replace-all-s-to-avoid-consecutive-repeating-characters", "title": "Replace All ?'s to Avoid Consecutive Repeating Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1581, "slug": "customer-who-visited-but-did-not-make-any-transactions", "title": "Customer Who Visited but Did Not Make Any Transactions", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "sellers-with-no-sales", "title": "Sellers With No Sales", "difficulty": "Easy"}]},
    {"number": 1582, "slug": "special-positions-in-a-binary-matrix", "title": "Special Positions in a Binary Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "difference-between-ones-and-zeros-in-row-and-column", "title": "Difference Between Ones and Zeros in Row and Column", "difficulty": "Medium"}]},
    {"number": 1587, "slug": "bank-account-summary-ii", "title": "Bank Account Summary II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1588, "slug": "sum-of-all-odd-length-subarrays", "title": "Sum of All Odd Length Subarrays", "difficulty": "Easy", "tags": ["Array", "Math", "Prefix Sum"], "similar_problems": [{"slug": "sum-of-squares-of-special-elements", "title": "Sum of Squares of Special Elements ", "difficulty": "Easy"}]},
    {"number": 1592, "slug": "rearrange-spaces-between-words", "title": "Rearrange Spaces Between Words", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}]},
    {"number": 1598, "slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy", "tags": ["Array", "String", "Stack"], "similar_problems": [{"slug": "baseball-game", "title": "Baseball Game", "difficulty": "Easy"}, {"slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy"}]},
    {"number": 1603, "slug": "design-parking-system", "title": "Design Parking System", "difficulty": "Easy", "tags": ["Design", "Simulation", "Counting"], "similar_problems": []},
    {"number": 1607, "slug": "sellers-with-no-sales", "title": "Sellers With No Sales", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "customer-who-visited-but-did-not-make-any-transactions", "title": "Customer Who Visited but Did Not Make Any Transactions", "difficulty": "Easy"}]},
    {"number": 1608, "slug": "special-array-with-x-elements-greater-than-or-equal-x", "title": "Special Array With X Elements Greater Than or Equal X", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1614, "slug": "maximum-nesting-depth-of-the-parentheses", "title": "Maximum Nesting Depth of the Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "maximum-nesting-depth-of-two-valid-parentheses-strings", "title": "Maximum Nesting Depth of Two Valid Parentheses Strings", "difficulty": "Medium"}]},
    {"number": 1619, "slug": "mean-of-array-after-removing-some-elements", "title": "Mean of Array After Removing Some Elements", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": []},
    {"number": 1623, "slug": "all-valid-triplets-that-can-represent-a-country", "title": "All Valid Triplets That Can Represent a Country", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1624, "slug": "largest-substring-between-two-equal-characters", "title": "Largest Substring Between Two Equal Characters", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1629, "slug": "slowest-key", "title": "Slowest Key", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1633, "slug": "percentage-of-users-attended-a-contest", "title": "Percentage of Users Attended a Contest", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "queries-quality-and-percentage", "title": "Queries Quality and Percentage", "difficulty": "Easy"}]},
    {"number": 1636, "slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "divide-array-into-equal-pairs", "title": "Divide Array Into Equal Pairs", "difficulty": "Easy"}, {"slug": "most-frequent-number-following-key-in-an-array", "title": "Most Frequent Number Following Key In an Array", "difficulty": "Easy"}, {"slug": "maximum-number-of-pairs-in-array", "title": "Maximum Number of Pairs in Array", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "sort-the-people", "title": "Sort the People", "difficulty": "Easy"}]},
    {"number": 1637, "slug": "widest-vertical-area-between-two-points-containing-no-points", "title": "Widest Vertical Area Between Two Points Containing No Points", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "maximum-gap", "title": "Maximum Gap", "difficulty": "Medium"}, {"slug": "maximum-consecutive-floors-without-special-floors", "title": "Maximum Consecutive Floors Without Special Floors", "difficulty": "Medium"}]},
    {"number": 1640, "slug": "check-array-formation-through-concatenation", "title": "Check Array Formation Through Concatenation", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 1646, "slug": "get-maximum-in-generated-array", "title": "Get Maximum in Generated Array", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 1652, "slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": [{"slug": "circular-sentence", "title": "Circular Sentence", "difficulty": "Easy"}, {"slug": "shortest-distance-to-target-string-in-a-circular-array", "title": "Shortest Distance to Target String in a Circular Array", "difficulty": "Easy"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 1656, "slug": "design-an-ordered-stream", "title": "Design an Ordered Stream", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Design", "Data Stream"], "similar_problems": [{"slug": "longest-uploaded-prefix", "title": "Longest Uploaded Prefix", "difficulty": "Medium"}]},
    {"number": 1661, "slug": "average-time-of-process-per-machine", "title": "Average Time of Process per Machine", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1662, "slug": "check-if-two-string-arrays-are-equivalent", "title": "Check If Two String Arrays are Equivalent", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "check-if-an-original-string-exists-given-two-encoded-strings", "title": "Check if an Original String Exists Given Two Encoded Strings", "difficulty": "Hard"}]},
    {"number": 1667, "slug": "fix-names-in-a-table", "title": "Fix Names in a Table", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1668, "slug": "maximum-repeating-substring", "title": "Maximum Repeating Substring", "difficulty": "Easy", "tags": ["String", "Dynamic Programming", "String Matching"], "similar_problems": [{"slug": "detect-pattern-of-length-m-repeated-k-or-more-times", "title": "Detect Pattern of Length M Repeated K or More Times", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-make-word-k-periodic", "title": "Minimum Number of Operations to Make Word K-Periodic", "difficulty": "Medium"}]},
    {"number": 1672, "slug": "richest-customer-wealth", "title": "Richest Customer Wealth", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 1677, "slug": "products-worth-over-invoices", "title": "Product's Worth Over Invoices", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1678, "slug": "goal-parser-interpretation", "title": "Goal Parser Interpretation", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1683, "slug": "invalid-tweets", "title": "Invalid Tweets", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1684, "slug": "count-the-number-of-consistent-strings", "title": "Count the Number of Consistent Strings", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "count-pairs-of-similar-strings", "title": "Count Pairs Of Similar Strings", "difficulty": "Easy"}]},
    {"number": 1688, "slug": "count-of-matches-in-tournament", "title": "Count of Matches in Tournament", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "count-distinct-numbers-on-board", "title": "Count Distinct Numbers on Board", "difficulty": "Easy"}]},
    {"number": 1693, "slug": "daily-leads-and-partners", "title": "Daily Leads and Partners", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1694, "slug": "reformat-phone-number", "title": "Reformat Phone Number", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1700, "slug": "number-of-students-unable-to-eat-lunch", "title": "Number of Students Unable to Eat Lunch", "difficulty": "Easy", "tags": ["Array", "Stack", "Queue", "Simulation"], "similar_problems": [{"slug": "time-needed-to-buy-tickets", "title": "Time Needed to Buy Tickets", "difficulty": "Easy"}]},
    {"number": 1704, "slug": "determine-if-string-halves-are-alike", "title": "Determine if String Halves Are Alike", "difficulty": "Easy", "tags": ["String", "Counting"], "similar_problems": []},
    {"number": 1708, "slug": "largest-subarray-length-k", "title": "Largest Subarray Length K", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 1710, "slug": "maximum-units-on-a-truck", "title": "Maximum Units on a Truck", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-bags-with-full-capacity-of-rocks", "title": "Maximum Bags With Full Capacity of Rocks", "difficulty": "Medium"}]},
    {"number": 1716, "slug": "calculate-money-in-leetcode-bank", "title": "Calculate Money in Leetcode Bank", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "distribute-money-to-maximum-children", "title": "Distribute Money to Maximum Children", "difficulty": "Easy"}]},
    {"number": 1720, "slug": "decode-xored-array", "title": "Decode XORed Array", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "find-the-original-array-of-prefix-xor", "title": "Find The Original Array of Prefix Xor", "difficulty": "Medium"}]},
    {"number": 1725, "slug": "number-of-rectangles-that-can-form-the-largest-square", "title": "Number Of Rectangles That Can Form The Largest Square", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1729, "slug": "find-followers-count", "title": "Find Followers Count", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1731, "slug": "the-number-of-employees-which-report-to-each-employee", "title": "The Number of Employees Which Report to Each Employee", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1732, "slug": "find-the-highest-altitude", "title": "Find the Highest Altitude", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": []},
    {"number": 1736, "slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy"}, {"slug": "latest-time-you-can-obtain-after-replacing-characters", "title": "Latest Time You Can Obtain After Replacing Characters", "difficulty": "Easy"}]},
    {"number": 1741, "slug": "find-total-time-spent-by-each-employee", "title": "Find Total Time Spent by Each Employee", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1742, "slug": "maximum-number-of-balls-in-a-box", "title": "Maximum Number of Balls in a Box", "difficulty": "Easy", "tags": ["Hash Table", "Math", "Counting"], "similar_problems": [{"slug": "find-the-number-of-distinct-colors-among-the-balls", "title": "Find the Number of Distinct Colors Among the Balls", "difficulty": "Medium"}]},
    {"number": 1748, "slug": "sum-of-unique-elements", "title": "Sum of Unique Elements", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": []},
    {"number": 1752, "slug": "check-if-array-is-sorted-and-rotated", "title": "Check if Array Is Sorted and Rotated", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy"}]},
    {"number": 1757, "slug": "recyclable-and-low-fat-products", "title": "Recyclable and Low Fat Products", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1758, "slug": "minimum-changes-to-make-alternating-binary-string", "title": "Minimum Changes To Make Alternating Binary String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "remove-adjacent-almost-equal-characters", "title": "Remove Adjacent Almost-Equal Characters", "difficulty": "Medium"}]},
    {"number": 1763, "slug": "longest-nice-substring", "title": "Longest Nice Substring", "difficulty": "Easy", "tags": ["Hash Table", "String", "Divide and Conquer", "Bit Manipulation", "Sliding Window"], "similar_problems": [{"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}]},
    {"number": 1768, "slug": "merge-strings-alternately", "title": "Merge Strings Alternately", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium"}]},
    {"number": 1773, "slug": "count-items-matching-a-rule", "title": "Count Items Matching a Rule", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1777, "slug": "products-price-for-each-store", "title": "Product's Price for Each Store", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "rearrange-products-table", "title": "Rearrange Products Table", "difficulty": "Easy"}, {"slug": "dynamic-pivoting-of-a-table", "title": "Dynamic Pivoting of a Table", "difficulty": "Hard"}]},
    {"number": 1779, "slug": "find-nearest-point-that-has-the-same-x-or-y-coordinate", "title": "Find Nearest Point That Has the Same X or Y Coordinate", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}]},
    {"number": 1784, "slug": "check-if-binary-string-has-at-most-one-segment-of-ones", "title": "Check if Binary String Has at Most One Segment of Ones", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy"}]},
    {"number": 1789, "slug": "primary-department-for-each-employee", "title": "Primary Department for Each Employee", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1790, "slug": "check-if-one-string-swap-can-make-strings-equal", "title": "Check if One String Swap Can Make Strings Equal", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "buddy-strings", "title": "Buddy Strings", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}, {"slug": "count-almost-equal-pairs-i", "title": "Count Almost Equal Pairs I", "difficulty": "Medium"}]},
    {"number": 1791, "slug": "find-center-of-star-graph", "title": "Find Center of Star Graph", "difficulty": "Easy", "tags": ["Graph"], "similar_problems": [{"slug": "maximum-star-sum-of-a-graph", "title": "Maximum Star Sum of a Graph", "difficulty": "Medium"}]},
    {"number": 1795, "slug": "rearrange-products-table", "title": "Rearrange Products Table", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "products-price-for-each-store", "title": "Product's Price for Each Store", "difficulty": "Easy"}, {"slug": "dynamic-unpivoting-of-a-table", "title": "Dynamic Unpivoting of a Table", "difficulty": "Hard"}]},
    {"number": 1796, "slug": "second-largest-digit-in-a-string", "title": "Second Largest Digit in a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}]},
    {"number": 1800, "slug": "maximum-ascending-subarray-sum", "title": "Maximum Ascending Subarray Sum", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "find-good-days-to-rob-the-bank", "title": "Find Good Days to Rob the Bank", "difficulty": "Medium"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}, {"slug": "count-strictly-increasing-subarrays", "title": "Count Strictly Increasing Subarrays", "difficulty": "Medium"}]},
    {"number": 1805, "slug": "number-of-different-integers-in-a-string", "title": "Number of Different Integers in a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "longest-subarray-with-maximum-bitwise-and", "title": "Longest Subarray With Maximum Bitwise AND", "difficulty": "Medium"}]},
    {"number": 1809, "slug": "ad-free-sessions", "title": "Ad-Free Sessions", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1812, "slug": "determine-color-of-a-chessboard-square", "title": "Determine Color of a Chessboard Square", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "check-if-two-chessboard-squares-have-the-same-color", "title": "Check if Two Chessboard Squares Have the Same Color", "difficulty": "Easy"}]},
    {"number": 1816, "slug": "truncate-sentence", "title": "Truncate Sentence", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1821, "slug": "find-customers-with-positive-revenue-this-year", "title": "Find Customers With Positive Revenue this Year", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1822, "slug": "sign-of-the-product-of-an-array", "title": "Sign of the Product of an Array", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 1826, "slug": "faulty-sensor", "title": "Faulty Sensor", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": []},
    {"number": 1827, "slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimum-increment-to-make-array-unique", "title": "Minimum Increment to Make Array Unique", "difficulty": "Medium"}, {"slug": "make-array-non-decreasing-or-non-increasing", "title": "Make Array Non-decreasing or Non-increasing", "difficulty": "Hard"}, {"slug": "maximum-product-after-k-increments", "title": "Maximum Product After K Increments", "difficulty": "Medium"}, {"slug": "minimum-replacements-to-sort-the-array", "title": "Minimum Replacements to Sort the Array", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-columns-strictly-increasing", "title": "Minimum Operations to Make Columns Strictly Increasing", "difficulty": "Easy"}]},
    {"number": 1832, "slug": "check-if-the-sentence-is-pangram", "title": "Check if the Sentence Is Pangram", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1837, "slug": "sum-of-digits-in-base-k", "title": "Sum of Digits in Base K", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "count-symmetric-integers", "title": "  Count Symmetric Integers", "difficulty": "Easy"}]},
    {"number": 1844, "slug": "replace-all-digits-with-characters", "title": "Replace All Digits with Characters", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}]},
    {"number": 1848, "slug": "minimum-distance-to-the-target-element", "title": "Minimum Distance to the Target Element", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 1853, "slug": "convert-date-format", "title": "Convert Date Format", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1854, "slug": "maximum-population-year", "title": "Maximum Population Year", "difficulty": "Easy", "tags": ["Array", "Counting", "Prefix Sum"], "similar_problems": [{"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}]},
    {"number": 1859, "slug": "sorting-the-sentence", "title": "Sorting the Sentence", "difficulty": "Easy", "tags": ["String", "Sorting"], "similar_problems": [{"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 1863, "slug": "sum-of-all-subset-xor-totals", "title": "Sum of All Subset XOR Totals", "difficulty": "Easy", "tags": ["Array", "Math", "Backtracking", "Bit Manipulation", "Combinatorics", "Enumeration"], "similar_problems": []},
    {"number": 1869, "slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "count-subarrays-with-more-ones-than-zeros", "title": "Count Subarrays With More Ones Than Zeros", "difficulty": "Medium"}, {"slug": "check-if-binary-string-has-at-most-one-segment-of-ones", "title": "Check if Binary String Has at Most One Segment of Ones", "difficulty": "Easy"}]},
    {"number": 1873, "slug": "calculate-special-bonus", "title": "Calculate Special Bonus", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1876, "slug": "substrings-of-size-three-with-distinct-characters", "title": "Substrings of Size Three with Distinct Characters", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sliding Window", "Counting"], "similar_problems": []},
    {"number": 1880, "slug": "check-if-word-equals-summation-of-two-words", "title": "Check if Word Equals Summation of Two Words", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1886, "slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium"}]},
    {"number": 1890, "slug": "the-latest-login-in-2020", "title": "The Latest Login in 2020", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1893, "slug": "check-if-all-the-integers-in-a-range-are-covered", "title": "Check if All the Integers in a Range Are Covered", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Prefix Sum"], "similar_problems": [{"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 1897, "slug": "redistribute-characters-to-make-all-strings-equal", "title": "Redistribute Characters to Make All Strings Equal", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 1903, "slug": "largest-odd-number-in-string", "title": "Largest Odd Number in String", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "largest-3-same-digit-number-in-string", "title": "Largest 3-Same-Digit Number in String", "difficulty": "Easy"}]},
    {"number": 1909, "slug": "remove-one-element-to-make-the-array-strictly-increasing", "title": "Remove One Element to Make the Array Strictly Increasing", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "steps-to-make-array-non-decreasing", "title": "Steps to Make Array Non-decreasing", "difficulty": "Medium"}, {"slug": "find-the-maximum-factor-score-of-array", "title": "Find the Maximum Factor Score of Array", "difficulty": "Medium"}]},
    {"number": 1913, "slug": "maximum-product-difference-between-two-pairs", "title": "Maximum Product Difference Between Two Pairs", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": []},
    {"number": 1920, "slug": "build-array-from-permutation", "title": "Build Array from Permutation", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 1925, "slug": "count-square-sum-triples", "title": "Count Square Sum Triples", "difficulty": "Easy", "tags": ["Math", "Enumeration"], "similar_problems": [{"slug": "number-of-unequal-triplets-in-array", "title": "Number of Unequal Triplets in Array", "difficulty": "Easy"}]},
    {"number": 1929, "slug": "concatenation-of-array", "title": "Concatenation of Array", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 1933, "slug": "check-if-string-is-decomposable-into-value-equal-substrings", "title": "Check if String Is Decomposable Into Value-Equal Substrings", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 1935, "slug": "maximum-number-of-words-you-can-type", "title": "Maximum Number of Words You Can Type", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 1939, "slug": "users-that-actively-request-confirmation-messages", "title": "Users That Actively Request Confirmation Messages", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1941, "slug": "check-if-all-characters-have-equal-number-of-occurrences", "title": "Check if All Characters Have Equal Number of Occurrences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "rings-and-rods", "title": "Rings and Rods", "difficulty": "Easy"}, {"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 1945, "slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}, {"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy"}, {"slug": "minimum-element-after-replacement-with-digit-sum", "title": "Minimum Element After Replacement With Digit Sum", "difficulty": "Easy"}]},
    {"number": 1952, "slug": "three-divisors", "title": "Three Divisors", "difficulty": "Easy", "tags": ["Math", "Enumeration", "Number Theory"], "similar_problems": [{"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}, {"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}]},
    {"number": 1957, "slug": "delete-characters-to-make-fancy-string", "title": "Delete Characters to Make Fancy String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "find-maximum-removals-from-source-string", "title": "Find Maximum Removals From Source String", "difficulty": "Medium"}]},
    {"number": 1961, "slug": "check-if-string-is-a-prefix-of-array", "title": "Check If String Is a Prefix of Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 1965, "slug": "employees-with-missing-information", "title": "Employees With Missing Information", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1967, "slug": "number-of-strings-that-appear-as-substrings-in-word", "title": "Number of Strings That Appear as Substrings in Word", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 1971, "slug": "find-if-path-exists-in-graph", "title": "Find if Path Exists in Graph", "difficulty": "Easy", "tags": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "valid-arrangement-of-pairs", "title": "Valid Arrangement of Pairs", "difficulty": "Hard"}, {"slug": "paths-in-maze-that-lead-to-same-room", "title": "Paths in Maze That Lead to Same Room", "difficulty": "Medium"}]},
    {"number": 1974, "slug": "minimum-time-to-type-word-using-special-typewriter", "title": "Minimum Time to Type Word Using Special Typewriter", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-distance-to-type-a-word-using-two-fingers", "title": "Minimum Distance to Type a Word Using Two Fingers", "difficulty": "Hard"}]},
    {"number": 1978, "slug": "employees-whose-manager-left-the-company", "title": "Employees Whose Manager Left the Company", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 1979, "slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy", "tags": ["Array", "Math", "Number Theory"], "similar_problems": [{"slug": "greatest-common-divisor-of-strings", "title": "Greatest Common Divisor of Strings", "difficulty": "Easy"}, {"slug": "number-of-different-subsequences-gcds", "title": "Number of Different Subsequences GCDs", "difficulty": "Hard"}, {"slug": "three-divisors", "title": "Three Divisors", "difficulty": "Easy"}, {"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}, {"slug": "number-of-subarrays-with-gcd-equal-to-k", "title": "Number of Subarrays With GCD Equal to K", "difficulty": "Medium"}, {"slug": "find-the-number-of-subsequences-with-equal-gcd", "title": "Find the Number of Subsequences With Equal GCD", "difficulty": "Hard"}, {"slug": "maximum-subarray-with-equal-products", "title": "Maximum Subarray With Equal Products", "difficulty": "Easy"}]},
    {"number": 1984, "slug": "minimum-difference-between-highest-and-lowest-of-k-scores", "title": "Minimum Difference Between Highest and Lowest of K Scores", "difficulty": "Easy", "tags": ["Array", "Sliding Window", "Sorting"], "similar_problems": [{"slug": "array-partition", "title": "Array Partition", "difficulty": "Easy"}]},
    {"number": 1991, "slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "find-pivot-index", "title": "Find Pivot Index", "difficulty": "Easy"}, {"slug": "partition-array-into-three-parts-with-equal-sum", "title": "Partition Array Into Three Parts With Equal Sum", "difficulty": "Easy"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "maximum-sum-score-of-array", "title": "Maximum Sum Score of Array", "difficulty": "Medium"}, {"slug": "left-and-right-sum-differences", "title": "Left and Right Sum Differences", "difficulty": "Easy"}]},
    {"number": 1995, "slug": "count-special-quadruplets", "title": "Count Special Quadruplets", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Enumeration"], "similar_problems": [{"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "count-good-triplets", "title": "Count Good Triplets", "difficulty": "Easy"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 2000, "slug": "reverse-prefix-of-word", "title": "Reverse Prefix of Word", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Stack"], "similar_problems": []},
    {"number": 2006, "slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "finding-pairs-with-a-certain-sum", "title": "Finding Pairs With a Certain Sum", "difficulty": "Medium"}, {"slug": "count-equal-and-divisible-pairs-in-an-array", "title": "Count Equal and Divisible Pairs in an Array", "difficulty": "Easy"}, {"slug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "difficulty": "Medium"}, {"slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium"}]},
    {"number": 2011, "slug": "final-value-of-variable-after-performing-operations", "title": "Final Value of Variable After Performing Operations", "difficulty": "Easy", "tags": ["Array", "String", "Simulation"], "similar_problems": []},
    {"number": 2016, "slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "two-furthest-houses-with-different-colors", "title": "Two Furthest Houses With Different Colors", "difficulty": "Easy"}]},
    {"number": 2022, "slug": "convert-1d-array-into-2d-array", "title": "Convert 1D Array Into 2D Array", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "reshape-the-matrix", "title": "Reshape the Matrix", "difficulty": "Easy"}]},
    {"number": 2026, "slug": "low-quality-problems", "title": "Low-Quality Problems", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2027, "slug": "minimum-moves-to-convert-string", "title": "Minimum Moves to Convert String", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "difficulty": "Medium"}, {"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}]},
    {"number": 2032, "slug": "two-out-of-three", "title": "Two Out of Three", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation"], "similar_problems": []},
    {"number": 2037, "slug": "minimum-number-of-moves-to-seat-everyone", "title": "Minimum Number of Moves to Seat Everyone", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Counting Sort"], "similar_problems": []},
    {"number": 2042, "slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}, {"slug": "sorting-the-sentence", "title": "Sorting the Sentence", "difficulty": "Easy"}, {"slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy"}]},
    {"number": 2047, "slug": "number-of-valid-words-in-a-sentence", "title": "Number of Valid Words in a Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "maximum-number-of-words-found-in-sentences", "title": "Maximum Number of Words Found in Sentences", "difficulty": "Easy"}]},
    {"number": 2053, "slug": "kth-distinct-string-in-an-array", "title": "Kth Distinct String in an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}]},
    {"number": 2057, "slug": "smallest-index-with-equal-value", "title": "Smallest Index With Equal Value", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 2062, "slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "number-of-substrings-with-only-1s", "title": "Number of Substrings With Only 1s", "difficulty": "Medium"}, {"slug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "difficulty": "Medium"}, {"slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "difficulty": "Medium"}, {"slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i", "title": "Count of Substrings Containing Every Vowel and K Consonants I", "difficulty": "Medium"}]},
    {"number": 2068, "slug": "check-whether-two-strings-are-almost-equivalent", "title": "Check Whether Two Strings are Almost Equivalent", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "find-the-occurrence-of-first-almost-equal-substring", "title": "Find the Occurrence of First Almost Equal Substring", "difficulty": "Hard"}]},
    {"number": 2072, "slug": "the-winner-university", "title": "The Winner University", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "the-number-of-rich-customers", "title": "The Number of Rich Customers", "difficulty": "Easy"}]},
    {"number": 2073, "slug": "time-needed-to-buy-tickets", "title": "Time Needed to Buy Tickets", "difficulty": "Easy", "tags": ["Array", "Queue", "Simulation"], "similar_problems": [{"slug": "number-of-students-unable-to-eat-lunch", "title": "Number of Students Unable to Eat Lunch", "difficulty": "Easy"}]},
    {"number": 2078, "slug": "two-furthest-houses-with-different-colors", "title": "Two Furthest Houses With Different Colors", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "replace-elements-with-greatest-element-on-right-side", "title": "Replace Elements with Greatest Element on Right Side", "difficulty": "Easy"}, {"slug": "maximum-distance-between-a-pair-of-values", "title": "Maximum Distance Between a Pair of Values", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}]},
    {"number": 2082, "slug": "the-number-of-rich-customers", "title": "The Number of Rich Customers", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "the-winner-university", "title": "The Winner University", "difficulty": "Easy"}]},
    {"number": 2085, "slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Counting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "uncommon-words-from-two-sentences", "title": "Uncommon Words from Two Sentences", "difficulty": "Easy"}, {"slug": "kth-distinct-string-in-an-array", "title": "Kth Distinct String in an Array", "difficulty": "Easy"}]},
    {"number": 2089, "slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "rank-transform-of-an-array", "title": "Rank Transform of an Array", "difficulty": "Easy"}, {"slug": "find-words-containing-character", "title": "Find Words Containing Character", "difficulty": "Easy"}]},
    {"number": 2094, "slug": "finding-3-digit-even-numbers", "title": "Finding 3-Digit Even Numbers", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Enumeration"], "similar_problems": [{"slug": "find-numbers-with-even-number-of-digits", "title": "Find Numbers with Even Number of Digits", "difficulty": "Easy"}]},
    {"number": 2099, "slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "maximize-sum-of-array-after-k-negations", "title": "Maximize Sum Of Array After K Negations", "difficulty": "Easy"}, {"slug": "sort-integers-by-the-number-of-1-bits", "title": "Sort Integers by The Number of 1 Bits", "difficulty": "Easy"}, {"slug": "minimum-difference-in-sums-after-removal-of-elements", "title": "Minimum Difference in Sums After Removal of Elements", "difficulty": "Hard"}]},
    {"number": 2103, "slug": "rings-and-rods", "title": "Rings and Rods", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "check-if-all-characters-have-equal-number-of-occurrences", "title": "Check if All Characters Have Equal Number of Occurrences", "difficulty": "Easy"}]},
    {"number": 2108, "slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "String"], "similar_problems": [{"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}]},
    {"number": 2114, "slug": "maximum-number-of-words-found-in-sentences", "title": "Maximum Number of Words Found in Sentences", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "number-of-valid-words-in-a-sentence", "title": "Number of Valid Words in a Sentence", "difficulty": "Easy"}]},
    {"number": 2119, "slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}]},
    {"number": 2124, "slug": "check-if-all-as-appears-before-all-bs", "title": "Check if All A's Appears Before All B's", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "minimum-deletions-to-make-string-balanced", "title": "Minimum Deletions to Make String Balanced", "difficulty": "Medium"}, {"slug": "check-if-array-is-sorted-and-rotated", "title": "Check if Array Is Sorted and Rotated", "difficulty": "Easy"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 2129, "slug": "capitalize-the-title", "title": "Capitalize the Title", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy"}, {"slug": "to-lower-case", "title": "To Lower Case", "difficulty": "Easy"}]},
    {"number": 2133, "slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium"}, {"slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy"}, {"slug": "first-completely-painted-row-or-column", "title": "First Completely Painted Row or Column", "difficulty": "Medium"}]},
    {"number": 2138, "slug": "divide-a-string-into-groups-of-size-k", "title": "Divide a String Into Groups of Size k", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}, {"slug": "positions-of-large-groups", "title": "Positions of Large Groups", "difficulty": "Easy"}]},
    {"number": 2144, "slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": [{"slug": "array-partition", "title": "Array Partition", "difficulty": "Easy"}, {"slug": "minimum-absolute-difference", "title": "Minimum Absolute Difference", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 2148, "slug": "count-elements-with-strictly-smaller-and-greater-elements", "title": "Count Elements With Strictly Smaller and Greater Elements ", "difficulty": "Easy", "tags": ["Array", "Sorting", "Counting"], "similar_problems": [{"slug": "find-smallest-letter-greater-than-target", "title": "Find Smallest Letter Greater Than Target", "difficulty": "Easy"}]},
    {"number": 2154, "slug": "keep-multiplying-found-values-by-two", "title": "Keep Multiplying Found Values by Two", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Simulation"], "similar_problems": [{"slug": "largest-number-at-least-twice-of-others", "title": "Largest Number At Least Twice of Others", "difficulty": "Easy"}, {"slug": "check-if-n-and-its-double-exist", "title": "Check If N and Its Double Exist", "difficulty": "Easy"}]},
    {"number": 2160, "slug": "minimum-sum-of-four-digit-number-after-splitting-digits", "title": "Minimum Sum of Four Digit Number After Splitting Digits", "difficulty": "Easy", "tags": ["Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "difference-between-element-sum-and-digit-sum-of-an-array", "title": "Difference Between Element Sum and Digit Sum of an Array", "difficulty": "Easy"}, {"slug": "alternating-digit-sum", "title": "Alternating Digit Sum", "difficulty": "Easy"}]},
    {"number": 2164, "slug": "sort-even-and-odd-indices-independently", "title": "Sort Even and Odd Indices Independently", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "sort-array-by-parity", "title": "Sort Array By Parity", "difficulty": "Easy"}, {"slug": "sort-array-by-parity-ii", "title": "Sort Array By Parity II", "difficulty": "Easy"}]},
    {"number": 2169, "slug": "count-operations-to-obtain-zero", "title": "Count Operations to Obtain Zero", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "number-of-steps-to-reduce-a-number-to-zero", "title": "Number of Steps to Reduce a Number to Zero", "difficulty": "Easy"}]},
    {"number": 2176, "slug": "count-equal-and-divisible-pairs-in-an-array", "title": "Count Equal and Divisible Pairs in an Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "difficulty": "Medium"}]},
    {"number": 2180, "slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "sum-of-numbers-with-units-digit-k", "title": "Sum of Numbers With Units Digit K", "difficulty": "Medium"}, {"slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy"}, {"slug": "number-of-ways-to-buy-pens-and-pencils", "title": "Number of Ways to Buy Pens and Pencils", "difficulty": "Medium"}, {"slug": "separate-the-digits-in-an-array", "title": "Separate the Digits in an Array", "difficulty": "Easy"}, {"slug": "find-if-digit-game-can-be-won", "title": "Find if Digit Game Can Be Won", "difficulty": "Easy"}]},
    {"number": 2185, "slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy", "tags": ["Array", "String", "String Matching"], "similar_problems": [{"slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy"}, {"slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy"}]},
    {"number": 2190, "slug": "most-frequent-number-following-key-in-an-array", "title": "Most Frequent Number Following Key In an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}]},
    {"number": 2194, "slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy"}, {"slug": "matrix-cells-in-distance-order", "title": "Matrix Cells in Distance Order", "difficulty": "Easy"}]},
    {"number": 2200, "slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "shortest-word-distance", "title": "Shortest Word Distance", "difficulty": "Easy"}, {"slug": "minimum-absolute-difference-between-elements-with-constraint", "title": "Minimum Absolute Difference Between Elements With Constraint", "difficulty": "Medium"}]},
    {"number": 2205, "slug": "the-number-of-users-that-are-eligible-for-discount", "title": "The Number of Users That Are Eligible for Discount", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "nth-highest-salary", "title": "Nth Highest Salary", "difficulty": "Medium"}, {"slug": "the-users-that-are-eligible-for-discount", "title": "The Users That Are Eligible for Discount", "difficulty": "Easy"}]},
    {"number": 2206, "slug": "divide-array-into-equal-pairs", "title": "Divide Array Into Equal Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-ii", "title": "Distribute Elements Into Two Arrays II", "difficulty": "Hard"}]},
    {"number": 2210, "slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "monotonic-array", "title": "Monotonic Array", "difficulty": "Easy"}, {"slug": "minimum-subsequence-in-non-increasing-order", "title": "Minimum Subsequence in Non-Increasing Order", "difficulty": "Easy"}]},
    {"number": 2215, "slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 2220, "slug": "minimum-bit-flips-to-convert-number", "title": "Minimum Bit Flips to Convert Number", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "minimum-flips-to-make-a-or-b-equal-to-c", "title": "Minimum Flips to Make a OR b Equal to c", "difficulty": "Medium"}, {"slug": "minimum-number-of-operations-to-make-array-xor-equal-to-k", "title": "Minimum Number of Operations to Make Array XOR Equal to K", "difficulty": "Medium"}, {"slug": "smallest-number-with-all-set-bits", "title": "Smallest Number With All Set Bits", "difficulty": "Easy"}]},
    {"number": 2224, "slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "coin-change", "title": "Coin Change", "difficulty": "Medium"}, {"slug": "design-an-atm-machine", "title": "Design an ATM Machine", "difficulty": "Medium"}, {"slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy"}]},
    {"number": 2229, "slug": "check-if-an-array-is-consecutive", "title": "Check if an Array Is Consecutive", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "binary-tree-longest-consecutive-sequence", "title": "Binary Tree Longest Consecutive Sequence", "difficulty": "Medium"}, {"slug": "binary-tree-longest-consecutive-sequence-ii", "title": "Binary Tree Longest Consecutive Sequence II", "difficulty": "Medium"}, {"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}]},
    {"number": 2230, "slug": "the-users-that-are-eligible-for-discount", "title": "The Users That Are Eligible for Discount", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "the-number-of-users-that-are-eligible-for-discount", "title": "The Number of Users That Are Eligible for Discount", "difficulty": "Easy"}]},
    {"number": 2231, "slug": "largest-number-after-digit-swaps-by-parity", "title": "Largest Number After Digit Swaps by Parity", "difficulty": "Easy", "tags": ["Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "largest-number-at-least-twice-of-others", "title": "Largest Number At Least Twice of Others", "difficulty": "Easy"}, {"slug": "sort-array-by-parity", "title": "Sort Array By Parity", "difficulty": "Easy"}, {"slug": "sort-array-by-parity-ii", "title": "Sort Array By Parity II", "difficulty": "Easy"}, {"slug": "smallest-string-with-swaps", "title": "Smallest String With Swaps", "difficulty": "Medium"}, {"slug": "rearrange-array-elements-by-sign", "title": "Rearrange Array Elements by Sign", "difficulty": "Medium"}]},
    {"number": 2235, "slug": "add-two-integers", "title": "Add Two Integers", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2236, "slug": "root-equals-sum-of-children", "title": "Root Equals Sum of Children", "difficulty": "Easy", "tags": ["Tree", "Binary Tree"], "similar_problems": []},
    {"number": 2239, "slug": "find-closest-number-to-zero", "title": "Find Closest Number to Zero", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium"}]},
    {"number": 2243, "slug": "calculate-digit-sum-of-a-string", "title": "Calculate Digit Sum of a String", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "find-triangular-sum-of-an-array", "title": "Find Triangular Sum of an Array", "difficulty": "Medium"}]},
    {"number": 2248, "slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Counting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}, {"slug": "find-smallest-common-element-in-all-rows", "title": "Find Smallest Common Element in All Rows", "difficulty": "Medium"}, {"slug": "intersection-of-three-sorted-arrays", "title": "Intersection of Three Sorted Arrays", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}]},
    {"number": 2255, "slug": "count-prefixes-of-a-given-string", "title": "Count Prefixes of a Given String", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": "Easy"}, {"slug": "check-if-string-is-a-prefix-of-array", "title": "Check If String Is a Prefix of Array", "difficulty": "Easy"}, {"slug": "counting-words-with-a-given-prefix", "title": "Counting Words With a Given Prefix", "difficulty": "Easy"}]},
    {"number": 2259, "slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy", "tags": ["String", "Greedy", "Enumeration"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "remove-vowels-from-a-string", "title": "Remove Vowels from a String", "difficulty": "Easy"}, {"slug": "second-largest-digit-in-a-string", "title": "Second Largest Digit in a String", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 2264, "slug": "largest-3-same-digit-number-in-string", "title": "Largest 3-Same-Digit Number in String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "largest-odd-number-in-string", "title": "Largest Odd Number in String", "difficulty": "Easy"}]},
    {"number": 2269, "slug": "find-the-k-beauty-of-a-number", "title": "Find the K-Beauty of a Number", "difficulty": "Easy", "tags": ["Math", "String", "Sliding Window"], "similar_problems": []},
    {"number": 2273, "slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}]},
    {"number": 2278, "slug": "percentage-of-letter-in-string", "title": "Percentage of Letter in String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}]},
    {"number": 2283, "slug": "check-if-number-has-equal-digit-count-and-digit-value", "title": "Check if Number Has Equal Digit Count and Digit Value", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "self-dividing-numbers", "title": "Self Dividing Numbers", "difficulty": "Easy"}]},
    {"number": 2287, "slug": "rearrange-characters-to-make-target-string", "title": "Rearrange Characters to Make Target String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "find-words-that-can-be-formed-by-characters", "title": "Find Words That Can Be Formed by Characters", "difficulty": "Easy"}, {"slug": "maximum-number-of-occurrences-of-a-substring", "title": "Maximum Number of Occurrences of a Substring", "difficulty": "Medium"}]},
    {"number": 2293, "slug": "min-max-game", "title": "Min Max Game", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "elimination-game", "title": "Elimination Game", "difficulty": "Medium"}, {"slug": "find-triangular-sum-of-an-array", "title": "Find Triangular Sum of an Array", "difficulty": "Medium"}]},
    {"number": 2299, "slug": "strong-password-checker-ii", "title": "Strong Password Checker II", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "strong-password-checker", "title": "Strong Password Checker", "difficulty": "Hard"}, {"slug": "validate-ip-address", "title": "Validate IP Address", "difficulty": "Medium"}]},
    {"number": 2303, "slug": "calculate-amount-paid-in-taxes", "title": "Calculate Amount Paid in Taxes", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 2309, "slug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "difficulty": "Easy", "tags": ["Hash Table", "String", "Enumeration"], "similar_problems": [{"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}, {"slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy"}]},
    {"number": 2315, "slug": "count-asterisks", "title": "Count Asterisks", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2319, "slug": "check-if-matrix-is-x-matrix", "title": "Check if Matrix Is X-Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "matrix-diagonal-sum", "title": "Matrix Diagonal Sum", "difficulty": "Easy"}]},
    {"number": 2325, "slug": "decode-the-message", "title": "Decode the Message", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 2329, "slug": "product-sales-analysis-v", "title": "Product Sales Analysis V", "difficulty": "Easy", "tags": ["Database"], "similar_problems": [{"slug": "product-sales-analysis-i", "title": "Product Sales Analysis I", "difficulty": "Easy"}, {"slug": "product-sales-analysis-ii", "title": "Product Sales Analysis II", "difficulty": "Easy"}, {"slug": "product-sales-analysis-iii", "title": "Product Sales Analysis III", "difficulty": "Medium"}]},
    {"number": 2331, "slug": "evaluate-boolean-binary-tree", "title": "Evaluate Boolean Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "check-if-two-expression-trees-are-equivalent", "title": "Check If Two Expression Trees are Equivalent", "difficulty": "Medium"}, {"slug": "design-an-expression-tree-with-evaluate-function", "title": "Design an Expression Tree With Evaluate Function", "difficulty": "Medium"}, {"slug": "minimum-flips-in-binary-tree-to-get-result", "title": "Minimum Flips in Binary Tree to Get Result", "difficulty": "Hard"}]},
    {"number": 2335, "slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "construct-target-array-with-multiple-sums", "title": "Construct Target Array With Multiple Sums", "difficulty": "Hard"}, {"slug": "maximum-score-from-removing-stones", "title": "Maximum Score From Removing Stones", "difficulty": "Medium"}, {"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}]},
    {"number": 2339, "slug": "all-the-matches-of-the-league", "title": "All the Matches of the League", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2341, "slug": "maximum-number-of-pairs-in-array", "title": "Maximum Number of Pairs in Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}, {"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}]},
    {"number": 2347, "slug": "best-poker-hand", "title": "Best Poker Hand", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 2351, "slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy", "tags": ["Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy"}]},
    {"number": 2356, "slug": "number-of-unique-subjects-taught-by-each-teacher", "title": "Number of Unique Subjects Taught by Each Teacher", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2357, "slug": "make-array-zero-by-subtracting-equal-amounts", "title": "Make Array Zero by Subtracting Equal Amounts", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Simulation"], "similar_problems": [{"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}]},
    {"number": 2363, "slug": "merge-similar-items", "title": "Merge Similar Items", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 2367, "slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Enumeration"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "number-of-unequal-triplets-in-array", "title": "Number of Unequal Triplets in Array", "difficulty": "Easy"}, {"slug": "maximum-value-of-an-ordered-triplet-i", "title": "Maximum Value of an Ordered Triplet I", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy"}]},
    {"number": 2373, "slug": "largest-local-values-in-a-matrix", "title": "Largest Local Values in a Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2377, "slug": "sort-the-olympic-table", "title": "Sort the Olympic Table", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2379, "slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy", "tags": ["String", "Sliding Window"], "similar_problems": [{"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "maximum-points-you-can-obtain-from-cards", "title": "Maximum Points You Can Obtain from Cards", "difficulty": "Medium"}, {"slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium"}]},
    {"number": 2383, "slug": "minimum-hours-of-training-to-win-a-competition", "title": "Minimum Hours of Training to Win a Competition", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 2389, "slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}]},
    {"number": 2395, "slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "find-two-non-overlapping-sub-arrays-each-with-target-sum", "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum", "difficulty": "Medium"}]},
    {"number": 2399, "slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "shortest-distance-to-a-character", "title": "Shortest Distance to a Character", "difficulty": "Easy"}]},
    {"number": 2404, "slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "majority-element-ii", "title": "Majority Element II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}]},
    {"number": 2409, "slug": "count-days-spent-together", "title": "Count Days Spent Together", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "number-of-days-between-two-dates", "title": "Number of Days Between Two Dates", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}]},
    {"number": 2413, "slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy", "tags": ["Math", "Number Theory"], "similar_problems": [{"slug": "greatest-common-divisor-of-strings", "title": "Greatest Common Divisor of Strings", "difficulty": "Easy"}, {"slug": "three-divisors", "title": "Three Divisors", "difficulty": "Easy"}, {"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}, {"slug": "convert-the-temperature", "title": "Convert the Temperature", "difficulty": "Easy"}, {"slug": "minimum-cuts-to-divide-a-circle", "title": "Minimum Cuts to Divide a Circle", "difficulty": "Easy"}]},
    {"number": 2418, "slug": "sort-the-people", "title": "Sort the People", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "sort-array-by-increasing-frequency", "title": "Sort Array by Increasing Frequency", "difficulty": "Easy"}, {"slug": "sort-the-students-by-their-kth-score", "title": "Sort the Students by Their Kth Score", "difficulty": "Medium"}]},
    {"number": 2423, "slug": "remove-letter-to-equalize-frequency", "title": "Remove Letter To Equalize Frequency", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "maximum-equal-frequency", "title": "Maximum Equal Frequency", "difficulty": "Hard"}, {"slug": "minimum-deletions-to-make-character-frequencies-unique", "title": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": "Medium"}]},
    {"number": 2427, "slug": "number-of-common-factors", "title": "Number of Common Factors", "difficulty": "Easy", "tags": ["Math", "Enumeration", "Number Theory"], "similar_problems": [{"slug": "count-primes", "title": "Count Primes", "difficulty": "Medium"}]},
    {"number": 2432, "slug": "the-employee-that-worked-on-the-longest-task", "title": "The Employee That Worked on the Longest Task", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 2437, "slug": "number-of-valid-clock-times", "title": "Number of Valid Clock Times", "difficulty": "Easy", "tags": ["String", "Enumeration"], "similar_problems": [{"slug": "largest-time-for-given-digits", "title": "Largest Time for Given Digits", "difficulty": "Medium"}, {"slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy"}]},
    {"number": 2441, "slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}]},
    {"number": 2446, "slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "non-overlapping-intervals", "title": "Non-overlapping Intervals", "difficulty": "Medium"}, {"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}]},
    {"number": 2451, "slug": "odd-string-difference", "title": "Odd String Difference", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String"], "similar_problems": [{"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}]},
    {"number": 2455, "slug": "average-value-of-even-numbers-that-are-divisible-by-three", "title": "Average Value of Even Numbers That Are Divisible by Three", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "binary-prefix-divisible-by-5", "title": "Binary Prefix Divisible By 5", "difficulty": "Easy"}]},
    {"number": 2460, "slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Simulation"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "Easy"}, {"slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "Easy"}]},
    {"number": 2465, "slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "finding-pairs-with-a-certain-sum", "title": "Finding Pairs With a Certain Sum", "difficulty": "Medium"}, {"slug": "minimum-average-of-smallest-and-largest-elements", "title": "Minimum Average of Smallest and Largest Elements", "difficulty": "Easy"}]},
    {"number": 2469, "slug": "convert-the-temperature", "title": "Convert the Temperature", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}]},
    {"number": 2475, "slug": "number-of-unequal-triplets-in-array", "title": "Number of Unequal Triplets in Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "count-good-triplets", "title": "Count Good Triplets", "difficulty": "Easy"}, {"slug": "count-square-sum-triples", "title": "Count Square Sum Triples", "difficulty": "Easy"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}]},
    {"number": 2480, "slug": "form-a-chemical-bond", "title": "Form a Chemical Bond", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2481, "slug": "minimum-cuts-to-divide-a-circle", "title": "Minimum Cuts to Divide a Circle", "difficulty": "Easy", "tags": ["Math", "Geometry"], "similar_problems": [{"slug": "smallest-even-multiple", "title": "Smallest Even Multiple", "difficulty": "Easy"}, {"slug": "count-total-number-of-colored-cells", "title": "Count Total Number of Colored Cells", "difficulty": "Medium"}]},
    {"number": 2485, "slug": "find-the-pivot-integer", "title": "Find the Pivot Integer", "difficulty": "Easy", "tags": ["Math", "Prefix Sum"], "similar_problems": [{"slug": "bulb-switcher", "title": "Bulb Switcher", "difficulty": "Medium"}]},
    {"number": 2490, "slug": "circular-sentence", "title": "Circular Sentence", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy"}]},
    {"number": 2496, "slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 2500, "slug": "delete-greatest-value-in-each-row", "title": "Delete Greatest Value in Each Row", "difficulty": "Easy", "tags": ["Array", "Sorting", "Heap (Priority Queue)", "Matrix", "Simulation"], "similar_problems": [{"slug": "equal-row-and-column-pairs", "title": "Equal Row and Column Pairs", "difficulty": "Medium"}]},
    {"number": 2504, "slug": "concatenate-the-name-and-the-profession", "title": "Concatenate the Name and the Profession", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2506, "slug": "count-pairs-of-similar-strings", "title": "Count Pairs Of Similar Strings", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "count-the-number-of-consistent-strings", "title": "Count the Number of Consistent Strings", "difficulty": "Easy"}, {"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}]},
    {"number": 2511, "slug": "maximum-enemy-forts-that-can-be-captured", "title": "Maximum Enemy Forts That Can Be Captured", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}]},
    {"number": 2515, "slug": "shortest-distance-to-target-string-in-a-circular-array", "title": "Shortest Distance to Target String in a Circular Array", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "defuse-the-bomb", "title": "Defuse the Bomb", "difficulty": "Easy"}]},
    {"number": 2520, "slug": "count-the-digits-that-divide-a-number", "title": "Count the Digits That Divide a Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}, {"slug": "self-dividing-numbers", "title": "Self Dividing Numbers", "difficulty": "Easy"}]},
    {"number": 2525, "slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "fizz-buzz", "title": "Fizz Buzz", "difficulty": "Easy"}, {"slug": "find-winner-on-a-tic-tac-toe-game", "title": "Find Winner on a Tic Tac Toe Game", "difficulty": "Easy"}, {"slug": "best-poker-hand", "title": "Best Poker Hand", "difficulty": "Easy"}]},
    {"number": 2529, "slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Counting"], "similar_problems": [{"slug": "binary-search", "title": "Binary Search", "difficulty": "Easy"}, {"slug": "count-negative-numbers-in-a-sorted-matrix", "title": "Count Negative Numbers in a Sorted Matrix", "difficulty": "Easy"}]},
    {"number": 2535, "slug": "difference-between-element-sum-and-digit-sum-of-an-array", "title": "Difference Between Element Sum and Digit Sum of an Array", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "minimum-sum-of-four-digit-number-after-splitting-digits", "title": "Minimum Sum of Four Digit Number After Splitting Digits", "difficulty": "Easy"}]},
    {"number": 2540, "slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}]},
    {"number": 2544, "slug": "alternating-digit-sum", "title": "Alternating Digit Sum", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "minimum-sum-of-four-digit-number-after-splitting-digits", "title": "Minimum Sum of Four Digit Number After Splitting Digits", "difficulty": "Easy"}, {"slug": "separate-the-digits-in-an-array", "title": "Separate the Digits in an Array", "difficulty": "Easy"}]},
    {"number": 2549, "slug": "count-distinct-numbers-on-board", "title": "Count Distinct Numbers on Board", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Simulation"], "similar_problems": [{"slug": "count-of-matches-in-tournament", "title": "Count of Matches in Tournament", "difficulty": "Easy"}]},
    {"number": 2553, "slug": "separate-the-digits-in-an-array", "title": "Separate the Digits in an Array", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy"}, {"slug": "alternating-digit-sum", "title": "Alternating Digit Sum", "difficulty": "Easy"}]},
    {"number": 2558, "slug": "take-gifts-from-the-richest-pile", "title": "Take Gifts From the Richest Pile", "difficulty": "Easy", "tags": ["Array", "Heap (Priority Queue)", "Simulation"], "similar_problems": [{"slug": "remove-stones-to-minimize-the-total", "title": "Remove Stones to Minimize the Total", "difficulty": "Medium"}]},
    {"number": 2562, "slug": "find-the-array-concatenation-value", "title": "Find the Array Concatenation Value", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Simulation"], "similar_problems": []},
    {"number": 2566, "slug": "maximum-difference-by-remapping-a-digit", "title": "Maximum Difference by Remapping a Digit", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": []},
    {"number": 2570, "slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "meeting-scheduler", "title": "Meeting Scheduler", "difficulty": "Medium"}, {"slug": "merge-similar-items", "title": "Merge Similar Items", "difficulty": "Easy"}]},
    {"number": 2574, "slug": "left-and-right-sum-differences", "title": "Left and Right Sum Differences", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "find-pivot-index", "title": "Find Pivot Index", "difficulty": "Easy"}, {"slug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "difficulty": "Easy"}, {"slug": "find-the-distinct-difference-array", "title": "Find the Distinct Difference Array", "difficulty": "Easy"}, {"slug": "find-the-n-th-value-after-k-seconds", "title": "Find the N-th Value After K Seconds", "difficulty": "Medium"}]},
    {"number": 2578, "slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy", "tags": ["Math", "Greedy", "Sorting"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "minimum-cost-to-move-chips-to-the-same-position", "title": "Minimum Cost to Move Chips to The Same Position", "difficulty": "Easy"}, {"slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard"}, {"slug": "minimum-sum-of-values-by-dividing-array", "title": "Minimum Sum of Values by Dividing Array", "difficulty": "Hard"}]},
    {"number": 2582, "slug": "pass-the-pillow", "title": "Pass the Pillow", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "find-the-student-that-will-replace-the-chalk", "title": "Find the Student that Will Replace the Chalk", "difficulty": "Medium"}]},
    {"number": 2586, "slug": "count-the-number-of-vowel-strings-in-range", "title": "Count the Number of Vowel Strings in Range", "difficulty": "Easy", "tags": ["Array", "String", "Counting"], "similar_problems": []},
    {"number": 2591, "slug": "distribute-money-to-maximum-children", "title": "Distribute Money to Maximum Children", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "distribute-candies-to-people", "title": "Distribute Candies to People", "difficulty": "Easy"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "calculate-money-in-leetcode-bank", "title": "Calculate Money in Leetcode Bank", "difficulty": "Easy"}]},
    {"number": 2595, "slug": "number-of-even-and-odd-bits", "title": "Number of Even and Odd Bits", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "find-numbers-with-even-number-of-digits", "title": "Find Numbers with Even Number of Digits", "difficulty": "Easy"}]},
    {"number": 2600, "slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy", "tags": ["Math", "Greedy"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}]},
    {"number": 2605, "slug": "form-smallest-number-from-two-digit-arrays", "title": "Form Smallest Number From Two Digit Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Enumeration"], "similar_problems": []},
    {"number": 2609, "slug": "find-the-longest-balanced-substring-of-a-binary-string", "title": "Find the Longest Balanced Substring of a Binary String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2614, "slug": "prime-in-diagonal", "title": "Prime In Diagonal", "difficulty": "Easy", "tags": ["Array", "Math", "Matrix", "Number Theory"], "similar_problems": []},
    {"number": 2619, "slug": "array-prototype-last", "title": "Array Prototype Last", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "snail-traversal", "title": "Snail Traversal", "difficulty": "Medium"}, {"slug": "array-upper-bound", "title": "Array Upper Bound", "difficulty": "Easy"}]},
    {"number": 2620, "slug": "counter", "title": "Counter", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "memoize", "title": "Memoize", "difficulty": "Medium"}, {"slug": "function-composition", "title": "Function Composition", "difficulty": "Easy"}, {"slug": "counter-ii", "title": "Counter II", "difficulty": "Easy"}]},
    {"number": 2621, "slug": "sleep", "title": "Sleep", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "promise-time-limit", "title": "Promise Time Limit", "difficulty": "Medium"}, {"slug": "promise-pool", "title": "Promise Pool", "difficulty": "Medium"}]},
    {"number": 2626, "slug": "array-reduce-transformation", "title": "Array Reduce Transformation", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "group-by", "title": "Group By", "difficulty": "Medium"}, {"slug": "filter-elements-from-array", "title": "Filter Elements from Array", "difficulty": "Easy"}, {"slug": "apply-transform-over-each-element-in-array", "title": "Apply Transform Over Each Element in Array", "difficulty": "Easy"}]},
    {"number": 2629, "slug": "function-composition", "title": "Function Composition", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "memoize", "title": "Memoize", "difficulty": "Medium"}, {"slug": "counter", "title": "Counter", "difficulty": "Easy"}]},
    {"number": 2634, "slug": "filter-elements-from-array", "title": "Filter Elements from Array", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "group-by", "title": "Group By", "difficulty": "Medium"}, {"slug": "apply-transform-over-each-element-in-array", "title": "Apply Transform Over Each Element in Array", "difficulty": "Easy"}, {"slug": "array-reduce-transformation", "title": "Array Reduce Transformation", "difficulty": "Easy"}]},
    {"number": 2635, "slug": "apply-transform-over-each-element-in-array", "title": "Apply Transform Over Each Element in Array", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "group-by", "title": "Group By", "difficulty": "Medium"}, {"slug": "filter-elements-from-array", "title": "Filter Elements from Array", "difficulty": "Easy"}, {"slug": "array-reduce-transformation", "title": "Array Reduce Transformation", "difficulty": "Easy"}]},
    {"number": 2639, "slug": "find-the-width-of-columns-of-a-grid", "title": "Find the Width of Columns of a Grid", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "next-greater-numerically-balanced-number", "title": "Next Greater Numerically Balanced Number", "difficulty": "Medium"}]},
    {"number": 2643, "slug": "row-with-maximum-ones", "title": "Row With Maximum Ones", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2644, "slug": "find-the-maximum-divisibility-score", "title": "Find the Maximum Divisibility Score", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "binary-prefix-divisible-by-5", "title": "Binary Prefix Divisible By 5", "difficulty": "Easy"}]},
    {"number": 2648, "slug": "generate-fibonacci-sequence", "title": "Generate Fibonacci Sequence", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "nested-array-generator", "title": "Nested Array Generator", "difficulty": "Medium"}, {"slug": "design-cancellable-function", "title": "Design Cancellable Function", "difficulty": "Hard"}]},
    {"number": 2651, "slug": "calculate-delayed-arrival-time", "title": "Calculate Delayed Arrival Time", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2652, "slug": "sum-multiples", "title": "Sum Multiples", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2656, "slug": "maximum-sum-with-exactly-k-elements", "title": "Maximum Sum With Exactly K Elements ", "difficulty": "Easy", "tags": ["Array", "Greedy"], "similar_problems": []},
    {"number": 2660, "slug": "determine-the-winner-of-a-bowling-game", "title": "Determine the Winner of a Bowling Game", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "high-five", "title": "High Five", "difficulty": "Easy"}]},
    {"number": 2665, "slug": "counter-ii", "title": "Counter II", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "counter", "title": "Counter", "difficulty": "Easy"}]},
    {"number": 2666, "slug": "allow-one-function-call", "title": "Allow One Function Call", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2667, "slug": "create-hello-world-function", "title": "Create Hello World Function", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2668, "slug": "find-latest-salaries", "title": "Find Latest Salaries", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2669, "slug": "count-artist-occurrences-on-spotify-ranking-list", "title": "Count Artist Occurrences On Spotify Ranking List", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2670, "slug": "find-the-distinct-difference-array", "title": "Find the Distinct Difference Array", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "left-and-right-sum-differences", "title": "Left and Right Sum Differences", "difficulty": "Easy"}]},
    {"number": 2677, "slug": "chunk-array", "title": "Chunk Array", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2678, "slug": "number-of-senior-citizens", "title": "Number of Senior Citizens", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": []},
    {"number": 2682, "slug": "find-the-losers-of-the-circular-game", "title": "Find the Losers of the Circular Game", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Simulation"], "similar_problems": [{"slug": "find-the-child-who-has-the-ball-after-k-seconds", "title": "Find the Child Who Has the Ball After K Seconds", "difficulty": "Easy"}]},
    {"number": 2687, "slug": "bikes-last-time-used", "title": "Bikes Last Time Used ", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2689, "slug": "extract-kth-character-from-the-rope-tree", "title": "Extract Kth Character From The Rope Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 2690, "slug": "infinite-method-object", "title": "Infinite Method Object", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "immutability-helper", "title": "Immutability Helper", "difficulty": "Hard"}, {"slug": "make-object-immutable", "title": "Make Object Immutable", "difficulty": "Medium"}]},
    {"number": 2695, "slug": "array-wrapper", "title": "Array Wrapper", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2696, "slug": "minimum-string-length-after-removing-substrings", "title": "Minimum String Length After Removing Substrings", "difficulty": "Easy", "tags": ["String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 2697, "slug": "lexicographically-smallest-palindrome", "title": "Lexicographically Smallest Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Greedy"], "similar_problems": []},
    {"number": 2703, "slug": "return-length-of-arguments-passed", "title": "Return Length of Arguments Passed", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2704, "slug": "to-be-or-not-to-be", "title": "To Be Or Not To Be", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2706, "slug": "buy-two-chocolates", "title": "Buy Two Chocolates", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 2710, "slug": "remove-trailing-zeros-from-a-string", "title": "Remove Trailing Zeros From a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "check-if-bitwise-or-has-trailing-zeros", "title": "Check if Bitwise OR Has Trailing Zeros", "difficulty": "Easy"}]},
    {"number": 2715, "slug": "timeout-cancellation", "title": "Timeout Cancellation", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2716, "slug": "minimize-string-length", "title": "Minimize String Length", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}, {"slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium"}]},
    {"number": 2717, "slug": "semi-ordered-permutation", "title": "Semi-Ordered Permutation", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 2723, "slug": "add-two-promises", "title": "Add Two Promises", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2724, "slug": "sort-by", "title": "Sort By", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2725, "slug": "interval-cancellation", "title": "Interval Cancellation", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2726, "slug": "calculator-with-method-chaining", "title": "Calculator with Method Chaining", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2727, "slug": "is-object-empty", "title": "Is Object Empty", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2728, "slug": "count-houses-in-a-circular-street", "title": "Count Houses in a Circular Street", "difficulty": "Easy", "tags": ["Array", "Interactive"], "similar_problems": []},
    {"number": 2729, "slug": "check-if-the-number-is-fascinating", "title": "Check if The Number is Fascinating", "difficulty": "Easy", "tags": ["Hash Table", "Math"], "similar_problems": []},
    {"number": 2733, "slug": "neither-minimum-nor-maximum", "title": "Neither Minimum nor Maximum", "difficulty": "Easy", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}]},
    {"number": 2739, "slug": "total-distance-traveled", "title": "Total Distance Traveled", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": []},
    {"number": 2744, "slug": "find-maximum-number-of-string-pairs", "title": "Find Maximum Number of String Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Simulation"], "similar_problems": [{"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}]},
    {"number": 2748, "slug": "number-of-beautiful-pairs", "title": "Number of Beautiful Pairs", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Counting", "Number Theory"], "similar_problems": []},
    {"number": 2758, "slug": "next-day", "title": "Next Day", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2760, "slug": "longest-even-odd-subarray-with-threshold", "title": "Longest Even Odd Subarray With Threshold", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": []},
    {"number": 2765, "slug": "longest-alternating-subarray", "title": "Longest Alternating Subarray", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": [{"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}]},
    {"number": 2769, "slug": "find-the-maximum-achievable-number", "title": "Find the Maximum Achievable Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2774, "slug": "array-upper-bound", "title": "Array Upper Bound", "difficulty": "Easy", "tags": [], "similar_problems": [{"slug": "array-prototype-last", "title": "Array Prototype Last", "difficulty": "Easy"}, {"slug": "group-by", "title": "Group By", "difficulty": "Medium"}, {"slug": "snail-traversal", "title": "Snail Traversal", "difficulty": "Medium"}]},
    {"number": 2778, "slug": "sum-of-squares-of-special-elements", "title": "Sum of Squares of Special Elements ", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": [{"slug": "sum-of-square-numbers", "title": "Sum of Square Numbers", "difficulty": "Medium"}, {"slug": "sum-of-all-odd-length-subarrays", "title": "Sum of All Odd Length Subarrays", "difficulty": "Easy"}]},
    {"number": 2784, "slug": "check-if-array-is-good", "title": "Check if Array is Good", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": []},
    {"number": 2788, "slug": "split-strings-by-separator", "title": "Split Strings by Separator", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "split-a-string-in-balanced-strings", "title": "Split a String in Balanced Strings", "difficulty": "Easy"}]},
    {"number": 2794, "slug": "create-object-from-two-arrays", "title": "Create Object from Two Arrays", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2796, "slug": "repeat-string", "title": "Repeat String", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2797, "slug": "partial-function-with-placeholders", "title": "Partial Function with Placeholders", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2798, "slug": "number-of-employees-who-met-the-target", "title": "Number of Employees Who Met the Target", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}]},
    {"number": 2803, "slug": "factorial-generator", "title": "Factorial Generator", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2804, "slug": "array-prototype-foreach", "title": "Array Prototype ForEach", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2806, "slug": "account-balance-after-rounded-purchase", "title": "Account Balance After Rounded Purchase", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2810, "slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}, {"slug": "reverse-only-letters", "title": "Reverse Only Letters", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy"}, {"slug": "find-the-original-typed-string-ii", "title": "Find the Original Typed String II", "difficulty": "Hard"}]},
    {"number": 2815, "slug": "max-pair-sum-in-an-array", "title": "Max Pair Sum in an Array", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 2822, "slug": "inversion-of-object", "title": "Inversion of Object", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2824, "slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium"}]},
    {"number": 2828, "slug": "check-if-a-string-is-an-acronym-of-words", "title": "Check if a String Is an Acronym of Words", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "word-abbreviation", "title": "Word Abbreviation", "difficulty": "Hard"}]},
    {"number": 2833, "slug": "furthest-point-from-origin", "title": "Furthest Point From Origin", "difficulty": "Easy", "tags": ["String", "Counting"], "similar_problems": [{"slug": "robot-return-to-origin", "title": "Robot Return to Origin", "difficulty": "Easy"}]},
    {"number": 2837, "slug": "total-traveled-distance", "title": "Total Traveled Distance", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2839, "slug": "check-if-strings-can-be-made-equal-with-operations-i", "title": "Check if Strings Can be Made Equal With Operations I", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 2843, "slug": "count-symmetric-integers", "title": "  Count Symmetric Integers", "difficulty": "Easy", "tags": ["Math", "Enumeration"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "sum-of-digits-in-base-k", "title": "Sum of Digits in Base K", "difficulty": "Easy"}]},
    {"number": 2848, "slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}]},
    {"number": 2853, "slug": "highest-salaries-difference", "title": "Highest Salaries Difference", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2855, "slug": "minimum-right-shifts-to-sort-the-array", "title": "Minimum Right Shifts to Sort the Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 2859, "slug": "sum-of-values-at-indices-with-k-set-bits", "title": "Sum of Values at Indices With K Set Bits", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy"}, {"slug": "find-the-k-or-of-an-array", "title": "Find the K-or of an Array", "difficulty": "Easy"}]},
    {"number": 2864, "slug": "maximum-odd-binary-number", "title": "Maximum Odd Binary Number", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": []},
    {"number": 2869, "slug": "minimum-operations-to-collect-elements", "title": "Minimum Operations to Collect Elements", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation"], "similar_problems": [{"slug": "build-an-array-with-stack-operations", "title": "Build an Array With Stack Operations", "difficulty": "Medium"}]},
    {"number": 2873, "slug": "maximum-value-of-an-ordered-triplet-i", "title": "Maximum Value of an Ordered Triplet I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy"}]},
    {"number": 2877, "slug": "create-a-dataframe-from-list", "title": "Create a DataFrame from List", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2878, "slug": "get-the-size-of-a-dataframe", "title": "Get the Size of a DataFrame", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2879, "slug": "display-the-first-three-rows", "title": "Display the First Three Rows", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2880, "slug": "select-data", "title": "Select Data", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2881, "slug": "create-a-new-column", "title": "Create a New Column", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2882, "slug": "drop-duplicate-rows", "title": "Drop Duplicate Rows", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2883, "slug": "drop-missing-data", "title": "Drop Missing Data", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2884, "slug": "modify-columns", "title": "Modify Columns", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2885, "slug": "rename-columns", "title": "Rename Columns", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2886, "slug": "change-data-type", "title": "Change Data Type", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2887, "slug": "fill-missing-data", "title": "Fill Missing Data", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2888, "slug": "reshape-data-concatenate", "title": "Reshape Data: Concatenate", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2889, "slug": "reshape-data-pivot", "title": "Reshape Data: Pivot", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2890, "slug": "reshape-data-melt", "title": "Reshape Data: Melt", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2891, "slug": "method-chaining", "title": "Method Chaining", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 2894, "slug": "divisible-and-non-divisible-sums-difference", "title": "Divisible and Non-divisible Sums Difference", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 2899, "slug": "last-visited-integers", "title": "Last Visited Integers", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 2900, "slug": "longest-unequal-adjacent-groups-subsequence-i", "title": "Longest Unequal Adjacent Groups Subsequence I", "difficulty": "Easy", "tags": ["Array", "String", "Dynamic Programming", "Greedy"], "similar_problems": []},
    {"number": 2903, "slug": "find-indices-with-index-and-value-difference-i", "title": "Find Indices With Index and Value Difference I", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "minimum-absolute-difference-between-elements-with-constraint", "title": "Minimum Absolute Difference Between Elements With Constraint", "difficulty": "Medium"}, {"slug": "find-indices-with-index-and-value-difference-ii", "title": "Find Indices With Index and Value Difference II", "difficulty": "Medium"}]},
    {"number": 2908, "slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "maximum-value-of-an-ordered-triplet-i", "title": "Maximum Value of an Ordered Triplet I", "difficulty": "Easy"}]},
    {"number": 2913, "slug": "subarrays-distinct-element-sum-of-squares-i", "title": "Subarrays Distinct Element Sum of Squares I", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 2917, "slug": "find-the-k-or-of-an-array", "title": "Find the K-or of an Array", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy"}, {"slug": "sum-of-values-at-indices-with-k-set-bits", "title": "Sum of Values at Indices With K Set Bits", "difficulty": "Easy"}]},
    {"number": 2923, "slug": "find-champion-i", "title": "Find Champion I", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 2928, "slug": "distribute-candies-among-children-i", "title": "Distribute Candies Among Children I", "difficulty": "Easy", "tags": ["Math", "Combinatorics", "Enumeration"], "similar_problems": [{"slug": "count-ways-to-distribute-candies", "title": "Count Ways to Distribute Candies", "difficulty": "Hard"}]},
    {"number": 2932, "slug": "maximum-strong-pair-xor-i", "title": "Maximum Strong Pair XOR I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation", "Trie", "Sliding Window"], "similar_problems": [{"slug": "maximum-xor-of-two-numbers-in-an-array", "title": "Maximum XOR of Two Numbers in an Array", "difficulty": "Medium"}, {"slug": "maximum-xor-with-an-element-from-array", "title": "Maximum XOR With an Element From Array", "difficulty": "Hard"}]},
    {"number": 2937, "slug": "make-three-strings-equal", "title": "Make Three Strings Equal", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "delete-operation-for-two-strings", "title": "Delete Operation for Two Strings", "difficulty": "Medium"}]},
    {"number": 2942, "slug": "find-words-containing-character", "title": "Find Words Containing Character", "difficulty": "Easy", "tags": ["Array", "String"], "similar_problems": [{"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 2946, "slug": "matrix-similarity-after-cyclic-shifts", "title": "Matrix Similarity After Cyclic Shifts", "difficulty": "Easy", "tags": ["Array", "Math", "Matrix", "Simulation"], "similar_problems": []},
    {"number": 2951, "slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium"}]},
    {"number": 2956, "slug": "find-common-elements-between-two-arrays", "title": "Find Common Elements Between Two Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 2960, "slug": "count-tested-devices-after-test-operations", "title": "Count Tested Devices After Test Operations", "difficulty": "Easy", "tags": ["Array", "Simulation", "Counting"], "similar_problems": []},
    {"number": 2965, "slug": "find-missing-and-repeated-values", "title": "Find Missing and Repeated Values", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Matrix"], "similar_problems": []},
    {"number": 2970, "slug": "count-the-number-of-incremovable-subarrays-i", "title": "Count the Number of Incremovable Subarrays I", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Enumeration"], "similar_problems": [{"slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium"}, {"slug": "number-of-subarrays-that-match-a-pattern-i", "title": "Number of Subarrays That Match a Pattern I", "difficulty": "Medium"}]},
    {"number": 2974, "slug": "minimum-number-game", "title": "Minimum Number Game", "difficulty": "Easy", "tags": ["Array", "Sorting", "Heap (Priority Queue)", "Simulation"], "similar_problems": []},
    {"number": 2980, "slug": "check-if-bitwise-or-has-trailing-zeros", "title": "Check if Bitwise OR Has Trailing Zeros", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "count-odd-numbers-in-an-interval-range", "title": "Count Odd Numbers in an Interval Range", "difficulty": "Easy"}, {"slug": "remove-trailing-zeros-from-a-string", "title": "Remove Trailing Zeros From a String", "difficulty": "Easy"}]},
    {"number": 2985, "slug": "calculate-compressed-mean", "title": "Calculate Compressed Mean", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2987, "slug": "find-expensive-cities", "title": "Find Expensive Cities", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2990, "slug": "loan-types", "title": "Loan Types", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 2996, "slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy"}, {"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}]},
    {"number": 3000, "slug": "maximum-area-of-longest-diagonal-rectangle", "title": "Maximum Area of Longest Diagonal Rectangle", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3005, "slug": "count-elements-with-maximum-frequency", "title": "Count Elements With Maximum Frequency", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "maximum-frequency-of-an-element-after-performing-operations-i", "title": "Maximum Frequency of an Element After Performing Operations I", "difficulty": "Medium"}, {"slug": "maximum-frequency-of-an-element-after-performing-operations-ii", "title": "Maximum Frequency of an Element After Performing Operations II", "difficulty": "Hard"}, {"slug": "maximum-difference-between-even-and-odd-frequency-ii", "title": "Maximum Difference Between Even and Odd Frequency II", "difficulty": "Hard"}]},
    {"number": 3010, "slug": "divide-an-array-into-subarrays-with-minimum-cost-i", "title": "Divide an Array Into Subarrays With Minimum Cost I", "difficulty": "Easy", "tags": ["Array", "Sorting", "Enumeration"], "similar_problems": []},
    {"number": 3014, "slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy", "tags": ["Math", "String", "Greedy"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}]},
    {"number": 3019, "slug": "number-of-changing-keys", "title": "Number of Changing Keys", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3024, "slug": "type-of-triangle", "title": "Type of Triangle", "difficulty": "Easy", "tags": ["Array", "Math", "Sorting"], "similar_problems": []},
    {"number": 3028, "slug": "ant-on-the-boundary", "title": "Ant on the Boundary", "difficulty": "Easy", "tags": ["Array", "Simulation", "Prefix Sum"], "similar_problems": []},
    {"number": 3032, "slug": "count-numbers-with-unique-digits-ii", "title": "Count Numbers With Unique Digits II", "difficulty": "Easy", "tags": ["Hash Table", "Math", "Dynamic Programming"], "similar_problems": [{"slug": "count-numbers-with-unique-digits", "title": "Count Numbers with Unique Digits", "difficulty": "Medium"}]},
    {"number": 3033, "slug": "modify-the-matrix", "title": "Modify the Matrix", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": []},
    {"number": 3038, "slug": "maximum-number-of-operations-with-the-same-score-i", "title": "Maximum Number of Operations With the Same Score I", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 3042, "slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}, {"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}]},
    {"number": 3046, "slug": "split-the-array", "title": "Split the Array", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": []},
    {"number": 3051, "slug": "find-candidates-for-data-scientist-position", "title": "Find Candidates for Data Scientist Position", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3053, "slug": "classifying-triangles-by-lengths", "title": "Classifying Triangles by Lengths", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3059, "slug": "find-all-unique-email-domains", "title": "Find All Unique Email Domains", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3062, "slug": "winner-of-the-linked-list-game", "title": "Winner of the Linked List Game", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": []},
    {"number": 3063, "slug": "linked-list-frequency", "title": "Linked List Frequency", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}]},
    {"number": 3065, "slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy"}, {"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "number-of-employees-who-met-the-target", "title": "Number of Employees Who Met the Target", "difficulty": "Easy"}]},
    {"number": 3069, "slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}, {"slug": "divide-array-into-equal-pairs", "title": "Divide Array Into Equal Pairs", "difficulty": "Easy"}]},
    {"number": 3074, "slug": "apple-redistribution-into-boxes", "title": "Apple Redistribution into Boxes", "difficulty": "Easy", "tags": ["Array", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3079, "slug": "find-the-sum-of-encrypted-integers", "title": "Find the Sum of Encrypted Integers", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 3083, "slug": "existence-of-a-substring-in-a-string-and-its-reverse", "title": "Existence of a Substring in a String and Its Reverse", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 3090, "slug": "maximum-length-substring-with-two-occurrences", "title": "Maximum Length Substring With Two Occurrences", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": []},
    {"number": 3095, "slug": "shortest-subarray-with-or-at-least-k-i", "title": "Shortest Subarray With OR at Least K I", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation", "Sliding Window"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "shortest-subarray-with-sum-at-least-k", "title": "Shortest Subarray with Sum at Least K", "difficulty": "Hard"}]},
    {"number": 3099, "slug": "harshad-number", "title": "Harshad Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 3105, "slug": "longest-strictly-increasing-or-strictly-decreasing-subarray", "title": "Longest Strictly Increasing or Strictly Decreasing Subarray", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3110, "slug": "score-of-a-string", "title": "Score of a String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3114, "slug": "latest-time-you-can-obtain-after-replacing-characters", "title": "Latest Time You Can Obtain After Replacing Characters", "difficulty": "Easy", "tags": ["String", "Enumeration"], "similar_problems": [{"slug": "latest-time-by-replacing-hidden-digits", "title": "Latest Time by Replacing Hidden Digits", "difficulty": "Easy"}]},
    {"number": 3120, "slug": "count-the-number-of-special-characters-i", "title": "Count the Number of Special Characters I", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "detect-capital", "title": "Detect Capital", "difficulty": "Easy"}, {"slug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "difficulty": "Easy"}, {"slug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "difficulty": "Medium"}]},
    {"number": 3127, "slug": "make-a-square-with-the-same-color", "title": "Make a Square with the Same Color", "difficulty": "Easy", "tags": ["Array", "Matrix", "Enumeration"], "similar_problems": []},
    {"number": 3131, "slug": "find-the-integer-added-to-array-i", "title": "Find the Integer Added to Array I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3136, "slug": "valid-word", "title": "Valid Word", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3142, "slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy", "tags": ["Array", "Matrix"], "similar_problems": [{"slug": "candy", "title": "Candy", "difficulty": "Hard"}, {"slug": "distribute-candies", "title": "Distribute Candies", "difficulty": "Easy"}, {"slug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "difficulty": "Easy"}]},
    {"number": 3146, "slug": "permutation-difference-between-two-strings", "title": "Permutation Difference between Two Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}]},
    {"number": 3150, "slug": "invalid-tweets-ii", "title": "Invalid Tweets II", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3151, "slug": "special-array-i", "title": "Special Array I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3158, "slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Bit Manipulation"], "similar_problems": [{"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}]},
    {"number": 3162, "slug": "find-the-number-of-good-pairs-i", "title": "Find the Number of Good Pairs I", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "count-array-pairs-divisible-by-k", "title": "Count Array Pairs Divisible by K", "difficulty": "Hard"}]},
    {"number": 3168, "slug": "minimum-number-of-chairs-in-a-waiting-room", "title": "Minimum Number of Chairs in a Waiting Room", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": [{"slug": "consecutive-characters", "title": "Consecutive Characters", "difficulty": "Easy"}]},
    {"number": 3172, "slug": "second-day-verification", "title": "Second Day Verification", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3173, "slug": "bitwise-or-of-adjacent-elements", "title": "Bitwise OR of Adjacent Elements", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "neighboring-bitwise-xor", "title": "Neighboring Bitwise XOR", "difficulty": "Medium"}]},
    {"number": 3174, "slug": "clear-digits", "title": "Clear Digits", "difficulty": "Easy", "tags": ["String", "Stack", "Simulation"], "similar_problems": []},
    {"number": 3178, "slug": "find-the-child-who-has-the-ball-after-k-seconds", "title": "Find the Child Who Has the Ball After K Seconds", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "find-the-losers-of-the-circular-game", "title": "Find the Losers of the Circular Game", "difficulty": "Easy"}]},
    {"number": 3184, "slug": "count-pairs-that-form-a-complete-day-i", "title": "Count Pairs That Form a Complete Day I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "check-if-array-pairs-are-divisible-by-k", "title": "Check If Array Pairs Are Divisible by k", "difficulty": "Medium"}]},
    {"number": 3190, "slug": "find-minimum-operations-to-make-all-elements-divisible-by-three", "title": "Find Minimum Operations to Make All Elements Divisible by Three", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements", "title": "Minimum Moves to Equal Array Elements", "difficulty": "Medium"}]},
    {"number": 3194, "slug": "minimum-average-of-smallest-and-largest-elements", "title": "Minimum Average of Smallest and Largest Elements", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}]},
    {"number": 3198, "slug": "find-cities-in-each-state", "title": "Find Cities in Each State", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3199, "slug": "count-triplets-with-even-xor-set-bits-i", "title": "Count Triplets with Even XOR Set Bits I", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": []},
    {"number": 3200, "slug": "maximum-height-of-a-triangle", "title": "Maximum Height of a Triangle", "difficulty": "Easy", "tags": ["Array", "Enumeration"], "similar_problems": []},
    {"number": 3206, "slug": "alternating-groups-i", "title": "Alternating Groups I", "difficulty": "Easy", "tags": ["Array", "Sliding Window"], "similar_problems": []},
    {"number": 3210, "slug": "find-the-encrypted-string", "title": "Find the Encrypted String", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3216, "slug": "lexicographically-smallest-string-after-a-swap", "title": "Lexicographically Smallest String After a Swap", "difficulty": "Easy", "tags": ["String", "Greedy"], "similar_problems": [{"slug": "lexicographically-smallest-string-after-applying-operations", "title": "Lexicographically Smallest String After Applying Operations", "difficulty": "Medium"}]},
    {"number": 3222, "slug": "find-the-winning-player-in-coin-game", "title": "Find the Winning Player in Coin Game", "difficulty": "Easy", "tags": ["Math", "Simulation", "Game Theory"], "similar_problems": [{"slug": "can-i-win", "title": "Can I Win", "difficulty": "Medium"}, {"slug": "predict-the-winner", "title": "Predict the Winner", "difficulty": "Medium"}]},
    {"number": 3226, "slug": "number-of-bit-changes-to-make-two-integers-equal", "title": "Number of Bit Changes to Make Two Integers Equal", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": []},
    {"number": 3232, "slug": "find-if-digit-game-can-be-won", "title": "Find if Digit Game Can Be Won", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "find-numbers-with-even-number-of-digits", "title": "Find Numbers with Even Number of Digits", "difficulty": "Easy"}, {"slug": "count-integers-with-even-digit-sum", "title": "Count Integers With Even Digit Sum", "difficulty": "Easy"}]},
    {"number": 3238, "slug": "find-the-number-of-winning-players", "title": "Find the Number of Winning Players", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Counting"], "similar_problems": [{"slug": "can-i-win", "title": "Can I Win", "difficulty": "Medium"}, {"slug": "predict-the-winner", "title": "Predict the Winner", "difficulty": "Medium"}]},
    {"number": 3242, "slug": "design-neighbor-sum-service", "title": "Design Neighbor Sum Service", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Design", "Matrix", "Simulation"], "similar_problems": [{"slug": "matrix-block-sum", "title": "Matrix Block Sum", "difficulty": "Medium"}, {"slug": "array-with-elements-not-equal-to-average-of-neighbors", "title": "Array With Elements Not Equal to Average of Neighbors", "difficulty": "Medium"}]},
    {"number": 3246, "slug": "premier-league-table-ranking", "title": "Premier League Table Ranking", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3248, "slug": "snake-in-matrix", "title": "Snake in Matrix", "difficulty": "Easy", "tags": ["Array", "String", "Simulation"], "similar_problems": []},
    {"number": 3258, "slug": "count-substrings-that-satisfy-k-constraint-i", "title": "Count Substrings That Satisfy K-Constraint I", "difficulty": "Easy", "tags": ["String", "Sliding Window"], "similar_problems": []},
    {"number": 3263, "slug": "convert-doubly-linked-list-to-array-i", "title": "Convert Doubly Linked List to Array I", "difficulty": "Easy", "tags": ["Array", "Linked List", "Doubly-Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}]},
    {"number": 3264, "slug": "final-array-state-after-k-multiplication-operations-i", "title": "Final Array State After K Multiplication Operations I", "difficulty": "Easy", "tags": ["Array", "Math", "Heap (Priority Queue)", "Simulation"], "similar_problems": []},
    {"number": 3270, "slug": "find-the-key-of-the-numbers", "title": "Find the Key of the Numbers", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "largest-number", "title": "Largest Number", "difficulty": "Medium"}]},
    {"number": 3274, "slug": "check-if-two-chessboard-squares-have-the-same-color", "title": "Check if Two Chessboard Squares Have the Same Color", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "determine-color-of-a-chessboard-square", "title": "Determine Color of a Chessboard Square", "difficulty": "Easy"}]},
    {"number": 3280, "slug": "convert-date-to-binary", "title": "Convert Date to Binary", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "convert-to-base-2", "title": "Convert to Base -2", "difficulty": "Medium"}]},
    {"number": 3285, "slug": "find-indices-of-stable-mountains", "title": "Find Indices of Stable Mountains", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard"}]},
    {"number": 3289, "slug": "the-two-sneaky-numbers-of-digitville", "title": "The Two Sneaky Numbers of Digitville", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math"], "similar_problems": [{"slug": "find-all-duplicates-in-an-array", "title": "Find All Duplicates in an Array", "difficulty": "Medium"}]},
    {"number": 3300, "slug": "minimum-element-after-replacement-with-digit-sum", "title": "Minimum Element After Replacement With Digit Sum", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy"}]},
    {"number": 3304, "slug": "find-the-k-th-character-in-string-game-i", "title": "Find the K-th Character in String Game I", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation", "Recursion", "Simulation"], "similar_problems": [{"slug": "shifting-letters", "title": "Shifting Letters", "difficulty": "Medium"}]},
    {"number": 3314, "slug": "construct-the-minimum-bitwise-array-i", "title": "Construct the Minimum Bitwise Array I", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": []},
    {"number": 3318, "slug": "find-x-sum-of-all-k-long-subarrays-i", "title": "Find X-Sum of All K-Long Subarrays I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sliding Window", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3330, "slug": "find-the-original-typed-string-i", "title": "Find the Original Typed String I", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "keyboard-row", "title": "Keyboard Row", "difficulty": "Easy"}, {"slug": "faulty-keyboard", "title": "Faulty Keyboard", "difficulty": "Easy"}]},
    {"number": 3340, "slug": "check-balanced-string", "title": "Check Balanced String", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}]},
    {"number": 3345, "slug": "smallest-divisible-digit-product-i", "title": "Smallest Divisible Digit Product I", "difficulty": "Easy", "tags": ["Math", "Enumeration"], "similar_problems": [{"slug": "smallest-number-with-given-digit-product", "title": "Smallest Number With Given Digit Product", "difficulty": "Medium"}]},
    {"number": 3349, "slug": "adjacent-increasing-subarrays-detection-i", "title": "Adjacent Increasing Subarrays Detection I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3353, "slug": "minimum-total-operations", "title": "Minimum Total Operations", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3354, "slug": "make-array-elements-equal-to-zero", "title": "Make Array Elements Equal to Zero", "difficulty": "Easy", "tags": ["Array", "Simulation", "Prefix Sum"], "similar_problems": []},
    {"number": 3358, "slug": "books-with-null-ratings", "title": "Books with NULL Ratings", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3360, "slug": "stone-removal-game", "title": "Stone Removal Game", "difficulty": "Easy", "tags": ["Math", "Simulation"], "similar_problems": [{"slug": "stone-game-iv", "title": "Stone Game IV", "difficulty": "Hard"}]},
    {"number": 3364, "slug": "minimum-positive-sum-subarray", "title": "Minimum Positive Sum Subarray ", "difficulty": "Easy", "tags": ["Array", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}]},
    {"number": 3370, "slug": "smallest-number-with-all-set-bits", "title": "Smallest Number With All Set Bits", "difficulty": "Easy", "tags": ["Math", "Bit Manipulation"], "similar_problems": [{"slug": "minimum-number-of-k-consecutive-bit-flips", "title": "Minimum Number of K Consecutive Bit Flips", "difficulty": "Hard"}, {"slug": "minimum-bit-flips-to-convert-number", "title": "Minimum Bit Flips to Convert Number", "difficulty": "Easy"}, {"slug": "find-sum-of-array-product-of-magical-sequences", "title": "Find Sum of Array Product of Magical Sequences", "difficulty": "Hard"}]},
    {"number": 3375, "slug": "minimum-operations-to-make-array-values-equal-to-k", "title": "Minimum Operations to Make Array Values Equal to K", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 3379, "slug": "transformed-array", "title": "Transformed Array", "difficulty": "Easy", "tags": ["Array", "Simulation"], "similar_problems": []},
    {"number": 3386, "slug": "button-with-longest-push-time", "title": "Button with Longest Push Time", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3392, "slug": "count-subarrays-of-length-three-with-a-condition", "title": "Count Subarrays of Length Three With a Condition", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3396, "slug": "minimum-number-of-operations-to-make-elements-in-array-distinct", "title": "Minimum Number of Operations to Make Elements in Array Distinct", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "minimum-increment-to-make-array-unique", "title": "Minimum Increment to Make Array Unique", "difficulty": "Medium"}]},
    {"number": 3402, "slug": "minimum-operations-to-make-columns-strictly-increasing", "title": "Minimum Operations to Make Columns Strictly Increasing", "difficulty": "Easy", "tags": ["Array", "Greedy", "Matrix"], "similar_problems": [{"slug": "minimum-operations-to-make-the-array-increasing", "title": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}]},
    {"number": 3407, "slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy", "tags": ["String", "String Matching"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 3411, "slug": "maximum-subarray-with-equal-products", "title": "Maximum Subarray With Equal Products", "difficulty": "Easy", "tags": ["Array", "Math", "Sliding Window", "Enumeration", "Number Theory"], "similar_problems": [{"slug": "find-greatest-common-divisor-of-array", "title": "Find Greatest Common Divisor of Array", "difficulty": "Easy"}]},
    {"number": 3415, "slug": "find-products-with-three-consecutive-digits", "title": "Find Products with Three Consecutive Digits ", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3417, "slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"}, {"slug": "longest-zigzag-path-in-a-binary-tree", "title": "Longest ZigZag Path in a Binary Tree", "difficulty": "Medium"}]},
    {"number": 3423, "slug": "maximum-difference-between-adjacent-elements-in-a-circular-array", "title": "Maximum Difference Between Adjacent Elements in a Circular Array", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3427, "slug": "sum-of-variable-length-subarrays", "title": "Sum of Variable Length Subarrays", "difficulty": "Easy", "tags": ["Array", "Prefix Sum"], "similar_problems": [{"slug": "range-sum-query-immutable", "title": "Range Sum Query - Immutable", "difficulty": "Easy"}, {"slug": "maximum-sum-of-3-non-overlapping-subarrays", "title": "Maximum Sum of 3 Non-Overlapping Subarrays", "difficulty": "Hard"}]},
    {"number": 3432, "slug": "count-partitions-with-even-sum-difference", "title": "Count Partitions with Even Sum Difference", "difficulty": "Easy", "tags": ["Array", "Math", "Prefix Sum"], "similar_problems": []},
    {"number": 3436, "slug": "find-valid-emails", "title": "Find Valid Emails", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3438, "slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy"}]},
    {"number": 3442, "slug": "maximum-difference-between-even-and-odd-frequency-i", "title": "Maximum Difference Between Even and Odd Frequency I", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3450, "slug": "maximum-students-on-a-single-bench", "title": "Maximum Students on a Single Bench", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": []},
    {"number": 3452, "slug": "sum-of-good-numbers", "title": "Sum of Good Numbers", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3456, "slug": "find-special-substring-of-length-k", "title": "Find Special Substring of Length K", "difficulty": "Easy", "tags": ["String"], "similar_problems": []},
    {"number": 3461, "slug": "check-if-digits-are-equal-in-string-after-operations-i", "title": "Check If Digits Are Equal in String After Operations I", "difficulty": "Easy", "tags": ["Math", "String", "Simulation", "Combinatorics", "Number Theory"], "similar_problems": []},
    {"number": 3465, "slug": "find-products-with-valid-serial-numbers", "title": "Find Products with Valid Serial Numbers", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3467, "slug": "transform-array-by-parity", "title": "Transform Array by Parity", "difficulty": "Easy", "tags": ["Array", "Sorting", "Counting"], "similar_problems": [{"slug": "odd-even-linked-list", "title": "Odd Even Linked List", "difficulty": "Medium"}]},
    {"number": 3471, "slug": "find-the-largest-almost-missing-integer", "title": "Find the Largest Almost Missing Integer", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}]},
    {"number": 3477, "slug": "fruits-into-baskets-ii", "title": "Fruits Into Baskets II", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Segment Tree", "Simulation", "Ordered Set"], "similar_problems": [{"slug": "fruit-into-baskets", "title": "Fruit Into Baskets", "difficulty": "Medium"}]},
    {"number": 3483, "slug": "unique-3-digit-even-numbers", "title": "Unique 3-Digit Even Numbers", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Recursion", "Enumeration"], "similar_problems": []},
    {"number": 3487, "slug": "maximum-unique-subarray-sum-after-deletion", "title": "Maximum Unique Subarray Sum After Deletion", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Greedy"], "similar_problems": [{"slug": "maximum-subarray-sum-with-one-deletion", "title": "Maximum Subarray Sum with One Deletion", "difficulty": "Medium"}]},
    {"number": 3491, "slug": "phone-number-prefix", "title": "Phone Number Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie", "Sorting"], "similar_problems": []},
    {"number": 3492, "slug": "maximum-containers-on-a-ship", "title": "Maximum Containers on a Ship", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 3498, "slug": "reverse-degree-of-a-string", "title": "Reverse Degree of a String", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3502, "slug": "minimum-cost-to-reach-every-position", "title": "Minimum Cost to Reach Every Position", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3507, "slug": "minimum-pair-removal-to-sort-array-i", "title": "Minimum Pair Removal to Sort Array I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Heap (Priority Queue)", "Simulation", "Doubly-Linked List", "Ordered Set"], "similar_problems": []},
    {"number": 3512, "slug": "minimum-operations-to-make-array-sum-divisible-by-k", "title": "Minimum Operations to Make Array Sum Divisible by K", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 3516, "slug": "find-closest-person", "title": "Find Closest Person", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 3536, "slug": "maximum-product-of-two-digits", "title": "Maximum Product of Two Digits", "difficulty": "Easy", "tags": ["Math", "Sorting"], "similar_problems": []},
    {"number": 3541, "slug": "find-most-frequent-vowel-and-consonant", "title": "Find Most Frequent Vowel and Consonant", "difficulty": "Easy", "tags": ["Hash Table", "String", "Counting"], "similar_problems": []},
    {"number": 3545, "slug": "minimum-deletions-for-at-most-k-distinct-characters", "title": "Minimum Deletions for At Most K Distinct Characters", "difficulty": "Easy", "tags": ["Hash Table", "String", "Greedy", "Sorting", "Counting"], "similar_problems": []},
    {"number": 3550, "slug": "smallest-index-with-digit-sum-equal-to-index", "title": "Smallest Index With Digit Sum Equal to Index", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": []},
    {"number": 3560, "slug": "find-minimum-log-transportation-cost", "title": "Find Minimum Log Transportation Cost", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 3570, "slug": "find-books-with-no-available-copies", "title": "Find Books with No Available Copies", "difficulty": "Easy", "tags": ["Database"], "similar_problems": []},
    {"number": 3571, "slug": "find-the-shortest-superstring-ii", "title": "Find the Shortest Superstring II", "difficulty": "Easy", "tags": ["String"], "similar_problems": [{"slug": "find-the-shortest-superstring", "title": "Find the Shortest Superstring", "difficulty": "Hard"}]},
    {"number": 3581, "slug": "count-odd-letters-from-number", "title": "Count Odd Letters from Number", "difficulty": "Easy", "tags": ["Hash Table", "String", "Simulation", "Counting"], "similar_problems": []},
    {"number": 3582, "slug": "generate-tag-for-video-caption", "title": "Generate Tag for Video Caption", "difficulty": "Easy", "tags": ["String", "Simulation"], "similar_problems": []},
    {"number": 3591, "slug": "check-if-any-element-has-prime-frequency", "title": "Check if Any Element Has Prime Frequency", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Counting", "Number Theory"], "similar_problems": []},
    {"number": 3602, "slug": "hexadecimal-and-hexatrigesimal-conversion", "title": "Hexadecimal and Hexatrigesimal Conversion", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": []},
    {"number": 3606, "slug": "coupon-code-validator", "title": "Coupon Code Validator", "difficulty": "Easy", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 3622, "slug": "check-divisibility-by-digit-sum-and-product", "title": "Check Divisibility by Digit Sum and Product", "difficulty": "Easy", "tags": ["Math"], "similar_problems": []},
    {"number": 3633, "slug": "earliest-finish-time-for-land-and-water-rides-i", "title": "Earliest Finish Time for Land and Water Rides I", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3637, "slug": "trionic-array-i", "title": "Trionic Array I", "difficulty": "Easy", "tags": ["Array"], "similar_problems": []},
    {"number": 3642, "slug": "find-books-with-polarized-opinions", "title": "Find Books with Polarized Opinions", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3643, "slug": "flip-square-submatrix-vertically", "title": "Flip Square Submatrix Vertically", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Matrix"], "similar_problems": []},
    {"number": 3658, "slug": "gcd-of-odd-and-even-sums", "title": "GCD of Odd and Even Sums", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3662, "slug": "filter-characters-by-frequency", "title": "Filter Characters by Frequency", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3663, "slug": "find-the-least-frequent-digit", "title": "Find The Least Frequent Digit", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3667, "slug": "sort-array-by-absolute-value", "title": "Sort Array By Absolute Value", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3668, "slug": "restore-finishing-order", "title": "Restore Finishing Order", "difficulty": "Easy", "tags": [], "similar_problems": []},
    {"number": 3674, "slug": "minimum-operations-to-equalize-array", "title": "Minimum Operations to Equalize Array", "difficulty": "Easy", "tags": [], "similar_problems": []}
]