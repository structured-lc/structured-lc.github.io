[
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 19, "slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}, {"slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 24, "slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard"}, {"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}]},
    {"number": 25, "slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium"}, {"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}]},
    {"number": 61, "slug": "rotate-list", "title": "Rotate List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium"}, {"slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium"}]},
    {"number": 82, "slug": "remove-duplicates-from-sorted-list-ii", "title": "Remove Duplicates from Sorted List II", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-list", "title": "Remove Duplicates from Sorted List", "difficulty": "Easy"}, {"slug": "remove-duplicates-from-an-unsorted-linked-list", "title": "Remove Duplicates From an Unsorted Linked List", "difficulty": "Medium"}]},
    {"number": 83, "slug": "remove-duplicates-from-sorted-list", "title": "Remove Duplicates from Sorted List", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-list-ii", "title": "Remove Duplicates from Sorted List II", "difficulty": "Medium"}, {"slug": "remove-duplicates-from-an-unsorted-linked-list", "title": "Remove Duplicates From an Unsorted Linked List", "difficulty": "Medium"}]},
    {"number": 86, "slug": "partition-list", "title": "Partition List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "partition-array-according-to-given-pivot", "title": "Partition Array According to Given Pivot", "difficulty": "Medium"}]},
    {"number": 92, "slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 109, "slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium", "tags": ["Linked List", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy"}, {"slug": "create-binary-tree-from-descriptions", "title": "Create Binary Tree From Descriptions", "difficulty": "Medium"}]},
    {"number": 114, "slug": "flatten-binary-tree-to-linked-list", "title": "Flatten Binary Tree to Linked List", "difficulty": "Medium", "tags": ["Linked List", "Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "flatten-a-multilevel-doubly-linked-list", "title": "Flatten a Multilevel Doubly Linked List", "difficulty": "Medium"}, {"slug": "correct-a-binary-tree", "title": "Correct a Binary Tree", "difficulty": "Medium"}]},
    {"number": 116, "slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium"}, {"slug": "binary-tree-right-side-view", "title": "Binary Tree Right Side View", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 117, "slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 141, "slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}]},
    {"number": 142, "slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}]},
    {"number": 143, "slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 147, "slug": "insertion-sort-list", "title": "Insertion Sort List", "difficulty": "Medium", "tags": ["Linked List", "Sorting"], "similar_problems": [{"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "insert-into-a-sorted-circular-linked-list", "title": "Insert into a Sorted Circular Linked List", "difficulty": "Medium"}]},
    {"number": 148, "slug": "sort-list", "title": "Sort List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Divide and Conquer", "Sorting", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium"}, {"slug": "insertion-sort-list", "title": "Insertion Sort List", "difficulty": "Medium"}, {"slug": "sort-linked-list-already-sorted-using-absolute-values", "title": "Sort Linked List Already Sorted Using Absolute Values", "difficulty": "Medium"}]},
    {"number": 160, "slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy"}]},
    {"number": 203, "slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}, {"slug": "convert-doubly-linked-list-to-array-i", "title": "Convert Doubly Linked List to Array I", "difficulty": "Easy"}, {"slug": "convert-doubly-linked-list-to-array-ii", "title": "Convert Doubly Linked List to Array II", "difficulty": "Medium"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 234, "slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 237, "slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}]},
    {"number": 328, "slug": "odd-even-linked-list", "title": "Odd Even Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium"}, {"slug": "transform-array-by-parity", "title": "Transform Array by Parity", "difficulty": "Easy"}]},
    {"number": 355, "slug": "design-twitter", "title": "Design Twitter", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Heap (Priority Queue)"], "similar_problems": [{"slug": "design-a-file-sharing-system", "title": "Design a File Sharing System", "difficulty": "Medium"}]},
    {"number": 369, "slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium", "tags": ["Linked List", "Math"], "similar_problems": [{"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 379, "slug": "design-phone-directory", "title": "Design Phone Directory", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Linked List", "Design", "Queue"], "similar_problems": [{"slug": "seat-reservation-manager", "title": "Seat Reservation Manager", "difficulty": "Medium"}]},
    {"number": 382, "slug": "linked-list-random-node", "title": "Linked List Random Node", "difficulty": "Medium", "tags": ["Linked List", "Math", "Reservoir Sampling", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}]},
    {"number": 426, "slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium", "tags": ["Linked List", "Stack", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree", "Doubly-Linked List"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}]},
    {"number": 430, "slug": "flatten-a-multilevel-doubly-linked-list", "title": "Flatten a Multilevel Doubly Linked List", "difficulty": "Medium", "tags": ["Linked List", "Depth-First Search", "Doubly-Linked List"], "similar_problems": [{"slug": "flatten-binary-tree-to-linked-list", "title": "Flatten Binary Tree to Linked List", "difficulty": "Medium"}, {"slug": "correct-a-binary-tree", "title": "Correct a Binary Tree", "difficulty": "Medium"}]},
    {"number": 432, "slug": "all-oone-data-structure", "title": "All O`one Data Structure", "difficulty": "Hard", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": []},
    {"number": 445, "slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium", "tags": ["Linked List", "Math", "Stack"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}]},
    {"number": 460, "slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}]},
    {"number": 622, "slug": "design-circular-queue", "title": "Design Circular Queue", "difficulty": "Medium", "tags": ["Array", "Linked List", "Design", "Queue"], "similar_problems": [{"slug": "design-circular-deque", "title": "Design Circular Deque", "difficulty": "Medium"}, {"slug": "design-front-middle-back-queue", "title": "Design Front Middle Back Queue", "difficulty": "Medium"}]},
    {"number": 641, "slug": "design-circular-deque", "title": "Design Circular Deque", "difficulty": "Medium", "tags": ["Array", "Linked List", "Design", "Queue"], "similar_problems": [{"slug": "design-circular-queue", "title": "Design Circular Queue", "difficulty": "Medium"}, {"slug": "design-front-middle-back-queue", "title": "Design Front Middle Back Queue", "difficulty": "Medium"}]},
    {"number": 705, "slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"], "similar_problems": [{"slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy"}, {"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]},
    {"number": 706, "slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"], "similar_problems": [{"slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy"}, {"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]},
    {"number": 707, "slug": "design-linked-list", "title": "Design Linked List", "difficulty": "Medium", "tags": ["Linked List", "Design"], "similar_problems": [{"slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard"}]},
    {"number": 708, "slug": "insert-into-a-sorted-circular-linked-list", "title": "Insert into a Sorted Circular Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "insertion-sort-list", "title": "Insertion Sort List", "difficulty": "Medium"}]},
    {"number": 716, "slug": "max-stack", "title": "Max Stack", "difficulty": "Hard", "tags": ["Linked List", "Stack", "Design", "Doubly-Linked List", "Ordered Set"], "similar_problems": [{"slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"}]},
    {"number": 725, "slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "rotate-list", "title": "Rotate List", "difficulty": "Medium"}, {"slug": "odd-even-linked-list", "title": "Odd Even Linked List", "difficulty": "Medium"}, {"slug": "split-a-circular-linked-list", "title": "Split a Circular Linked List", "difficulty": "Medium"}]},
    {"number": 817, "slug": "linked-list-components", "title": "Linked List Components", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Linked List"], "similar_problems": [{"slug": "merge-nodes-in-between-zeros", "title": "Merge Nodes in Between Zeros", "difficulty": "Medium"}]},
    {"number": 876, "slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 1019, "slug": "next-greater-node-in-linked-list", "title": "Next Greater Node In Linked List", "difficulty": "Medium", "tags": ["Array", "Linked List", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 1171, "slug": "remove-zero-sum-consecutive-nodes-from-linked-list", "title": "Remove Zero Sum Consecutive Nodes from Linked List", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy"}]},
    {"number": 1206, "slug": "design-skiplist", "title": "Design Skiplist", "difficulty": "Hard", "tags": ["Linked List", "Design"], "similar_problems": [{"slug": "design-hashset", "title": "Design HashSet", "difficulty": "Easy"}, {"slug": "design-hashmap", "title": "Design HashMap", "difficulty": "Easy"}, {"slug": "design-linked-list", "title": "Design Linked List", "difficulty": "Medium"}]},
    {"number": 1265, "slug": "print-immutable-linked-list-in-reverse", "title": "Print Immutable Linked List in Reverse", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": []},
    {"number": 1290, "slug": "convert-binary-number-in-a-linked-list-to-integer", "title": "Convert Binary Number in a Linked List to Integer", "difficulty": "Easy", "tags": ["Linked List", "Math"], "similar_problems": []},
    {"number": 1367, "slug": "linked-list-in-binary-tree", "title": "Linked List in Binary Tree", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1472, "slug": "design-browser-history", "title": "Design Browser History", "difficulty": "Medium", "tags": ["Array", "Linked List", "Stack", "Design", "Doubly-Linked List", "Data Stream"], "similar_problems": [{"slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard"}]},
    {"number": 1474, "slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium"}, {"slug": "remove-zero-sum-consecutive-nodes-from-linked-list", "title": "Remove Zero Sum Consecutive Nodes from Linked List", "difficulty": "Medium"}]},
    {"number": 1634, "slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium", "tags": ["Linked List", "Math", "Two Pointers"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}]},
    {"number": 1669, "slug": "merge-in-between-linked-lists", "title": "Merge In Between Linked Lists", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": []},
    {"number": 1670, "slug": "design-front-middle-back-queue", "title": "Design Front Middle Back Queue", "difficulty": "Medium", "tags": ["Array", "Linked List", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "design-circular-deque", "title": "Design Circular Deque", "difficulty": "Medium"}, {"slug": "design-circular-queue", "title": "Design Circular Queue", "difficulty": "Medium"}]},
    {"number": 1721, "slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium"}, {"slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium"}, {"slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard"}]},
    {"number": 1797, "slug": "design-authentication-manager", "title": "Design Authentication Manager", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": []},
    {"number": 1836, "slug": "remove-duplicates-from-an-unsorted-linked-list", "title": "Remove Duplicates From an Unsorted Linked List", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "remove-duplicates-from-sorted-list-ii", "title": "Remove Duplicates from Sorted List II", "difficulty": "Medium"}, {"slug": "remove-duplicates-from-sorted-list", "title": "Remove Duplicates from Sorted List", "difficulty": "Easy"}]},
    {"number": 2046, "slug": "sort-linked-list-already-sorted-using-absolute-values", "title": "Sort Linked List Already Sorted Using Absolute Values", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}]},
    {"number": 2058, "slug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points", "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": []},
    {"number": 2074, "slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard"}, {"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 2095, "slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium"}, {"slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium"}, {"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy"}]},
    {"number": 2130, "slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers", "Stack"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "middle-of-the-linked-list", "title": "Middle of the Linked List", "difficulty": "Easy"}]},
    {"number": 2181, "slug": "merge-nodes-in-between-zeros", "title": "Merge Nodes in Between Zeros", "difficulty": "Medium", "tags": ["Linked List", "Simulation"], "similar_problems": [{"slug": "linked-list-components", "title": "Linked List Components", "difficulty": "Medium"}]},
    {"number": 2289, "slug": "steps-to-make-array-non-decreasing", "title": "Steps to Make Array Non-decreasing", "difficulty": "Medium", "tags": ["Array", "Linked List", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "remove-one-element-to-make-the-array-strictly-increasing", "title": "Remove One Element to Make the Array Strictly Increasing", "difficulty": "Easy"}]},
    {"number": 2296, "slug": "design-a-text-editor", "title": "Design a Text Editor", "difficulty": "Hard", "tags": ["Linked List", "String", "Stack", "Design", "Simulation", "Doubly-Linked List"], "similar_problems": []},
    {"number": 2326, "slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium", "tags": ["Array", "Linked List", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium"}, {"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}]},
    {"number": 2487, "slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium", "tags": ["Linked List", "Stack", "Recursion", "Monotonic Stack"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}]},
    {"number": 2674, "slug": "split-a-circular-linked-list", "title": "Split a Circular Linked List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium"}]},
    {"number": 2807, "slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium", "tags": ["Linked List", "Math", "Number Theory"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 2816, "slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium", "tags": ["Linked List", "Math", "Stack"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium"}]},
    {"number": 3062, "slug": "winner-of-the-linked-list-game", "title": "Winner of the Linked List Game", "difficulty": "Easy", "tags": ["Linked List"], "similar_problems": []},
    {"number": 3063, "slug": "linked-list-frequency", "title": "Linked List Frequency", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Counting"], "similar_problems": [{"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}]},
    {"number": 3217, "slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}]},
    {"number": 3263, "slug": "convert-doubly-linked-list-to-array-i", "title": "Convert Doubly Linked List to Array I", "difficulty": "Easy", "tags": ["Array", "Linked List", "Doubly-Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}]},
    {"number": 3294, "slug": "convert-doubly-linked-list-to-array-ii", "title": "Convert Doubly Linked List to Array II", "difficulty": "Medium", "tags": ["Array", "Linked List", "Doubly-Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}]},
    {"number": 3507, "slug": "minimum-pair-removal-to-sort-array-i", "title": "Minimum Pair Removal to Sort Array I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Linked List", "Heap (Priority Queue)", "Simulation", "Doubly-Linked List", "Ordered Set"], "similar_problems": []},
    {"number": 3510, "slug": "minimum-pair-removal-to-sort-array-ii", "title": "Minimum Pair Removal to Sort Array II", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Linked List", "Heap (Priority Queue)", "Simulation", "Doubly-Linked List", "Ordered Set"], "similar_problems": []}
]