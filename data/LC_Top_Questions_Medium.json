[
    {"number": 15, "slug": "3sum", "title": "3Sum", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "3sum-closest", "title": "3Sum Closest", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-ii", "title": "Minimum Sum of Mountain Triplets II", "difficulty": "Medium"}]},
    {"number": 73, "slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "game-of-life", "title": "Game of Life", "difficulty": "Medium"}, {"slug": "number-of-laser-beams-in-a-bank", "title": "Number of Laser Beams in a Bank", "difficulty": "Medium"}, {"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium"}]},
    {"number": 49, "slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}, {"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}]},
    {"number": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "maximum-erasure-value", "title": "Maximum Erasure Value", "difficulty": "Medium"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "minimum-consecutive-cards-to-pick-up", "title": "Minimum Consecutive Cards to Pick Up", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "count-complete-subarrays-in-an-array", "title": "Count Complete Subarrays in an Array", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 334, "slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "count-special-quadruplets", "title": "Count Special Quadruplets", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 163, "slug": "missing-ranges", "title": "Missing Ranges", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 38, "slug": "count-and-say", "title": "Count and Say", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "string-compression", "title": "String Compression", "difficulty": "Medium"}]},
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 328, "slug": "odd-even-linked-list", "title": "Odd Even Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "split-linked-list-in-parts", "title": "Split Linked List in Parts", "difficulty": "Medium"}, {"slug": "transform-array-by-parity", "title": "Transform Array by Parity", "difficulty": "Easy"}]},
    {"number": 160, "slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy"}]},
    {"number": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium"}, {"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}, {"slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"}, {"slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"}, {"slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "inorder-successor-in-bst", "title": "Inorder Successor in BST", "difficulty": "Medium"}, {"slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium"}, {"slug": "minimum-distance-between-bst-nodes", "title": "Minimum Distance Between BST Nodes", "difficulty": "Easy"}]},
    {"number": 103, "slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy"}]},
    {"number": 105, "slug": "construct-binary-tree-from-preorder-and-inorder-traversal", "title": "Construct Binary Tree from Preorder and Inorder Traversal", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"], "similar_problems": [{"slug": "construct-binary-tree-from-inorder-and-postorder-traversal", "title": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": "Medium"}]},
    {"number": 116, "slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium"}, {"slug": "binary-tree-right-side-view", "title": "Binary Tree Right Side View", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 230, "slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "second-minimum-node-in-a-binary-tree", "title": "Second Minimum Node In a Binary Tree", "difficulty": "Easy"}]},
    {"number": 285, "slug": "inorder-successor-in-bst", "title": "Inorder Successor in BST", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"}, {"slug": "inorder-successor-in-bst-ii", "title": "Inorder Successor in BST II", "difficulty": "Medium"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 22, "slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 46, "slug": "permutations", "title": "Permutations", "difficulty": "Medium", "tags": ["Array", "Backtracking"], "similar_problems": [{"slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium"}, {"slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium"}, {"slug": "permutation-sequence", "title": "Permutation Sequence", "difficulty": "Hard"}, {"slug": "combinations", "title": "Combinations", "difficulty": "Medium"}]},
    {"number": 78, "slug": "subsets", "title": "Subsets", "difficulty": "Medium", "tags": ["Array", "Backtracking", "Bit Manipulation"], "similar_problems": [{"slug": "subsets-ii", "title": "Subsets II", "difficulty": "Medium"}, {"slug": "generalized-abbreviation", "title": "Generalized Abbreviation", "difficulty": "Medium"}, {"slug": "letter-case-permutation", "title": "Letter Case Permutation", "difficulty": "Medium"}, {"slug": "find-array-given-subset-sums", "title": "Find Array Given Subset Sums", "difficulty": "Hard"}, {"slug": "count-number-of-maximum-bitwise-or-subsets", "title": "Count Number of Maximum Bitwise-OR Subsets", "difficulty": "Medium"}]},
    {"number": 79, "slug": "word-search", "title": "Word Search", "difficulty": "Medium", "tags": ["Array", "String", "Backtracking", "Depth-First Search", "Matrix"], "similar_problems": [{"slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard"}]},
    {"number": 75, "slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium"}, {"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}]},
    {"number": 347, "slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting", "Quickselect"], "similar_problems": [{"slug": "word-frequency", "title": "Word Frequency", "difficulty": "Medium"}, {"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "split-array-into-consecutive-subsequences", "title": "Split Array into Consecutive Subsequences", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "sort-features-by-popularity", "title": "Sort Features by Popularity", "difficulty": "Medium"}, {"slug": "sender-with-largest-word-count", "title": "Sender With Largest Word Count", "difficulty": "Medium"}, {"slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy"}, {"slug": "linked-list-frequency", "title": "Linked List Frequency", "difficulty": "Easy"}]},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 162, "slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}, {"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}, {"slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy"}]},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}, {"slug": "count-ways-to-group-overlapping-ranges", "title": "Count Ways to Group Overlapping Ranges", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}, {"slug": "count-days-without-meetings", "title": "Count Days Without Meetings", "difficulty": "Medium"}, {"slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium"}]},
    {"number": 33, "slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array-ii", "title": "Search in Rotated Sorted Array II", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}]},
    {"number": 253, "slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "car-pooling", "title": "Car Pooling", "difficulty": "Medium"}, {"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 240, "slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}]},
    {"number": 55, "slug": "jump-game", "title": "Jump Game", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard"}, {"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 62, "slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Combinatorics"], "similar_problems": [{"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 322, "slug": "coin-change", "title": "Coin Change", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search"], "similar_problems": [{"slug": "minimum-cost-for-tickets", "title": "Minimum Cost For Tickets", "difficulty": "Medium"}, {"slug": "maximum-value-of-k-coins-from-piles", "title": "Maximum Value of K Coins From Piles", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "count-of-sub-multisets-with-bounded-sum", "title": "Count of Sub-Multisets With Bounded Sum", "difficulty": "Hard"}, {"slug": "length-of-the-longest-subsequence-that-sums-to-target", "title": "Length of the Longest Subsequence That Sums to Target", "difficulty": "Medium"}, {"slug": "minimum-number-of-coins-to-be-added", "title": "Minimum Number of Coins to be Added", "difficulty": "Medium"}, {"slug": "most-expensive-item-that-can-not-be-bought", "title": "Most Expensive Item That Can Not Be Bought", "difficulty": "Medium"}, {"slug": "inverse-coin-change", "title": "Inverse Coin Change", "difficulty": "Medium"}]},
    {"number": 300, "slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming"], "similar_problems": [{"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard"}, {"slug": "maximum-length-of-pair-chain", "title": "Maximum Length of Pair Chain", "difficulty": "Medium"}, {"slug": "number-of-longest-increasing-subsequence", "title": "Number of Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "find-the-longest-valid-obstacle-course-at-each-position", "title": "Find the Longest Valid Obstacle Course at Each Position", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-the-array-k-increasing", "title": "Minimum Operations to Make the Array K-Increasing", "difficulty": "Hard"}, {"slug": "longest-ideal-subsequence", "title": "Longest Ideal Subsequence", "difficulty": "Medium"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-ii", "title": "Find the Maximum Length of a Good Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-i", "title": "Find the Maximum Length of a Good Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-i", "title": "Find the Maximum Length of Valid Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-ii", "title": "Find the Maximum Length of Valid Subsequence II", "difficulty": "Medium"}, {"slug": "longest-subsequence-with-decreasing-adjacent-difference", "title": "Longest Subsequence With Decreasing Adjacent Difference", "difficulty": "Medium"}]},
    {"number": 251, "slug": "flatten-2d-vector", "title": "Flatten 2D Vector", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Design", "Iterator"], "similar_problems": [{"slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"}, {"slug": "zigzag-iterator", "title": "Zigzag Iterator", "difficulty": "Medium"}, {"slug": "peeking-iterator", "title": "Peeking Iterator", "difficulty": "Medium"}, {"slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 380, "slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "similar_problems": [{"slug": "insert-delete-getrandom-o1-duplicates-allowed", "title": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": "Hard"}]},
    {"number": 348, "slug": "design-tic-tac-toe", "title": "Design Tic-Tac-Toe", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Design", "Matrix", "Simulation"], "similar_problems": [{"slug": "valid-tic-tac-toe-state", "title": "Valid Tic-Tac-Toe State", "difficulty": "Medium"}]},
    {"number": 202, "slug": "happy-number", "title": "Happy Number", "difficulty": "Easy", "tags": ["Hash Table", "Math", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy"}, {"slug": "add-digits", "title": "Add Digits", "difficulty": "Easy"}, {"slug": "ugly-number", "title": "Ugly Number", "difficulty": "Easy"}, {"slug": "sum-of-digits-of-string-after-convert", "title": "Sum of Digits of String After Convert", "difficulty": "Easy"}, {"slug": "minimum-addition-to-make-integer-beautiful", "title": "Minimum Addition to Make Integer Beautiful", "difficulty": "Medium"}, {"slug": "smallest-value-after-replacing-with-sum-of-prime-factors", "title": "Smallest Value After Replacing With Sum of Prime Factors", "difficulty": "Medium"}, {"slug": "count-the-digits-that-divide-a-number", "title": "Count the Digits That Divide a Number", "difficulty": "Easy"}]},
    {"number": 172, "slug": "factorial-trailing-zeroes", "title": "Factorial Trailing Zeroes", "difficulty": "Medium", "tags": ["Math"], "similar_problems": [{"slug": "number-of-digit-one", "title": "Number of Digit One", "difficulty": "Hard"}, {"slug": "preimage-size-of-factorial-zeroes-function", "title": "Preimage Size of Factorial Zeroes Function", "difficulty": "Hard"}, {"slug": "abbreviating-the-product-of-a-range", "title": "Abbreviating the Product of a Range", "difficulty": "Hard"}, {"slug": "maximum-trailing-zeros-in-a-cornered-path", "title": "Maximum Trailing Zeros in a Cornered Path", "difficulty": "Medium"}]},
    {"number": 171, "slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 50, "slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"}, {"slug": "super-pow", "title": "Super Pow", "difficulty": "Medium"}, {"slug": "count-collisions-of-monkeys-on-a-polygon", "title": "Count Collisions of Monkeys on a Polygon", "difficulty": "Medium"}]},
    {"number": 69, "slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"}, {"slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy"}]},
    {"number": 29, "slug": "divide-two-integers", "title": "Divide Two Integers", "difficulty": "Medium", "tags": ["Math", "Bit Manipulation"], "similar_problems": []},
    {"number": 166, "slug": "fraction-to-recurring-decimal", "title": "Fraction to Recurring Decimal", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": []},
    {"number": 371, "slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium", "tags": ["Math", "Bit Manipulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}]},
    {"number": 150, "slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium", "tags": ["Array", "Math", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}]},
    {"number": 169, "slug": "majority-element", "title": "Majority Element", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Divide and Conquer", "Sorting", "Counting"], "similar_problems": [{"slug": "majority-element-ii", "title": "Majority Element II", "difficulty": "Medium"}, {"slug": "check-if-a-number-is-majority-element-in-a-sorted-array", "title": "Check If a Number Is Majority Element in a Sorted Array", "difficulty": "Easy"}, {"slug": "most-frequent-even-element", "title": "Most Frequent Even Element", "difficulty": "Easy"}, {"slug": "minimum-index-of-a-valid-split", "title": "Minimum Index of a Valid Split", "difficulty": "Medium"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}, {"slug": "find-the-most-common-response", "title": "Find the Most Common Response", "difficulty": "Medium"}, {"slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy"}]},
    {"number": 277, "slug": "find-the-celebrity", "title": "Find the Celebrity", "difficulty": "Medium", "tags": ["Two Pointers", "Graph", "Interactive"], "similar_problems": [{"slug": "find-the-town-judge", "title": "Find the Town Judge", "difficulty": "Easy"}]},
    {"number": 621, "slug": "task-scheduler", "title": "Task Scheduler", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Heap (Priority Queue)", "Counting"], "similar_problems": [{"slug": "rearrange-string-k-distance-apart", "title": "Rearrange String k Distance Apart", "difficulty": "Hard"}, {"slug": "reorganize-string", "title": "Reorganize String", "difficulty": "Medium"}, {"slug": "maximum-number-of-weeks-for-which-you-can-work", "title": "Maximum Number of Weeks for Which You Can Work", "difficulty": "Medium"}, {"slug": "find-minimum-time-to-finish-all-jobs-ii", "title": "Find Minimum Time to Finish All Jobs II", "difficulty": "Medium"}, {"slug": "task-scheduler-ii", "title": "Task Scheduler II", "difficulty": "Medium"}, {"slug": "generate-schedule", "title": "Generate Schedule", "difficulty": "Medium"}]}
]