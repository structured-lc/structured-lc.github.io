[
    {"number": 4, "slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer"], "similar_problems": [{"slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium"}]},
    {"number": 33, "slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array-ii", "title": "Search in Rotated Sorted Array II", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}]},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 35, "slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}]},
    {"number": 69, "slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "powx-n", "title": "Pow(x, n)", "difficulty": "Medium"}, {"slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy"}]},
    {"number": 74, "slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 81, "slug": "search-in-rotated-sorted-array-ii", "title": "Search in Rotated Sorted Array II", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"}]},
    {"number": 153, "slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard"}]},
    {"number": 154, "slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}]},
    {"number": 162, "slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}, {"slug": "count-hills-and-valleys-in-an-array", "title": "Count Hills and Valleys in an Array", "difficulty": "Easy"}, {"slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy"}]},
    {"number": 167, "slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}]},
    {"number": 209, "slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard"}, {"slug": "maximum-size-subarray-sum-equals-k", "title": "Maximum Size Subarray Sum Equals k", "difficulty": "Medium"}, {"slug": "maximum-length-of-repeated-subarray", "title": "Maximum Length of Repeated Subarray", "difficulty": "Medium"}, {"slug": "minimum-operations-to-reduce-x-to-zero", "title": "Minimum Operations to Reduce X to Zero", "difficulty": "Medium"}, {"slug": "k-radius-subarray-averages", "title": "K Radius Subarray Averages", "difficulty": "Medium"}, {"slug": "maximum-product-after-k-increments", "title": "Maximum Product After K Increments", "difficulty": "Medium"}, {"slug": "shortest-subarray-with-or-at-least-k-i", "title": "Shortest Subarray With OR at Least K I", "difficulty": "Easy"}, {"slug": "minimum-positive-sum-subarray", "title": "Minimum Positive Sum Subarray ", "difficulty": "Easy"}]},
    {"number": 222, "slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy", "tags": ["Binary Search", "Bit Manipulation", "Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}]},
    {"number": 240, "slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}]},
    {"number": 259, "slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "3sum-closest", "title": "3Sum Closest", "difficulty": "Medium"}, {"slug": "valid-triangle-number", "title": "Valid Triangle Number", "difficulty": "Medium"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "maximize-greatness-of-an-array", "title": "Maximize Greatness of an Array", "difficulty": "Medium"}, {"slug": "find-polygon-with-the-largest-perimeter", "title": "Find Polygon With the Largest Perimeter", "difficulty": "Medium"}]},
    {"number": 268, "slug": "missing-number", "title": "Missing Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}, {"slug": "find-the-largest-almost-missing-integer", "title": "Find the Largest Almost Missing Integer", "difficulty": "Easy"}]},
    {"number": 270, "slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy", "tags": ["Binary Search", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"}, {"slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 275, "slug": "h-index-ii", "title": "H-Index II", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "h-index", "title": "H-Index", "difficulty": "Medium"}]},
    {"number": 278, "slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy"}]},
    {"number": 287, "slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Bit Manipulation"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "set-mismatch", "title": "Set Mismatch", "difficulty": "Easy"}]},
    {"number": 300, "slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming"], "similar_problems": [{"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard"}, {"slug": "maximum-length-of-pair-chain", "title": "Maximum Length of Pair Chain", "difficulty": "Medium"}, {"slug": "number-of-longest-increasing-subsequence", "title": "Number of Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "find-the-longest-valid-obstacle-course-at-each-position", "title": "Find the Longest Valid Obstacle Course at Each Position", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-the-array-k-increasing", "title": "Minimum Operations to Make the Array K-Increasing", "difficulty": "Hard"}, {"slug": "longest-ideal-subsequence", "title": "Longest Ideal Subsequence", "difficulty": "Medium"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-ii", "title": "Find the Maximum Length of a Good Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-i", "title": "Find the Maximum Length of a Good Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-i", "title": "Find the Maximum Length of Valid Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-ii", "title": "Find the Maximum Length of Valid Subsequence II", "difficulty": "Medium"}, {"slug": "longest-subsequence-with-decreasing-adjacent-difference", "title": "Longest Subsequence With Decreasing Adjacent Difference", "difficulty": "Medium"}]},
    {"number": 302, "slug": "smallest-rectangle-enclosing-black-pixels", "title": "Smallest Rectangle Enclosing Black Pixels", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "find-the-minimum-area-to-cover-all-ones-ii", "title": "Find the Minimum Area to Cover All Ones II", "difficulty": "Hard"}, {"slug": "find-the-minimum-area-to-cover-all-ones-i", "title": "Find the Minimum Area to Cover All Ones I", "difficulty": "Medium"}]},
    {"number": 315, "slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}, {"slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard"}]},
    {"number": 327, "slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium"}, {"slug": "find-the-number-of-copy-arrays", "title": "Find the Number of Copy Arrays", "difficulty": "Medium"}]},
    {"number": 349, "slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}, {"slug": "intersection-of-three-sorted-arrays", "title": "Intersection of Three Sorted Arrays", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}, {"slug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "difficulty": "Easy"}, {"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}, {"slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy"}, {"slug": "maximum-size-of-a-set-after-removals", "title": "Maximum Size of a Set After Removals", "difficulty": "Medium"}]},
    {"number": 350, "slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "find-common-characters", "title": "Find Common Characters", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}, {"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}, {"slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy"}]},
    {"number": 352, "slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard", "tags": ["Binary Search", "Design", "Ordered Set"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-right-interval", "title": "Find Right Interval", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 354, "slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "the-number-of-weak-characters-in-the-game", "title": "The Number of Weak Characters in the Game", "difficulty": "Medium"}, {"slug": "longest-non-decreasing-subarray-from-two-arrays", "title": "Longest Non-decreasing Subarray From Two Arrays", "difficulty": "Medium"}]},
    {"number": 362, "slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Queue", "Data Stream"], "similar_problems": [{"slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy"}]},
    {"number": 363, "slug": "max-sum-of-rectangle-no-larger-than-k", "title": "Max Sum of Rectangle No Larger Than K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum", "Ordered Set"], "similar_problems": []},
    {"number": 367, "slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "sqrtx", "title": "Sqrt(x)", "difficulty": "Easy"}, {"slug": "sum-of-square-numbers", "title": "Sum of Square Numbers", "difficulty": "Medium"}]},
    {"number": 374, "slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower-ii", "title": "Guess Number Higher or Lower II", "difficulty": "Medium"}, {"slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium"}]},
    {"number": 378, "slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "find-k-pairs-with-smallest-sums", "title": "Find K Pairs with Smallest Sums", "difficulty": "Medium"}, {"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium"}]},
    {"number": 400, "slug": "nth-digit", "title": "Nth Digit", "difficulty": "Medium", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 410, "slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "subsequence-of-size-k-with-the-largest-even-sum", "title": "Subsequence of Size K With the Largest Even Sum", "difficulty": "Medium"}, {"slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-ii", "title": "Distribute Elements Into Two Arrays II", "difficulty": "Hard"}]},
    {"number": 436, "slug": "find-right-interval", "title": "Find Right Interval", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": [{"slug": "data-stream-as-disjoint-intervals", "title": "Data Stream as Disjoint Intervals", "difficulty": "Hard"}]},
    {"number": 441, "slug": "arranging-coins", "title": "Arranging Coins", "difficulty": "Easy", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 456, "slug": "132-pattern", "title": "132 Pattern", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Stack", "Monotonic Stack", "Ordered Set"], "similar_problems": []},
    {"number": 475, "slug": "heaters", "title": "Heaters", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 483, "slug": "smallest-good-base", "title": "Smallest Good Base", "difficulty": "Hard", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 493, "slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}]},
    {"number": 497, "slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Reservoir Sampling", "Prefix Sum", "Ordered Set", "Randomized"], "similar_problems": [{"slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium"}, {"slug": "generate-random-point-in-a-circle", "title": "Generate Random Point in a Circle", "difficulty": "Medium"}]},
    {"number": 528, "slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Prefix Sum", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}, {"slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard"}, {"slug": "random-point-in-non-overlapping-rectangles", "title": "Random Point in Non-overlapping Rectangles", "difficulty": "Medium"}]},
    {"number": 532, "slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "minimum-absolute-difference-in-bst", "title": "Minimum Absolute Difference in BST", "difficulty": "Easy"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "kth-smallest-product-of-two-sorted-arrays", "title": "Kth Smallest Product of Two Sorted Arrays", "difficulty": "Hard"}, {"slug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "difficulty": "Medium"}, {"slug": "number-of-pairs-satisfying-inequality", "title": "Number of Pairs Satisfying Inequality", "difficulty": "Hard"}, {"slug": "minimum-absolute-difference-between-elements-with-constraint", "title": "Minimum Absolute Difference Between Elements With Constraint", "difficulty": "Medium"}]},
    {"number": 540, "slug": "single-element-in-a-sorted-array", "title": "Single Element in a Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 611, "slug": "valid-triangle-number", "title": "Valid Triangle Number", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "find-polygon-with-the-largest-perimeter", "title": "Find Polygon With the Largest Perimeter", "difficulty": "Medium"}]},
    {"number": 633, "slug": "sum-of-square-numbers", "title": "Sum of Square Numbers", "difficulty": "Medium", "tags": ["Math", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "valid-perfect-square", "title": "Valid Perfect Square", "difficulty": "Easy"}, {"slug": "sum-of-squares-of-special-elements", "title": "Sum of Squares of Special Elements ", "difficulty": "Easy"}]},
    {"number": 644, "slug": "maximum-average-subarray-ii", "title": "Maximum Average Subarray II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "maximum-average-subarray-i", "title": "Maximum Average Subarray I", "difficulty": "Easy"}]},
    {"number": 658, "slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sliding Window", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower-ii", "title": "Guess Number Higher or Lower II", "difficulty": "Medium"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "find-closest-number-to-zero", "title": "Find Closest Number to Zero", "difficulty": "Easy"}]},
    {"number": 668, "slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium"}, {"slug": "minimum-time-to-eat-all-grains", "title": "Minimum Time to Eat All Grains", "difficulty": "Hard"}, {"slug": "kth-smallest-amount-with-single-denomination-combination", "title": "Kth Smallest Amount With Single Denomination Combination", "difficulty": "Hard"}]},
    {"number": 702, "slug": "search-in-a-sorted-array-of-unknown-size", "title": "Search in a Sorted Array of Unknown Size", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Interactive"], "similar_problems": [{"slug": "binary-search", "title": "Binary Search", "difficulty": "Easy"}, {"slug": "find-the-index-of-the-large-integer", "title": "Find the Index of the Large Integer", "difficulty": "Medium"}]},
    {"number": 704, "slug": "binary-search", "title": "Binary Search", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-a-sorted-array-of-unknown-size", "title": "Search in a Sorted Array of Unknown Size", "difficulty": "Medium"}, {"slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy"}]},
    {"number": 710, "slug": "random-pick-with-blacklist", "title": "Random Pick with Blacklist", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Sorting", "Randomized"], "similar_problems": [{"slug": "random-pick-index", "title": "Random Pick Index", "difficulty": "Medium"}, {"slug": "random-pick-with-weight", "title": "Random Pick with Weight", "difficulty": "Medium"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}]},
    {"number": 713, "slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "maximum-size-subarray-sum-equals-k", "title": "Maximum Size Subarray Sum Equals k", "difficulty": "Medium"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "number-of-smooth-descent-periods-of-a-stock", "title": "Number of Smooth Descent Periods of a Stock", "difficulty": "Medium"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}]},
    {"number": 718, "slug": "maximum-length-of-repeated-subarray", "title": "Maximum Length of Repeated Subarray", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sliding Window", "Rolling Hash", "Hash Function"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "longest-common-subpath", "title": "Longest Common Subpath", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-ii", "title": "Find the Maximum Length of a Good Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-i", "title": "Find the Maximum Length of a Good Subsequence I", "difficulty": "Medium"}]},
    {"number": 719, "slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "find-k-pairs-with-smallest-sums", "title": "Find K Pairs with Smallest Sums", "difficulty": "Medium"}, {"slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium"}, {"slug": "find-k-closest-elements", "title": "Find K Closest Elements", "difficulty": "Medium"}, {"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium"}, {"slug": "find-the-median-of-the-uniqueness-array", "title": "Find the Median of the Uniqueness Array", "difficulty": "Hard"}, {"slug": "maximize-score-of-numbers-in-ranges", "title": "Maximize Score of Numbers in Ranges", "difficulty": "Medium"}]},
    {"number": 729, "slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}]},
    {"number": 731, "slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}]},
    {"number": 732, "slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard", "tags": ["Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}, {"slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 744, "slug": "find-smallest-letter-greater-than-target", "title": "Find Smallest Letter Greater Than Target", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "count-elements-with-strictly-smaller-and-greater-elements", "title": "Count Elements With Strictly Smaller and Greater Elements ", "difficulty": "Easy"}]},
    {"number": 754, "slug": "reach-a-number", "title": "Reach a Number", "difficulty": "Medium", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}]},
    {"number": 774, "slug": "minimize-max-distance-to-gas-station", "title": "Minimize Max Distance to Gas Station", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}]},
    {"number": 778, "slug": "swim-in-rising-water", "title": "Swim in Rising Water", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 786, "slug": "k-th-smallest-prime-fraction", "title": "K-th Smallest Prime Fraction", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "kth-smallest-element-in-a-sorted-matrix", "title": "Kth Smallest Element in a Sorted Matrix", "difficulty": "Medium"}, {"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}]},
    {"number": 792, "slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Dynamic Programming", "Trie", "Sorting"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium"}, {"slug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "difficulty": "Easy"}]},
    {"number": 793, "slug": "preimage-size-of-factorial-zeroes-function", "title": "Preimage Size of Factorial Zeroes Function", "difficulty": "Hard", "tags": ["Math", "Binary Search"], "similar_problems": [{"slug": "factorial-trailing-zeroes", "title": "Factorial Trailing Zeroes", "difficulty": "Medium"}]},
    {"number": 825, "slug": "friends-of-appropriate-ages", "title": "Friends Of Appropriate Ages", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 826, "slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 852, "slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}]},
    {"number": 862, "slug": "shortest-subarray-with-sum-at-least-k", "title": "Shortest Subarray with Sum at Least K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Queue", "Sliding Window", "Heap (Priority Queue)", "Prefix Sum", "Monotonic Queue"], "similar_problems": [{"slug": "shortest-subarray-with-or-at-least-k-ii", "title": "Shortest Subarray With OR at Least K II", "difficulty": "Medium"}, {"slug": "shortest-subarray-with-or-at-least-k-i", "title": "Shortest Subarray With OR at Least K I", "difficulty": "Easy"}]},
    {"number": 875, "slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "minimize-max-distance-to-gas-station", "title": "Minimize Max Distance to Gas Station", "difficulty": "Hard"}, {"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "minimum-time-to-repair-cars", "title": "Minimum Time to Repair Cars", "difficulty": "Medium"}]},
    {"number": 878, "slug": "nth-magical-number", "title": "Nth Magical Number", "difficulty": "Hard", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 887, "slug": "super-egg-drop", "title": "Super Egg Drop", "difficulty": "Hard", "tags": ["Math", "Binary Search", "Dynamic Programming"], "similar_problems": [{"slug": "egg-drop-with-2-eggs-and-n-floors", "title": "Egg Drop With 2 Eggs and N Floors", "difficulty": "Medium"}]},
    {"number": 888, "slug": "fair-candy-swap", "title": "Fair Candy Swap", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 902, "slug": "numbers-at-most-n-given-digit-set", "title": "Numbers At Most N Given Digit Set", "difficulty": "Hard", "tags": ["Array", "Math", "String", "Binary Search", "Dynamic Programming"], "similar_problems": []},
    {"number": 911, "slug": "online-election", "title": "Online Election", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Design"], "similar_problems": [{"slug": "rank-teams-by-votes", "title": "Rank Teams by Votes", "difficulty": "Medium"}]},
    {"number": 981, "slug": "time-based-key-value-store", "title": "Time Based Key-Value Store", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Design"], "similar_problems": [{"slug": "stock-price-fluctuation", "title": "Stock Price Fluctuation ", "difficulty": "Medium"}]},
    {"number": 1004, "slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "max-consecutive-ones", "title": "Max Consecutive Ones", "difficulty": "Easy"}, {"slug": "max-consecutive-ones-ii", "title": "Max Consecutive Ones II", "difficulty": "Medium"}, {"slug": "longest-subarray-of-1s-after-deleting-one-element", "title": "Longest Subarray of 1's After Deleting One Element", "difficulty": "Medium"}, {"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}, {"slug": "minimum-recolors-to-get-k-consecutive-black-blocks", "title": "Minimum Recolors to Get K Consecutive Black Blocks", "difficulty": "Easy"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "maximum-sum-of-distinct-subarrays-with-length-k", "title": "Maximum Sum of Distinct Subarrays With Length K", "difficulty": "Medium"}, {"slug": "maximum-enemy-forts-that-can-be-captured", "title": "Maximum Enemy Forts That Can Be Captured", "difficulty": "Easy"}]},
    {"number": 1011, "slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}, {"slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard"}, {"slug": "cutting-ribbons", "title": "Cutting Ribbons", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "maximum-bags-with-full-capacity-of-rocks", "title": "Maximum Bags With Full Capacity of Rocks", "difficulty": "Medium"}, {"slug": "minimum-total-distance-traveled", "title": "Minimum Total Distance Traveled", "difficulty": "Hard"}]},
    {"number": 1027, "slug": "longest-arithmetic-subsequence", "title": "Longest Arithmetic Subsequence", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming"], "similar_problems": [{"slug": "destroy-sequential-targets", "title": "Destroy Sequential Targets", "difficulty": "Medium"}]},
    {"number": 1044, "slug": "longest-duplicate-substring", "title": "Longest Duplicate Substring", "difficulty": "Hard", "tags": ["String", "Binary Search", "Sliding Window", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": []},
    {"number": 1055, "slug": "shortest-way-to-form-string", "title": "Shortest Way to Form String", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Binary Search", "Greedy"], "similar_problems": [{"slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "Easy"}, {"slug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "difficulty": "Medium"}]},
    {"number": 1060, "slug": "missing-element-in-sorted-array", "title": "Missing Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 1062, "slug": "longest-repeating-substring", "title": "Longest Repeating Substring", "difficulty": "Medium", "tags": ["String", "Binary Search", "Dynamic Programming", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": []},
    {"number": 1064, "slug": "fixed-point", "title": "Fixed Point", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 1095, "slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Interactive"], "similar_problems": [{"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "find-good-days-to-rob-the-bank", "title": "Find Good Days to Rob the Bank", "difficulty": "Medium"}, {"slug": "find-indices-of-stable-mountains", "title": "Find Indices of Stable Mountains", "difficulty": "Easy"}]},
    {"number": 1099, "slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 1102, "slug": "path-with-maximum-minimum-value", "title": "Path With Maximum Minimum Value", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 1146, "slug": "snapshot-array", "title": "Snapshot Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Design"], "similar_problems": []},
    {"number": 1150, "slug": "check-if-a-number-is-majority-element-in-a-sorted-array", "title": "Check If a Number Is Majority Element in a Sorted Array", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "majority-element", "title": "Majority Element", "difficulty": "Easy"}, {"slug": "majority-element-ii", "title": "Majority Element II", "difficulty": "Medium"}]},
    {"number": 1157, "slug": "online-majority-element-in-subarray", "title": "Online Majority Element In Subarray", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Design", "Binary Indexed Tree", "Segment Tree"], "similar_problems": []},
    {"number": 1170, "slug": "compare-strings-by-frequency-of-the-smallest-character", "title": "Compare Strings by Frequency of the Smallest Character", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1182, "slug": "shortest-distance-to-target-color", "title": "Shortest Distance to Target Color", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming"], "similar_problems": []},
    {"number": 1187, "slug": "make-array-strictly-increasing", "title": "Make Array Strictly Increasing", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "make-array-non-decreasing-or-non-increasing", "title": "Make Array Non-decreasing or Non-increasing", "difficulty": "Hard"}]},
    {"number": 1198, "slug": "find-smallest-common-element-in-all-rows", "title": "Find Smallest Common Element in All Rows", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Matrix", "Counting"], "similar_problems": [{"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 1201, "slug": "ugly-number-iii", "title": "Ugly Number III", "difficulty": "Medium", "tags": ["Math", "Binary Search", "Combinatorics", "Number Theory"], "similar_problems": [{"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}]},
    {"number": 1208, "slug": "get-equal-substrings-within-budget", "title": "Get Equal Substrings Within Budget", "difficulty": "Medium", "tags": ["String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}]},
    {"number": 1213, "slug": "intersection-of-three-sorted-arrays", "title": "Intersection of Three Sorted Arrays", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Binary Search", "Counting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}]},
    {"number": 1214, "slug": "two-sum-bsts", "title": "Two Sum BSTs", "difficulty": "Medium", "tags": ["Two Pointers", "Binary Search", "Stack", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}]},
    {"number": 1231, "slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}, {"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}]},
    {"number": 1235, "slug": "maximum-profit-in-job-scheduling", "title": "Maximum Profit in Job Scheduling", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "maximum-earnings-from-taxi", "title": "Maximum Earnings From Taxi", "difficulty": "Medium"}, {"slug": "two-best-non-overlapping-events", "title": "Two Best Non-Overlapping Events", "difficulty": "Medium"}]},
    {"number": 1237, "slug": "find-positive-integer-solution-for-a-given-equation", "title": "Find Positive Integer Solution for a Given Equation", "difficulty": "Medium", "tags": ["Math", "Two Pointers", "Binary Search", "Interactive"], "similar_problems": []},
    {"number": 1268, "slug": "search-suggestions-system", "title": "Search Suggestions System", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Trie", "Sorting", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1283, "slug": "find-the-smallest-divisor-given-a-threshold", "title": "Find the Smallest Divisor Given a Threshold", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}]},
    {"number": 1292, "slug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold", "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum"], "similar_problems": []},
    {"number": 1300, "slug": "sum-of-mutated-array-closest-to-target", "title": "Sum of Mutated Array Closest to Target", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1337, "slug": "the-k-weakest-rows-in-a-matrix", "title": "The K Weakest Rows in a Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1346, "slug": "check-if-n-and-its-double-exist", "title": "Check If N and Its Double Exist", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "keep-multiplying-found-values-by-two", "title": "Keep Multiplying Found Values by Two", "difficulty": "Easy"}]},
    {"number": 1348, "slug": "tweet-counts-per-frequency", "title": "Tweet Counts Per Frequency", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Design", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard"}]},
    {"number": 1351, "slug": "count-negative-numbers-in-a-sorted-matrix", "title": "Count Negative Numbers in a Sorted Matrix", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy"}]},
    {"number": 1385, "slug": "find-the-distance-value-between-two-arrays", "title": "Find the Distance Value Between Two Arrays", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1428, "slug": "leftmost-column-with-at-least-a-one", "title": "Leftmost Column with at Least a One", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix", "Interactive"], "similar_problems": []},
    {"number": 1439, "slug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Heap (Priority Queue)", "Matrix"], "similar_problems": []},
    {"number": 1477, "slug": "find-two-non-overlapping-sub-arrays-each-with-target-sum", "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Sliding Window"], "similar_problems": [{"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}]},
    {"number": 1482, "slug": "minimum-number-of-days-to-make-m-bouquets", "title": "Minimum Number of Days to Make m Bouquets", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium"}, {"slug": "earliest-possible-day-of-full-bloom", "title": "Earliest Possible Day of Full Bloom", "difficulty": "Hard"}]},
    {"number": 1483, "slug": "kth-ancestor-of-a-tree-node", "title": "Kth Ancestor of a Tree Node", "difficulty": "Hard", "tags": ["Binary Search", "Dynamic Programming", "Bit Manipulation", "Tree", "Depth-First Search", "Breadth-First Search", "Design"], "similar_problems": [{"slug": "minimum-edge-weight-equilibrium-queries-in-a-tree", "title": "Minimum Edge Weight Equilibrium Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 1488, "slug": "avoid-flood-in-the-city", "title": "Avoid Flood in The City", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 1498, "slug": "number-of-subsequences-that-satisfy-the-given-sum-condition", "title": "Number of Subsequences That Satisfy the Given Sum Condition", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "minimum-operations-to-form-subsequence-with-target-sum", "title": "Minimum Operations to Form Subsequence With Target Sum", "difficulty": "Hard"}, {"slug": "find-the-sum-of-subsequence-powers", "title": "Find the Sum of Subsequence Powers", "difficulty": "Hard"}, {"slug": "find-the-sum-of-the-power-of-all-subsequences", "title": "Find the Sum of the Power of All Subsequences", "difficulty": "Hard"}]},
    {"number": 1508, "slug": "range-sum-of-sorted-subarray-sums", "title": "Range Sum of Sorted Subarray Sums", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 1521, "slug": "find-a-value-of-a-mysterious-function-closest-to-target", "title": "Find a Value of a Mysterious Function Closest to Target", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Bit Manipulation", "Segment Tree"], "similar_problems": []},
    {"number": 1533, "slug": "find-the-index-of-the-large-integer", "title": "Find the Index of the Large Integer", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Interactive"], "similar_problems": [{"slug": "search-in-a-sorted-array-of-unknown-size", "title": "Search in a Sorted Array of Unknown Size", "difficulty": "Medium"}]},
    {"number": 1539, "slug": "kth-missing-positive-number", "title": "Kth Missing Positive Number", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}]},
    {"number": 1552, "slug": "magnetic-force-between-two-balls", "title": "Magnetic Force Between Two Balls", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": [{"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}]},
    {"number": 1562, "slug": "find-latest-group-of-size-m", "title": "Find Latest Group of Size M", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Simulation"], "similar_problems": []},
    {"number": 1574, "slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "count-the-number-of-incremovable-subarrays-ii", "title": "Count the Number of Incremovable Subarrays II", "difficulty": "Hard"}, {"slug": "count-the-number-of-incremovable-subarrays-i", "title": "Count the Number of Incremovable Subarrays I", "difficulty": "Easy"}]},
    {"number": 1608, "slug": "special-array-with-x-elements-greater-than-or-equal-x", "title": "Special Array With X Elements Greater Than or Equal X", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 1618, "slug": "maximum-font-to-fit-a-sentence-in-a-screen", "title": "Maximum Font to Fit a Sentence in a Screen", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Interactive"], "similar_problems": []},
    {"number": 1631, "slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "swim-in-rising-water", "title": "Swim in Rising Water", "difficulty": "Hard"}, {"slug": "path-with-maximum-minimum-value", "title": "Path With Maximum Minimum Value", "difficulty": "Medium"}, {"slug": "find-the-safest-path-in-a-grid", "title": "Find the Safest Path in a Grid", "difficulty": "Medium"}]},
    {"number": 1648, "slug": "sell-diminishing-valued-colored-balls", "title": "Sell Diminishing-Valued Colored Balls", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}]},
    {"number": 1649, "slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 1658, "slug": "minimum-operations-to-reduce-x-to-zero", "title": "Minimum Operations to Reduce X to Zero", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "minimum-operations-to-convert-number", "title": "Minimum Operations to Convert Number", "difficulty": "Medium"}, {"slug": "removing-minimum-number-of-magic-beans", "title": "Removing Minimum Number of Magic Beans", "difficulty": "Medium"}, {"slug": "minimum-operations-to-make-the-integer-zero", "title": "Minimum Operations to Make the Integer Zero", "difficulty": "Medium"}]},
    {"number": 1671, "slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "longest-mountain-in-array", "title": "Longest Mountain in Array", "difficulty": "Medium"}, {"slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium"}, {"slug": "valid-mountain-array", "title": "Valid Mountain Array", "difficulty": "Easy"}, {"slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard"}, {"slug": "beautiful-towers-ii", "title": "Beautiful Towers II", "difficulty": "Medium"}, {"slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium"}]},
    {"number": 1712, "slug": "ways-to-split-array-into-three-subarrays", "title": "Ways to Split Array Into Three Subarrays", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "number-of-ways-to-divide-a-long-corridor", "title": "Number of Ways to Divide a Long Corridor", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}]},
    {"number": 1713, "slug": "minimum-operations-to-make-a-subsequence", "title": "Minimum Operations to Make a Subsequence", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Greedy"], "similar_problems": [{"slug": "append-characters-to-string-to-make-subsequence", "title": "Append Characters to String to Make Subsequence", "difficulty": "Medium"}]},
    {"number": 1739, "slug": "building-boxes", "title": "Building Boxes", "difficulty": "Hard", "tags": ["Math", "Binary Search", "Greedy"], "similar_problems": [{"slug": "block-placement-queries", "title": "Block Placement Queries", "difficulty": "Hard"}]},
    {"number": 1751, "slug": "maximum-number-of-events-that-can-be-attended-ii", "title": "Maximum Number of Events That Can Be Attended II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "maximum-number-of-events-that-can-be-attended", "title": "Maximum Number of Events That Can Be Attended", "difficulty": "Medium"}, {"slug": "maximum-earnings-from-taxi", "title": "Maximum Earnings From Taxi", "difficulty": "Medium"}, {"slug": "two-best-non-overlapping-events", "title": "Two Best Non-Overlapping Events", "difficulty": "Medium"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}]},
    {"number": 1760, "slug": "minimum-limit-of-balls-in-a-bag", "title": "Minimum Limit of Balls in a Bag", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}]},
    {"number": 1782, "slug": "count-pairs-of-nodes", "title": "Count Pairs Of Nodes", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Graph", "Sorting", "Counting"], "similar_problems": []},
    {"number": 1793, "slug": "maximum-score-of-a-good-subarray", "title": "Maximum Score of a Good Subarray", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard"}]},
    {"number": 1802, "slug": "maximum-value-at-a-given-index-in-a-bounded-array", "title": "Maximum Value at a Given Index in a Bounded Array", "difficulty": "Medium", "tags": ["Math", "Binary Search", "Greedy"], "similar_problems": []},
    {"number": 1818, "slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium"}, {"slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard"}]},
    {"number": 1838, "slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "find-all-lonely-numbers-in-the-array", "title": "Find All Lonely Numbers in the Array", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "apply-operations-to-maximize-frequency-score", "title": "Apply Operations to Maximize Frequency Score", "difficulty": "Hard"}, {"slug": "maximum-frequency-of-an-element-after-performing-operations-i", "title": "Maximum Frequency of an Element After Performing Operations I", "difficulty": "Medium"}, {"slug": "maximum-frequency-of-an-element-after-performing-operations-ii", "title": "Maximum Frequency of an Element After Performing Operations II", "difficulty": "Hard"}, {"slug": "maximum-difference-between-even-and-odd-frequency-ii", "title": "Maximum Difference Between Even and Odd Frequency II", "difficulty": "Hard"}]},
    {"number": 1847, "slug": "closest-room", "title": "Closest Room", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sorting", "Ordered Set"], "similar_problems": [{"slug": "most-beautiful-item-for-each-query", "title": "Most Beautiful Item for Each Query", "difficulty": "Medium"}, {"slug": "minimum-time-to-kill-all-monsters", "title": "Minimum Time to Kill All Monsters", "difficulty": "Hard"}]},
    {"number": 1851, "slug": "minimum-interval-to-include-each-query", "title": "Minimum Interval to Include Each Query", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Line Sweep", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}]},
    {"number": 1855, "slug": "maximum-distance-between-a-pair-of-values", "title": "Maximum Distance Between a Pair of Values", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "two-furthest-houses-with-different-colors", "title": "Two Furthest Houses With Different Colors", "difficulty": "Easy"}]},
    {"number": 1862, "slug": "sum-of-floored-pairs", "title": "Sum of Floored Pairs", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Prefix Sum"], "similar_problems": []},
    {"number": 1870, "slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimum-skips-to-arrive-at-meeting-on-time", "title": "Minimum Skips to Arrive at Meeting On Time", "difficulty": "Hard"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "the-latest-time-to-catch-a-bus", "title": "The Latest Time to Catch a Bus", "difficulty": "Medium"}, {"slug": "minimize-maximum-of-array", "title": "Minimize Maximum of Array", "difficulty": "Medium"}]},
    {"number": 1885, "slug": "count-pairs-in-two-arrays", "title": "Count Pairs in Two Arrays", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "max-value-of-equation", "title": "Max Value of Equation", "difficulty": "Hard"}, {"slug": "substrings-that-begin-and-end-with-the-same-letter", "title": "Substrings That Begin and End With the Same Letter", "difficulty": "Medium"}]},
    {"number": 1889, "slug": "minimum-space-wasted-from-packaging", "title": "Minimum Space Wasted From Packaging", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 1891, "slug": "cutting-ribbons", "title": "Cutting Ribbons", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "add-minimum-number-of-rungs", "title": "Add Minimum Number of Rungs", "difficulty": "Medium"}]},
    {"number": 1894, "slug": "find-the-student-that-will-replace-the-chalk", "title": "Find the Student that Will Replace the Chalk", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Simulation", "Prefix Sum"], "similar_problems": [{"slug": "pass-the-pillow", "title": "Pass the Pillow", "difficulty": "Easy"}]},
    {"number": 1898, "slug": "maximum-number-of-removable-characters", "title": "Maximum Number of Removable Characters", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String", "Binary Search"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}]},
    {"number": 1901, "slug": "find-a-peak-element-ii", "title": "Find a Peak Element II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "find-the-peaks", "title": "Find the Peaks", "difficulty": "Easy"}]},
    {"number": 1918, "slug": "kth-smallest-subarray-sum", "title": "Kth Smallest Subarray Sum", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window"], "similar_problems": []},
    {"number": 1923, "slug": "longest-common-subpath", "title": "Longest Common Subpath", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Rolling Hash", "Suffix Array", "Hash Function"], "similar_problems": [{"slug": "reconstruct-itinerary", "title": "Reconstruct Itinerary", "difficulty": "Hard"}, {"slug": "maximum-length-of-repeated-subarray", "title": "Maximum Length of Repeated Subarray", "difficulty": "Medium"}]},
    {"number": 1932, "slug": "merge-bsts-to-create-single-bst", "title": "Merge BSTs to Create Single BST", "difficulty": "Hard", "tags": ["Hash Table", "Binary Search", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 1954, "slug": "minimum-garden-perimeter-to-collect-enough-apples", "title": "Minimum Garden Perimeter to Collect Enough Apples", "difficulty": "Medium", "tags": ["Math", "Binary Search"], "similar_problems": []},
    {"number": 1956, "slug": "minimum-time-for-k-virus-variants-to-spread", "title": "Minimum Time For K Virus Variants to Spread", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Geometry", "Enumeration"], "similar_problems": []},
    {"number": 1964, "slug": "find-the-longest-valid-obstacle-course-at-each-position", "title": "Find the Longest Valid Obstacle Course at Each Position", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Binary Indexed Tree"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}]},
    {"number": 1966, "slug": "binary-searchable-numbers-in-an-unsorted-array", "title": "Binary Searchable Numbers in an Unsorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 1970, "slug": "last-day-where-you-can-still-cross", "title": "Last Day Where You Can Still Cross", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "bricks-falling-when-hit", "title": "Bricks Falling When Hit", "difficulty": "Hard"}, {"slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard"}]},
    {"number": 2008, "slug": "maximum-earnings-from-taxi", "title": "Maximum Earnings From Taxi", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "maximum-profit-in-job-scheduling", "title": "Maximum Profit in Job Scheduling", "difficulty": "Hard"}, {"slug": "maximum-number-of-events-that-can-be-attended", "title": "Maximum Number of Events That Can Be Attended", "difficulty": "Medium"}, {"slug": "maximum-number-of-events-that-can-be-attended-ii", "title": "Maximum Number of Events That Can Be Attended II", "difficulty": "Hard"}]},
    {"number": 2009, "slug": "minimum-number-of-operations-to-make-array-continuous", "title": "Minimum Number of Operations to Make Array Continuous", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Sliding Window"], "similar_problems": [{"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "continuous-subarray-sum", "title": "Continuous Subarray Sum", "difficulty": "Medium"}, {"slug": "moving-stones-until-consecutive-ii", "title": "Moving Stones Until Consecutive II", "difficulty": "Medium"}, {"slug": "minimum-one-bit-operations-to-make-integers-zero", "title": "Minimum One Bit Operations to Make Integers Zero", "difficulty": "Hard"}, {"slug": "minimum-adjacent-swaps-for-k-consecutive-ones", "title": "Minimum Adjacent Swaps for K Consecutive Ones", "difficulty": "Hard"}]},
    {"number": 2024, "slug": "maximize-the-confusion-of-an-exam", "title": "Maximize the Confusion of an Exam", "difficulty": "Medium", "tags": ["String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-repeating-character-replacement", "title": "Longest Repeating Character Replacement", "difficulty": "Medium"}, {"slug": "max-consecutive-ones-iii", "title": "Max Consecutive Ones III", "difficulty": "Medium"}, {"slug": "minimum-number-of-days-to-make-m-bouquets", "title": "Minimum Number of Days to Make m Bouquets", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}]},
    {"number": 2031, "slug": "count-subarrays-with-more-ones-than-zeros", "title": "Count Subarrays With More Ones Than Zeros", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "ones-and-zeroes", "title": "Ones and Zeroes", "difficulty": "Medium"}, {"slug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "difficulty": "Easy"}, {"slug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "difficulty": "Medium"}]},
    {"number": 2035, "slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Dynamic Programming", "Bit Manipulation", "Ordered Set", "Bitmask"], "similar_problems": [{"slug": "partition-equal-subset-sum", "title": "Partition Equal Subset Sum", "difficulty": "Medium"}, {"slug": "split-array-with-same-average", "title": "Split Array With Same Average", "difficulty": "Hard"}, {"slug": "tallest-billboard", "title": "Tallest Billboard", "difficulty": "Hard"}, {"slug": "last-stone-weight-ii", "title": "Last Stone Weight II", "difficulty": "Medium"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "closest-subsequence-sum", "title": "Closest Subsequence Sum", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium"}, {"slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy"}]},
    {"number": 2040, "slug": "kth-smallest-product-of-two-sorted-arrays", "title": "Kth Smallest Product of Two Sorted Arrays", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-k-pairs-with-smallest-sums", "title": "Find K Pairs with Smallest Sums", "difficulty": "Medium"}, {"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}]},
    {"number": 2054, "slug": "two-best-non-overlapping-events", "title": "Two Best Non-Overlapping Events", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-profit-in-job-scheduling", "title": "Maximum Profit in Job Scheduling", "difficulty": "Hard"}, {"slug": "maximum-number-of-events-that-can-be-attended-ii", "title": "Maximum Number of Events That Can Be Attended II", "difficulty": "Hard"}, {"slug": "maximize-win-from-two-segments", "title": "Maximize Win From Two Segments", "difficulty": "Medium"}, {"slug": "maximum-score-of-non-overlapping-intervals", "title": "Maximum Score of Non-overlapping Intervals", "difficulty": "Hard"}]},
    {"number": 2055, "slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "can-make-palindrome-from-substring", "title": "Can Make Palindrome from Substring", "difficulty": "Medium"}]},
    {"number": 2064, "slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}, {"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "find-the-smallest-divisor-given-a-threshold", "title": "Find the Smallest Divisor Given a Threshold", "difficulty": "Medium"}, {"slug": "magnetic-force-between-two-balls", "title": "Magnetic Force Between Two Balls", "difficulty": "Medium"}, {"slug": "minimum-limit-of-balls-in-a-bag", "title": "Minimum Limit of Balls in a Bag", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}]},
    {"number": 2070, "slug": "most-beautiful-item-for-each-query", "title": "Most Beautiful Item for Each Query", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": [{"slug": "closest-room", "title": "Closest Room", "difficulty": "Hard"}, {"slug": "find-the-score-of-all-prefixes-of-an-array", "title": "Find the Score of All Prefixes of an Array", "difficulty": "Medium"}, {"slug": "maximum-sum-queries", "title": "Maximum Sum Queries", "difficulty": "Hard"}]},
    {"number": 2071, "slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Queue", "Sorting", "Monotonic Queue"], "similar_problems": [{"slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium"}, {"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}, {"slug": "maximize-the-minimum-powered-city", "title": "Maximize the Minimum Powered City", "difficulty": "Hard"}]},
    {"number": 2080, "slug": "range-frequency-queries", "title": "Range Frequency Queries", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Design", "Segment Tree"], "similar_problems": []},
    {"number": 2089, "slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "rank-transform-of-an-array", "title": "Rank Transform of an Array", "difficulty": "Easy"}, {"slug": "find-words-containing-character", "title": "Find Words Containing Character", "difficulty": "Easy"}]},
    {"number": 2106, "slug": "maximum-fruits-harvested-after-at-most-k-steps", "title": "Maximum Fruits Harvested After at Most K Steps", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "maximum-performance-of-a-team", "title": "Maximum Performance of a Team", "difficulty": "Hard"}]},
    {"number": 2111, "slug": "minimum-operations-to-make-the-array-k-increasing", "title": "Minimum Operations to Make the Array K-Increasing", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "minimum-swaps-to-make-sequences-increasing", "title": "Minimum Swaps To Make Sequences Increasing", "difficulty": "Hard"}]},
    {"number": 2137, "slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "minimum-moves-to-equal-array-elements", "title": "Minimum Moves to Equal Array Elements", "difficulty": "Medium"}]},
    {"number": 2141, "slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements", "title": "Minimum Moves to Equal Array Elements", "difficulty": "Medium"}, {"slug": "sell-diminishing-valued-colored-balls", "title": "Sell Diminishing-Valued Colored Balls", "difficulty": "Medium"}, {"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy"}]},
    {"number": 2179, "slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "create-sorted-array-through-instructions", "title": "Create Sorted Array through Instructions", "difficulty": "Hard"}, {"slug": "number-of-good-paths", "title": "Number of Good Paths", "difficulty": "Hard"}, {"slug": "count-increasing-quadruplets", "title": "Count Increasing Quadruplets", "difficulty": "Hard"}]},
    {"number": 2187, "slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "maximum-running-time-of-n-computers", "title": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard"}, {"slug": "minimize-maximum-of-array", "title": "Minimize Maximum of Array", "difficulty": "Medium"}, {"slug": "minimum-amount-of-damage-dealt-to-bob", "title": "Minimum Amount of Damage Dealt to Bob", "difficulty": "Hard"}]},
    {"number": 2223, "slug": "sum-of-scores-of-built-strings", "title": "Sum of Scores of Built Strings", "difficulty": "Hard", "tags": ["String", "Binary Search", "Rolling Hash", "Suffix Array", "String Matching", "Hash Function"], "similar_problems": [{"slug": "longest-happy-prefix", "title": "Longest Happy Prefix", "difficulty": "Hard"}]},
    {"number": 2226, "slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}, {"slug": "minimum-limit-of-balls-in-a-bag", "title": "Minimum Limit of Balls in a Bag", "difficulty": "Medium"}, {"slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium"}, {"slug": "maximum-number-of-removable-characters", "title": "Maximum Number of Removable Characters", "difficulty": "Medium"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}, {"slug": "minimize-maximum-of-array", "title": "Minimize Maximum of Array", "difficulty": "Medium"}, {"slug": "maximize-happiness-of-selected-children", "title": "Maximize Happiness of Selected Children", "difficulty": "Medium"}]},
    {"number": 2234, "slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting", "Enumeration", "Prefix Sum"], "similar_problems": [{"slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard"}]},
    {"number": 2250, "slug": "count-number-of-rectangles-containing-each-point", "title": "Count Number of Rectangles Containing Each Point", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Binary Indexed Tree", "Sorting"], "similar_problems": [{"slug": "queries-on-number-of-points-inside-a-circle", "title": "Queries on Number of Points Inside a Circle", "difficulty": "Medium"}]},
    {"number": 2251, "slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Sorting", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "minimum-interval-to-include-each-query", "title": "Minimum Interval to Include Each Query", "difficulty": "Hard"}]},
    {"number": 2258, "slug": "escape-the-spreading-fire", "title": "Escape the Spreading Fire", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Breadth-First Search", "Matrix"], "similar_problems": [{"slug": "rotting-oranges", "title": "Rotting Oranges", "difficulty": "Medium"}, {"slug": "last-day-where-you-can-still-cross", "title": "Last Day Where You Can Still Cross", "difficulty": "Hard"}, {"slug": "minimum-weighted-subgraph-with-the-required-paths", "title": "Minimum Weighted Subgraph With the Required Paths", "difficulty": "Hard"}, {"slug": "maximum-number-of-points-from-grid-queries", "title": "Maximum Number of Points From Grid Queries", "difficulty": "Hard"}]},
    {"number": 2271, "slug": "maximum-white-tiles-covered-by-a-carpet", "title": "Maximum White Tiles Covered by a Carpet", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "maximum-number-of-vowels-in-a-substring-of-given-length", "title": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": "Medium"}]},
    {"number": 2286, "slug": "booking-concert-tickets-in-groups", "title": "Booking Concert Tickets in Groups", "difficulty": "Hard", "tags": ["Binary Search", "Design", "Binary Indexed Tree", "Segment Tree"], "similar_problems": [{"slug": "cinema-seat-allocation", "title": "Cinema Seat Allocation", "difficulty": "Medium"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}]},
    {"number": 2300, "slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "most-profit-assigning-work", "title": "Most Profit Assigning Work", "difficulty": "Medium"}, {"slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}]},
    {"number": 2302, "slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}, {"slug": "binary-subarrays-with-sum", "title": "Binary Subarrays With Sum", "difficulty": "Medium"}]},
    {"number": 2332, "slug": "the-latest-time-to-catch-a-bus", "title": "The Latest Time to Catch a Bus", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium"}, {"slug": "maximum-matching-of-players-with-trainers", "title": "Maximum Matching of Players With Trainers", "difficulty": "Medium"}, {"slug": "time-taken-to-cross-the-door", "title": "Time Taken to Cross the Door", "difficulty": "Hard"}, {"slug": "time-to-cross-a-bridge", "title": "Time to Cross a Bridge", "difficulty": "Hard"}, {"slug": "rearranging-fruits", "title": "Rearranging Fruits", "difficulty": "Hard"}]},
    {"number": 2333, "slug": "minimum-sum-of-squared-difference", "title": "Minimum Sum of Squared Difference", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium"}, {"slug": "partition-array-into-two-arrays-to-minimize-sum-difference", "title": "Partition Array Into Two Arrays to Minimize Sum Difference", "difficulty": "Hard"}]},
    {"number": 2354, "slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Bit Manipulation"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}]},
    {"number": 2358, "slug": "maximum-number-of-groups-entering-a-competition", "title": "Maximum Number of Groups Entering a Competition", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy"], "similar_problems": [{"slug": "maximum-height-by-stacking-cuboids", "title": "Maximum Height by Stacking Cuboids ", "difficulty": "Hard"}]},
    {"number": 2387, "slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard"}]},
    {"number": 2389, "slug": "longest-subsequence-with-limited-sum", "title": "Longest Subsequence With Limited Sum", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "successful-pairs-of-spells-and-potions", "title": "Successful Pairs of Spells and Potions", "difficulty": "Medium"}]},
    {"number": 2398, "slug": "maximum-number-of-robots-within-budget", "title": "Maximum Number of Robots Within Budget", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Queue", "Sliding Window", "Heap (Priority Queue)", "Prefix Sum", "Monotonic Queue"], "similar_problems": [{"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "kth-smallest-product-of-two-sorted-arrays", "title": "Kth Smallest Product of Two Sorted Arrays", "difficulty": "Hard"}, {"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}, {"slug": "minimized-maximum-of-products-distributed-to-any-store", "title": "Minimized Maximum of Products Distributed to Any Store", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}]},
    {"number": 2411, "slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Bit Manipulation", "Sliding Window"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "bitwise-ors-of-subarrays", "title": "Bitwise ORs of Subarrays", "difficulty": "Medium"}, {"slug": "longest-subarray-with-maximum-bitwise-and", "title": "Longest Subarray With Maximum Bitwise AND", "difficulty": "Medium"}]},
    {"number": 2424, "slug": "longest-uploaded-prefix", "title": "Longest Uploaded Prefix", "difficulty": "Medium", "tags": ["Hash Table", "Binary Search", "Union Find", "Design", "Binary Indexed Tree", "Segment Tree", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "design-an-ordered-stream", "title": "Design an Ordered Stream", "difficulty": "Easy"}, {"slug": "find-x-value-of-array-ii", "title": "Find X Value of Array II", "difficulty": "Hard"}]},
    {"number": 2426, "slug": "number-of-pairs-satisfying-inequality", "title": "Number of Pairs Satisfying Inequality", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "count-nice-pairs-in-an-array", "title": "Count Nice Pairs in an Array", "difficulty": "Medium"}, {"slug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "difficulty": "Medium"}, {"slug": "maximum-balanced-subsequence-sum", "title": "Maximum Balanced Subsequence Sum", "difficulty": "Hard"}]},
    {"number": 2439, "slug": "minimize-maximum-of-array", "title": "Minimize Maximum of Array", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "maximum-candies-allocated-to-k-children", "title": "Maximum Candies Allocated to K Children", "difficulty": "Medium"}, {"slug": "minimum-speed-to-arrive-on-time", "title": "Minimum Speed to Arrive on Time", "difficulty": "Medium"}, {"slug": "minimum-time-to-complete-trips", "title": "Minimum Time to Complete Trips", "difficulty": "Medium"}]},
    {"number": 2448, "slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-substrings", "title": "Maximum Product of the Length of Two Palindromic Substrings", "difficulty": "Hard"}, {"slug": "minimum-amount-of-time-to-fill-cups", "title": "Minimum Amount of Time to Fill Cups", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-all-array-elements-equal", "title": "Minimum Operations to Make All Array Elements Equal", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equalindromic", "title": "Minimum Cost to Make Array Equalindromic", "difficulty": "Medium"}]},
    {"number": 2454, "slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Sorting", "Heap (Priority Queue)", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "replace-elements-with-greatest-element-on-right-side", "title": "Replace Elements with Greatest Element on Right Side", "difficulty": "Easy"}, {"slug": "apply-operations-to-maximize-score", "title": "Apply Operations to Maximize Score", "difficulty": "Hard"}]},
    {"number": 2468, "slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard", "tags": ["String", "Binary Search", "Enumeration"], "similar_problems": [{"slug": "text-justification", "title": "Text Justification", "difficulty": "Hard"}, {"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}, {"slug": "sentence-screen-fitting", "title": "Sentence Screen Fitting", "difficulty": "Medium"}]},
    {"number": 2476, "slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"}]},
    {"number": 2498, "slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy"}, {"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}]},
    {"number": 2501, "slug": "longest-square-streak-in-an-array", "title": "Longest Square Streak in an Array", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": []},
    {"number": 2513, "slug": "minimize-the-maximum-of-two-arrays", "title": "Minimize the Maximum of Two Arrays", "difficulty": "Medium", "tags": ["Math", "Binary Search", "Number Theory"], "similar_problems": []},
    {"number": 2517, "slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}]},
    {"number": 2519, "slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard"}, {"slug": "find-all-good-indices", "title": "Find All Good Indices", "difficulty": "Medium"}]},
    {"number": 2528, "slug": "maximize-the-minimum-powered-city", "title": "Maximize the Minimum Powered City", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Queue", "Sliding Window", "Prefix Sum"], "similar_problems": [{"slug": "maximum-number-of-tasks-you-can-assign", "title": "Maximum Number of Tasks You Can Assign", "difficulty": "Hard"}]},
    {"number": 2529, "slug": "maximum-count-of-positive-integer-and-negative-integer", "title": "Maximum Count of Positive Integer and Negative Integer", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Counting"], "similar_problems": [{"slug": "binary-search", "title": "Binary Search", "difficulty": "Easy"}, {"slug": "count-negative-numbers-in-a-sorted-matrix", "title": "Count Negative Numbers in a Sorted Matrix", "difficulty": "Easy"}]},
    {"number": 2540, "slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy"}]},
    {"number": 2554, "slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "replace-elements-in-an-array", "title": "Replace Elements in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}]},
    {"number": 2555, "slug": "maximize-win-from-two-segments", "title": "Maximize Win From Two Segments", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "two-best-non-overlapping-events", "title": "Two Best Non-Overlapping Events", "difficulty": "Medium"}]},
    {"number": 2557, "slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "find-all-numbers-disappeared-in-an-array", "title": "Find All Numbers Disappeared in an Array", "difficulty": "Easy"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "replace-elements-in-an-array", "title": "Replace Elements in an Array", "difficulty": "Medium"}, {"slug": "maximum-number-of-integers-to-choose-from-a-range-i", "title": "Maximum Number of Integers to Choose From a Range I", "difficulty": "Medium"}, {"slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard"}]},
    {"number": 2560, "slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}]},
    {"number": 2563, "slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}, {"slug": "finding-pairs-with-a-certain-sum", "title": "Finding Pairs With a Certain Sum", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 2565, "slug": "subsequence-with-the-minimum-score", "title": "Subsequence With the Minimum Score", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search"], "similar_problems": [{"slug": "longest-common-subsequence", "title": "Longest Common Subsequence", "difficulty": "Medium"}]},
    {"number": 2576, "slug": "find-the-maximum-number-of-marked-indices", "title": "Find the Maximum Number of Marked Indices", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-array-length-after-pair-removals", "title": "Minimum Array Length After Pair Removals", "difficulty": "Medium"}]},
    {"number": 2589, "slug": "minimum-time-to-complete-all-tasks", "title": "Minimum Time to Complete All Tasks", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Greedy", "Sorting"], "similar_problems": [{"slug": "single-threaded-cpu", "title": "Single-Threaded CPU", "difficulty": "Medium"}]},
    {"number": 2594, "slug": "minimum-time-to-repair-cars", "title": "Minimum Time to Repair Cars", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "sort-transformed-array", "title": "Sort Transformed Array", "difficulty": "Medium"}, {"slug": "koko-eating-bananas", "title": "Koko Eating Bananas", "difficulty": "Medium"}]},
    {"number": 2601, "slug": "prime-subtraction-operation", "title": "Prime Subtraction Operation", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Number Theory"], "similar_problems": []},
    {"number": 2602, "slug": "minimum-operations-to-make-all-array-elements-equal", "title": "Minimum Operations to Make All Array Elements Equal", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}, {"slug": "sum-of-distances", "title": "Sum of Distances", "difficulty": "Medium"}]},
    {"number": 2604, "slug": "minimum-time-to-eat-all-grains", "title": "Minimum Time to Eat All Grains", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}]},
    {"number": 2616, "slug": "minimize-the-maximum-difference-of-pairs", "title": "Minimize the Maximum Difference of Pairs", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-absolute-difference", "title": "Minimum Absolute Difference", "difficulty": "Easy"}, {"slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves", "title": "Minimum Difference Between Largest and Smallest Value in Three Moves", "difficulty": "Medium"}]},
    {"number": 2659, "slug": "make-array-empty", "title": "Make Array Empty", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Binary Indexed Tree", "Segment Tree", "Sorting", "Ordered Set"], "similar_problems": []},
    {"number": 2702, "slug": "minimum-operations-to-make-numbers-non-positive", "title": "Minimum Operations to Make Numbers Non-positive", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 2713, "slug": "maximum-strictly-increasing-cells-in-a-matrix", "title": "Maximum Strictly Increasing Cells in a Matrix", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Memoization", "Sorting", "Matrix", "Ordered Set"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 2736, "slug": "maximum-sum-queries", "title": "Maximum Sum Queries", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Binary Indexed Tree", "Segment Tree", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "most-beautiful-item-for-each-query", "title": "Most Beautiful Item for Each Query", "difficulty": "Medium"}]},
    {"number": 2779, "slug": "maximum-beauty-of-an-array-after-applying-operation", "title": "Maximum Beauty of an Array After Applying Operation", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Sorting"], "similar_problems": [{"slug": "maximum-size-subarray-sum-equals-k", "title": "Maximum Size Subarray Sum Equals k", "difficulty": "Medium"}, {"slug": "partition-array-such-that-maximum-difference-is-k", "title": "Partition Array Such That Maximum Difference Is K", "difficulty": "Medium"}]},
    {"number": 2790, "slug": "maximum-number-of-groups-with-increasing-length", "title": "Maximum Number of Groups With Increasing Length", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "group-the-people-given-the-group-size-they-belong-to", "title": "Group the People Given the Group Size They Belong To", "difficulty": "Medium"}]},
    {"number": 2812, "slug": "find-the-safest-path-in-a-grid", "title": "Find the Safest Path in a Grid", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix"], "similar_problems": [{"slug": "path-with-minimum-effort", "title": "Path With Minimum Effort", "difficulty": "Medium"}]},
    {"number": 2817, "slug": "minimum-absolute-difference-between-elements-with-constraint", "title": "Minimum Absolute Difference Between Elements With Constraint", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Ordered Set"], "similar_problems": [{"slug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "find-indices-with-index-and-value-difference-i", "title": "Find Indices With Index and Value Difference I", "difficulty": "Easy"}, {"slug": "find-indices-with-index-and-value-difference-ii", "title": "Find Indices With Index and Value Difference II", "difficulty": "Medium"}]},
    {"number": 2819, "slug": "minimum-relative-loss-after-buying-chocolates", "title": "Minimum Relative Loss After Buying Chocolates", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 2824, "slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "difficulty": "Medium"}]},
    {"number": 2826, "slug": "sorting-three-groups", "title": "Sorting Three Groups", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming"], "similar_problems": []},
    {"number": 2830, "slug": "maximize-the-profit-as-the-salesman", "title": "Maximize the Profit as the Salesman", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": []},
    {"number": 2831, "slug": "find-the-longest-equal-subarray", "title": "Find the Longest Equal Subarray", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Sliding Window"], "similar_problems": []},
    {"number": 2838, "slug": "maximum-coins-heroes-can-collect", "title": "Maximum Coins Heroes Can Collect", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 2856, "slug": "minimum-array-length-after-pair-removals", "title": "Minimum Array Length After Pair Removals", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Greedy", "Counting"], "similar_problems": [{"slug": "find-the-maximum-number-of-marked-indices", "title": "Find the Maximum Number of Marked Indices", "difficulty": "Medium"}]},
    {"number": 2861, "slug": "maximum-number-of-alloys", "title": "Maximum Number of Alloys", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 2926, "slug": "maximum-balanced-subsequence-sum", "title": "Maximum Balanced Subsequence Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Binary Indexed Tree", "Segment Tree"], "similar_problems": [{"slug": "number-of-pairs-satisfying-inequality", "title": "Number of Pairs Satisfying Inequality", "difficulty": "Hard"}]},
    {"number": 2936, "slug": "number-of-equal-numbers-blocks", "title": "Number of Equal Numbers Blocks", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Interactive"], "similar_problems": []},
    {"number": 2940, "slug": "find-building-where-alice-and-bob-can-meet", "title": "Find Building Where Alice and Bob Can Meet", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Binary Indexed Tree", "Segment Tree", "Heap (Priority Queue)", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}, {"slug": "furthest-building-you-can-reach", "title": "Furthest Building You Can Reach", "difficulty": "Medium"}]},
    {"number": 2941, "slug": "maximum-gcd-sum-of-a-subarray", "title": "Maximum GCD-Sum of a Subarray", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Number Theory"], "similar_problems": []},
    {"number": 2945, "slug": "find-maximum-non-decreasing-array-length", "title": "Find Maximum Non-decreasing Array Length", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Stack", "Queue", "Monotonic Stack", "Monotonic Queue"], "similar_problems": []},
    {"number": 2967, "slug": "minimum-cost-to-make-array-equalindromic", "title": "Minimum Cost to Make Array Equalindromic", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "minimum-moves-to-equal-array-elements-ii", "title": "Minimum Moves to Equal Array Elements II", "difficulty": "Medium"}, {"slug": "minimum-cost-to-make-array-equal", "title": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}]},
    {"number": 2968, "slug": "apply-operations-to-maximize-frequency-score", "title": "Apply Operations to Maximize Frequency Score", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium"}]},
    {"number": 2970, "slug": "count-the-number-of-incremovable-subarrays-i", "title": "Count the Number of Incremovable Subarrays I", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Enumeration"], "similar_problems": [{"slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium"}, {"slug": "number-of-subarrays-that-match-a-pattern-i", "title": "Number of Subarrays That Match a Pattern I", "difficulty": "Medium"}]},
    {"number": 2972, "slug": "count-the-number-of-incremovable-subarrays-ii", "title": "Count the Number of Incremovable Subarrays II", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium"}]},
    {"number": 2981, "slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Sliding Window", "Counting"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 2982, "slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium", "tags": ["Hash Table", "String", "Binary Search", "Sliding Window", "Counting"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-least-k-repeating-characters", "title": "Longest Substring with At Least K Repeating Characters", "difficulty": "Medium"}]},
    {"number": 3006, "slug": "find-beautiful-indices-in-the-given-array-i", "title": "Find Beautiful Indices in the Given Array I", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Binary Search", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": []},
    {"number": 3007, "slug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k", "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K", "difficulty": "Medium", "tags": ["Math", "Binary Search", "Dynamic Programming", "Bit Manipulation"], "similar_problems": []},
    {"number": 3008, "slug": "find-beautiful-indices-in-the-given-array-ii", "title": "Find Beautiful Indices in the Given Array II", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": []},
    {"number": 3048, "slug": "earliest-second-to-mark-indices-i", "title": "Earliest Second to Mark Indices I", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 3049, "slug": "earliest-second-to-mark-indices-ii", "title": "Earliest Second to Mark Indices II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3104, "slug": "find-longest-self-contained-substring", "title": "Find Longest Self-Contained Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "select-k-disjoint-special-substrings", "title": "Select K Disjoint Special Substrings", "difficulty": "Medium"}]},
    {"number": 3109, "slug": "find-the-index-of-permutation", "title": "Find the Index of Permutation", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": []},
    {"number": 3113, "slug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum", "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-subarrays-with-bounded-maximum", "title": "Number of Subarrays with Bounded Maximum", "difficulty": "Medium"}, {"slug": "count-subarrays-with-fixed-bounds", "title": "Count Subarrays With Fixed Bounds", "difficulty": "Hard"}, {"slug": "count-subarrays-where-max-element-appears-at-least-k-times", "title": "Count Subarrays Where Max Element Appears at Least K Times", "difficulty": "Medium"}]},
    {"number": 3116, "slug": "kth-smallest-amount-with-single-denomination-combination", "title": "Kth Smallest Amount With Single Denomination Combination", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Bit Manipulation", "Combinatorics", "Number Theory"], "similar_problems": [{"slug": "kth-smallest-number-in-multiplication-table", "title": "Kth Smallest Number in Multiplication Table", "difficulty": "Hard"}, {"slug": "find-the-number-of-possible-ways-for-an-event", "title": "Find the Number of Possible Ways for an Event", "difficulty": "Hard"}]},
    {"number": 3117, "slug": "minimum-sum-of-values-by-dividing-array", "title": "Minimum Sum of Values by Dividing Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Bit Manipulation", "Segment Tree", "Queue"], "similar_problems": [{"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "split-with-minimum-sum", "title": "Split With Minimum Sum", "difficulty": "Easy"}, {"slug": "find-subarray-with-bitwise-or-closest-to-k", "title": "Find Subarray With Bitwise OR Closest to K", "difficulty": "Hard"}, {"slug": "find-x-value-of-array-ii", "title": "Find X Value of Array II", "difficulty": "Hard"}]},
    {"number": 3134, "slug": "find-the-median-of-the-uniqueness-array", "title": "Find the Median of the Uniqueness Array", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Sliding Window"], "similar_problems": [{"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}, {"slug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "difficulty": "Hard"}]},
    {"number": 3135, "slug": "equalize-strings-by-adding-or-removing-characters-at-ends", "title": "Equalize Strings by Adding or Removing Characters at Ends", "difficulty": "Medium", "tags": ["String", "Binary Search", "Dynamic Programming", "Sliding Window", "Hash Function"], "similar_problems": []},
    {"number": 3143, "slug": "maximum-points-inside-the-square", "title": "Maximum Points Inside the Square", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Binary Search", "Sorting"], "similar_problems": [{"slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard"}]},
    {"number": 3145, "slug": "find-products-of-elements-of-big-array", "title": "Find Products of Elements of Big Array", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Bit Manipulation"], "similar_problems": []},
    {"number": 3152, "slug": "special-array-ii", "title": "Special Array II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Prefix Sum"], "similar_problems": []},
    {"number": 3155, "slug": "maximum-number-of-upgradable-servers", "title": "Maximum Number of Upgradable Servers", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search"], "similar_problems": []},
    {"number": 3161, "slug": "block-placement-queries", "title": "Block Placement Queries", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Binary Indexed Tree", "Segment Tree"], "similar_problems": [{"slug": "building-boxes", "title": "Building Boxes", "difficulty": "Hard"}, {"slug": "fruits-into-baskets-iii", "title": "Fruits Into Baskets III", "difficulty": "Medium"}]},
    {"number": 3171, "slug": "find-subarray-with-bitwise-or-closest-to-k", "title": "Find Subarray With Bitwise OR Closest to K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Bit Manipulation", "Segment Tree"], "similar_problems": [{"slug": "minimum-sum-of-values-by-dividing-array", "title": "Minimum Sum of Values by Dividing Array", "difficulty": "Hard"}]},
    {"number": 3186, "slug": "maximum-total-damage-with-spell-casting", "title": "Maximum Total Damage With Spell Casting", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Dynamic Programming", "Sorting", "Counting"], "similar_problems": []},
    {"number": 3209, "slug": "number-of-subarrays-with-and-value-of-k", "title": "Number of Subarrays With AND Value of K", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Bit Manipulation", "Segment Tree"], "similar_problems": []},
    {"number": 3231, "slug": "minimum-number-of-increasing-subsequence-to-be-removed", "title": "Minimum Number of Increasing Subsequence to Be Removed", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 3261, "slug": "count-substrings-that-satisfy-k-constraint-ii", "title": "Count Substrings That Satisfy K-Constraint II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Sliding Window", "Prefix Sum"], "similar_problems": []},
    {"number": 3281, "slug": "maximize-score-of-numbers-in-ranges", "title": "Maximize Score of Numbers in Ranges", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sorting"], "similar_problems": [{"slug": "find-k-th-smallest-pair-distance", "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard"}]},
    {"number": 3288, "slug": "length-of-the-longest-increasing-path", "title": "Length of the Longest Increasing Path", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sorting"], "similar_problems": []},
    {"number": 3291, "slug": "minimum-number-of-valid-strings-to-form-target-i", "title": "Minimum Number of Valid Strings to Form Target I", "difficulty": "Medium", "tags": ["Array", "String", "Binary Search", "Dynamic Programming", "Trie", "Segment Tree", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}, {"slug": "construct-string-with-minimum-cost", "title": "Construct String with Minimum Cost", "difficulty": "Hard"}]},
    {"number": 3292, "slug": "minimum-number-of-valid-strings-to-form-target-ii", "title": "Minimum Number of Valid Strings to Form Target II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Dynamic Programming", "Segment Tree", "Rolling Hash", "String Matching", "Hash Function"], "similar_problems": [{"slug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "difficulty": "Hard"}, {"slug": "construct-string-with-minimum-cost", "title": "Construct String with Minimum Cost", "difficulty": "Hard"}]},
    {"number": 3296, "slug": "minimum-number-of-seconds-to-make-mountain-height-zero", "title": "Minimum Number of Seconds to Make Mountain Height Zero", "difficulty": "Medium", "tags": ["Array", "Math", "Binary Search", "Greedy", "Heap (Priority Queue)"], "similar_problems": []},
    {"number": 3312, "slug": "sorted-gcd-pair-queries", "title": "Sorted GCD Pair Queries", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Combinatorics", "Counting", "Number Theory", "Prefix Sum"], "similar_problems": []},
    {"number": 3323, "slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Sorting"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}]},
    {"number": 3344, "slug": "maximum-sized-array", "title": "Maximum Sized Array", "difficulty": "Medium", "tags": ["Binary Search", "Bit Manipulation"], "similar_problems": []},
    {"number": 3346, "slug": "maximum-frequency-of-an-element-after-performing-operations-i", "title": "Maximum Frequency of an Element After Performing Operations I", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium"}, {"slug": "count-elements-with-maximum-frequency", "title": "Count Elements With Maximum Frequency", "difficulty": "Easy"}]},
    {"number": 3347, "slug": "maximum-frequency-of-an-element-after-performing-operations-ii", "title": "Maximum Frequency of an Element After Performing Operations II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": [{"slug": "frequency-of-the-most-frequent-element", "title": "Frequency of the Most Frequent Element", "difficulty": "Medium"}, {"slug": "count-elements-with-maximum-frequency", "title": "Count Elements With Maximum Frequency", "difficulty": "Easy"}]},
    {"number": 3350, "slug": "adjacent-increasing-subarrays-detection-ii", "title": "Adjacent Increasing Subarrays Detection II", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 3356, "slug": "zero-array-transformation-ii", "title": "Zero Array Transformation II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Prefix Sum"], "similar_problems": [{"slug": "corporate-flight-bookings", "title": "Corporate Flight Bookings", "difficulty": "Medium"}, {"slug": "minimum-moves-to-make-array-complementary", "title": "Minimum Moves to Make Array Complementary", "difficulty": "Medium"}, {"slug": "zero-array-transformation-iv", "title": "Zero Array Transformation IV", "difficulty": "Medium"}]},
    {"number": 3357, "slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "minimum-absolute-sum-difference", "title": "Minimum Absolute Sum Difference", "difficulty": "Medium"}, {"slug": "minimize-the-maximum-adjacent-element-difference", "title": "Minimize the Maximum Adjacent Element Difference", "difficulty": "Hard"}]},
    {"number": 3369, "slug": "design-an-array-statistics-tracker", "title": "Design an Array Statistics Tracker ", "difficulty": "Hard", "tags": ["Hash Table", "Binary Search", "Design", "Queue", "Heap (Priority Queue)", "Data Stream", "Ordered Set"], "similar_problems": []},
    {"number": 3398, "slug": "smallest-substring-with-identical-characters-i", "title": "Smallest Substring With Identical Characters I", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Enumeration"], "similar_problems": []},
    {"number": 3399, "slug": "smallest-substring-with-identical-characters-ii", "title": "Smallest Substring With Identical Characters II", "difficulty": "Hard", "tags": ["String", "Binary Search"], "similar_problems": []},
    {"number": 3413, "slug": "maximum-coins-from-k-consecutive-bags", "title": "Maximum Coins From K Consecutive Bags", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Greedy", "Sliding Window", "Sorting", "Prefix Sum"], "similar_problems": []},
    {"number": 3414, "slug": "maximum-score-of-non-overlapping-intervals", "title": "Maximum Score of Non-overlapping Intervals", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similar_problems": [{"slug": "two-best-non-overlapping-events", "title": "Two Best Non-Overlapping Events", "difficulty": "Medium"}]},
    {"number": 3419, "slug": "minimize-the-maximum-edge-weight-of-graph", "title": "Minimize the Maximum Edge Weight of Graph", "difficulty": "Medium", "tags": ["Binary Search", "Depth-First Search", "Breadth-First Search", "Graph", "Shortest Path"], "similar_problems": []},
    {"number": 3449, "slug": "maximize-the-minimum-game-score", "title": "Maximize the Minimum Game Score", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": []},
    {"number": 3453, "slug": "separate-squares-i", "title": "Separate Squares I", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []},
    {"number": 3454, "slug": "separate-squares-ii", "title": "Separate Squares II", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Segment Tree", "Line Sweep"], "similar_problems": [{"slug": "rectangle-area-ii", "title": "Rectangle Area II", "difficulty": "Hard"}]},
    {"number": 3455, "slug": "shortest-matching-substring", "title": "Shortest Matching Substring", "difficulty": "Hard", "tags": ["Two Pointers", "String", "Binary Search", "String Matching"], "similar_problems": []},
    {"number": 3464, "slug": "maximize-the-distance-between-points-on-a-square", "title": "Maximize the Distance Between Points on a Square", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Greedy"], "similar_problems": [{"slug": "maximum-number-of-integers-to-choose-from-a-range-ii", "title": "Maximum Number of Integers to Choose From a Range II", "difficulty": "Medium"}, {"slug": "maximum-points-inside-the-square", "title": "Maximum Points Inside the Square", "difficulty": "Medium"}]},
    {"number": 3477, "slug": "fruits-into-baskets-ii", "title": "Fruits Into Baskets II", "difficulty": "Easy", "tags": ["Array", "Binary Search", "Segment Tree", "Simulation", "Ordered Set"], "similar_problems": [{"slug": "fruit-into-baskets", "title": "Fruit Into Baskets", "difficulty": "Medium"}]},
    {"number": 3479, "slug": "fruits-into-baskets-iii", "title": "Fruits Into Baskets III", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Segment Tree", "Ordered Set"], "similar_problems": [{"slug": "block-placement-queries", "title": "Block Placement Queries", "difficulty": "Hard"}]},
    {"number": 3488, "slug": "closest-equal-element-queries", "title": "Closest Equal Element Queries", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search"], "similar_problems": []},
    {"number": 3501, "slug": "maximize-active-section-with-trade-ii", "title": "Maximize Active Section with Trade II", "difficulty": "Hard", "tags": ["Array", "String", "Binary Search", "Segment Tree"], "similar_problems": []},
    {"number": 3508, "slug": "implement-router", "title": "Implement Router", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Design", "Queue", "Ordered Set"], "similar_problems": []},
    {"number": 3520, "slug": "minimum-threshold-for-inversion-pairs-count", "title": "Minimum Threshold for Inversion Pairs Count", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Binary Indexed Tree", "Segment Tree"], "similar_problems": []},
    {"number": 3532, "slug": "path-existence-queries-in-a-graph-i", "title": "Path Existence Queries in a Graph I", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Binary Search", "Union Find", "Graph"], "similar_problems": []},
    {"number": 3534, "slug": "path-existence-queries-in-a-graph-ii", "title": "Path Existence Queries in a Graph II", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Dynamic Programming", "Greedy", "Bit Manipulation", "Graph", "Sorting"], "similar_problems": []},
    {"number": 3585, "slug": "find-weighted-median-node-in-tree", "title": "Find Weighted Median Node in Tree", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Tree", "Depth-First Search"], "similar_problems": []},
    {"number": 3600, "slug": "maximize-spanning-tree-stability-with-upgrades", "title": "Maximize Spanning Tree Stability with Upgrades", "difficulty": "Hard", "tags": ["Binary Search", "Greedy", "Union Find", "Graph", "Minimum Spanning Tree"], "similar_problems": []},
    {"number": 3605, "slug": "minimum-stability-factor-of-array", "title": "Minimum Stability Factor of Array", "difficulty": "Hard", "tags": ["Array", "Math", "Binary Search", "Greedy", "Segment Tree", "Number Theory"], "similar_problems": []},
    {"number": 3608, "slug": "minimum-time-for-k-connected-components", "title": "Minimum Time for K Connected Components", "difficulty": "Medium", "tags": ["Binary Search", "Union Find", "Graph", "Sorting"], "similar_problems": []},
    {"number": 3613, "slug": "minimize-maximum-component-cost", "title": "Minimize Maximum Component Cost", "difficulty": "Medium", "tags": ["Binary Search", "Union Find", "Graph", "Sorting"], "similar_problems": []},
    {"number": 3620, "slug": "network-recovery-pathways", "title": "Network Recovery Pathways", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Graph", "Topological Sort", "Heap (Priority Queue)", "Shortest Path"], "similar_problems": []},
    {"number": 3633, "slug": "earliest-finish-time-for-land-and-water-rides-i", "title": "Earliest Finish Time for Land and Water Rides I", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3635, "slug": "earliest-finish-time-for-land-and-water-rides-ii", "title": "Earliest Finish Time for Land and Water Rides II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"], "similar_problems": []},
    {"number": 3636, "slug": "threshold-majority-queries", "title": "Threshold Majority Queries", "difficulty": "Hard", "tags": ["Array", "Hash Table", "Binary Search", "Divide and Conquer", "Counting", "Prefix Sum"], "similar_problems": []},
    {"number": 3639, "slug": "minimum-time-to-activate-string", "title": "Minimum Time to Activate String", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": []}
]