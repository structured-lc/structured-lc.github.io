[
    {"number": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"},
    {"number": 95, "slug": "unique-binary-search-trees-ii", "title": "Unique Binary Search Trees II", "difficulty": "Medium"},
    {"number": 96, "slug": "unique-binary-search-trees", "title": "Unique Binary Search Trees", "difficulty": "Medium"},
    {"number": 98, "slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium"},
    {"number": 99, "slug": "recover-binary-search-tree", "title": "Recover Binary Search Tree", "difficulty": "Medium"},
    {"number": 100, "slug": "same-tree", "title": "Same Tree", "difficulty": "Easy"},
    {"number": 101, "slug": "symmetric-tree", "title": "Symmetric Tree", "difficulty": "Easy"},
    {"number": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"},
    {"number": 103, "slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"},
    {"number": 105, "slug": "construct-binary-tree-from-preorder-and-inorder-traversal", "title": "Construct Binary Tree from Preorder and Inorder Traversal", "difficulty": "Medium"},
    {"number": 106, "slug": "construct-binary-tree-from-inorder-and-postorder-traversal", "title": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": "Medium"},
    {"number": 107, "slug": "binary-tree-level-order-traversal-ii", "title": "Binary Tree Level Order Traversal II", "difficulty": "Medium"},
    {"number": 108, "slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy"},
    {"number": 109, "slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium"},
    {"number": 110, "slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"},
    {"number": 111, "slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"},
    {"number": 112, "slug": "path-sum", "title": "Path Sum", "difficulty": "Easy"},
    {"number": 113, "slug": "path-sum-ii", "title": "Path Sum II", "difficulty": "Medium"},
    {"number": 114, "slug": "flatten-binary-tree-to-linked-list", "title": "Flatten Binary Tree to Linked List", "difficulty": "Medium"},
    {"number": 116, "slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium"},
    {"number": 117, "slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium"},
    {"number": 124, "slug": "binary-tree-maximum-path-sum", "title": "Binary Tree Maximum Path Sum", "difficulty": "Hard"},
    {"number": 129, "slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"},
    {"number": 144, "slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"},
    {"number": 145, "slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"},
    {"number": 156, "slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"},
    {"number": 173, "slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"},
    {"number": 199, "slug": "binary-tree-right-side-view", "title": "Binary Tree Right Side View", "difficulty": "Medium"},
    {"number": 222, "slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy"},
    {"number": 226, "slug": "invert-binary-tree", "title": "Invert Binary Tree", "difficulty": "Easy"},
    {"number": 230, "slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"},
    {"number": 235, "slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"},
    {"number": 250, "slug": "count-univalue-subtrees", "title": "Count Univalue Subtrees", "difficulty": "Medium"},
    {"number": 255, "slug": "verify-preorder-sequence-in-binary-search-tree", "title": "Verify Preorder Sequence in Binary Search Tree", "difficulty": "Medium"},
    {"number": 257, "slug": "binary-tree-paths", "title": "Binary Tree Paths", "difficulty": "Easy"},
    {"number": 270, "slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"},
    {"number": 272, "slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"},
    {"number": 285, "slug": "inorder-successor-in-bst", "title": "Inorder Successor in BST", "difficulty": "Medium"},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"},
    {"number": 298, "slug": "binary-tree-longest-consecutive-sequence", "title": "Binary Tree Longest Consecutive Sequence", "difficulty": "Medium"},
    {"number": 314, "slug": "binary-tree-vertical-order-traversal", "title": "Binary Tree Vertical Order Traversal", "difficulty": "Medium"},
    {"number": 331, "slug": "verify-preorder-serialization-of-a-binary-tree", "title": "Verify Preorder Serialization of a Binary Tree", "difficulty": "Medium"},
    {"number": 333, "slug": "largest-bst-subtree", "title": "Largest BST Subtree", "difficulty": "Medium"},
    {"number": 337, "slug": "house-robber-iii", "title": "House Robber III", "difficulty": "Medium"},
    {"number": 366, "slug": "find-leaves-of-binary-tree", "title": "Find Leaves of Binary Tree", "difficulty": "Medium"},
    {"number": 404, "slug": "sum-of-left-leaves", "title": "Sum of Left Leaves", "difficulty": "Easy"},
    {"number": 426, "slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium"},
    {"number": 431, "slug": "encode-n-ary-tree-to-binary-tree", "title": "Encode N-ary Tree to Binary Tree", "difficulty": "Hard"},
    {"number": 437, "slug": "path-sum-iii", "title": "Path Sum III", "difficulty": "Medium"},
    {"number": 449, "slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"},
    {"number": 450, "slug": "delete-node-in-a-bst", "title": "Delete Node in a BST", "difficulty": "Medium"},
    {"number": 501, "slug": "find-mode-in-binary-search-tree", "title": "Find Mode in Binary Search Tree", "difficulty": "Easy"},
    {"number": 508, "slug": "most-frequent-subtree-sum", "title": "Most Frequent Subtree Sum", "difficulty": "Medium"},
    {"number": 510, "slug": "inorder-successor-in-bst-ii", "title": "Inorder Successor in BST II", "difficulty": "Medium"},
    {"number": 513, "slug": "find-bottom-left-tree-value", "title": "Find Bottom Left Tree Value", "difficulty": "Medium"},
    {"number": 515, "slug": "find-largest-value-in-each-tree-row", "title": "Find Largest Value in Each Tree Row", "difficulty": "Medium"},
    {"number": 530, "slug": "minimum-absolute-difference-in-bst", "title": "Minimum Absolute Difference in BST", "difficulty": "Easy"},
    {"number": 536, "slug": "construct-binary-tree-from-string", "title": "Construct Binary Tree from String", "difficulty": "Medium"},
    {"number": 538, "slug": "convert-bst-to-greater-tree", "title": "Convert BST to Greater Tree", "difficulty": "Medium"},
    {"number": 543, "slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy"},
    {"number": 545, "slug": "boundary-of-binary-tree", "title": "Boundary of Binary Tree", "difficulty": "Medium"},
    {"number": 549, "slug": "binary-tree-longest-consecutive-sequence-ii", "title": "Binary Tree Longest Consecutive Sequence II", "difficulty": "Medium"},
    {"number": 563, "slug": "binary-tree-tilt", "title": "Binary Tree Tilt", "difficulty": "Easy"},
    {"number": 572, "slug": "subtree-of-another-tree", "title": "Subtree of Another Tree", "difficulty": "Easy"},
    {"number": 606, "slug": "construct-string-from-binary-tree", "title": "Construct String from Binary Tree", "difficulty": "Medium"},
    {"number": 617, "slug": "merge-two-binary-trees", "title": "Merge Two Binary Trees", "difficulty": "Easy"},
    {"number": 623, "slug": "add-one-row-to-tree", "title": "Add One Row to Tree", "difficulty": "Medium"},
    {"number": 637, "slug": "average-of-levels-in-binary-tree", "title": "Average of Levels in Binary Tree", "difficulty": "Easy"},
    {"number": 652, "slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"},
    {"number": 653, "slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"},
    {"number": 654, "slug": "maximum-binary-tree", "title": "Maximum Binary Tree", "difficulty": "Medium"},
    {"number": 655, "slug": "print-binary-tree", "title": "Print Binary Tree", "difficulty": "Medium"},
    {"number": 662, "slug": "maximum-width-of-binary-tree", "title": "Maximum Width of Binary Tree", "difficulty": "Medium"},
    {"number": 663, "slug": "equal-tree-partition", "title": "Equal Tree Partition", "difficulty": "Medium"},
    {"number": 666, "slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"},
    {"number": 669, "slug": "trim-a-binary-search-tree", "title": "Trim a Binary Search Tree", "difficulty": "Medium"},
    {"number": 671, "slug": "second-minimum-node-in-a-binary-tree", "title": "Second Minimum Node In a Binary Tree", "difficulty": "Easy"},
    {"number": 687, "slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"},
    {"number": 700, "slug": "search-in-a-binary-search-tree", "title": "Search in a Binary Search Tree", "difficulty": "Easy"},
    {"number": 701, "slug": "insert-into-a-binary-search-tree", "title": "Insert into a Binary Search Tree", "difficulty": "Medium"},
    {"number": 703, "slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"},
    {"number": 742, "slug": "closest-leaf-in-a-binary-tree", "title": "Closest Leaf in a Binary Tree", "difficulty": "Medium"},
    {"number": 776, "slug": "split-bst", "title": "Split BST", "difficulty": "Medium"},
    {"number": 783, "slug": "minimum-distance-between-bst-nodes", "title": "Minimum Distance Between BST Nodes", "difficulty": "Easy"},
    {"number": 814, "slug": "binary-tree-pruning", "title": "Binary Tree Pruning", "difficulty": "Medium"},
    {"number": 863, "slug": "all-nodes-distance-k-in-binary-tree", "title": "All Nodes Distance K in Binary Tree", "difficulty": "Medium"},
    {"number": 865, "slug": "smallest-subtree-with-all-the-deepest-nodes", "title": "Smallest Subtree with all the Deepest Nodes", "difficulty": "Medium"},
    {"number": 872, "slug": "leaf-similar-trees", "title": "Leaf-Similar Trees", "difficulty": "Easy"},
    {"number": 889, "slug": "construct-binary-tree-from-preorder-and-postorder-traversal", "title": "Construct Binary Tree from Preorder and Postorder Traversal", "difficulty": "Medium"},
    {"number": 894, "slug": "all-possible-full-binary-trees", "title": "All Possible Full Binary Trees", "difficulty": "Medium"},
    {"number": 897, "slug": "increasing-order-search-tree", "title": "Increasing Order Search Tree", "difficulty": "Easy"},
    {"number": 919, "slug": "complete-binary-tree-inserter", "title": "Complete Binary Tree Inserter", "difficulty": "Medium"},
    {"number": 938, "slug": "range-sum-of-bst", "title": "Range Sum of BST", "difficulty": "Easy"},
    {"number": 951, "slug": "flip-equivalent-binary-trees", "title": "Flip Equivalent Binary Trees", "difficulty": "Medium"},
    {"number": 958, "slug": "check-completeness-of-a-binary-tree", "title": "Check Completeness of a Binary Tree", "difficulty": "Medium"},
    {"number": 965, "slug": "univalued-binary-tree", "title": "Univalued Binary Tree", "difficulty": "Easy"},
    {"number": 968, "slug": "binary-tree-cameras", "title": "Binary Tree Cameras", "difficulty": "Hard"},
    {"number": 971, "slug": "flip-binary-tree-to-match-preorder-traversal", "title": "Flip Binary Tree To Match Preorder Traversal", "difficulty": "Medium"},
    {"number": 979, "slug": "distribute-coins-in-binary-tree", "title": "Distribute Coins in Binary Tree", "difficulty": "Medium"},
    {"number": 987, "slug": "vertical-order-traversal-of-a-binary-tree", "title": "Vertical Order Traversal of a Binary Tree", "difficulty": "Hard"},
    {"number": 988, "slug": "smallest-string-starting-from-leaf", "title": "Smallest String Starting From Leaf", "difficulty": "Medium"},
    {"number": 993, "slug": "cousins-in-binary-tree", "title": "Cousins in Binary Tree", "difficulty": "Easy"},
    {"number": 998, "slug": "maximum-binary-tree-ii", "title": "Maximum Binary Tree II", "difficulty": "Medium"},
    {"number": 1008, "slug": "construct-binary-search-tree-from-preorder-traversal", "title": "Construct Binary Search Tree from Preorder Traversal", "difficulty": "Medium"},
    {"number": 1022, "slug": "sum-of-root-to-leaf-binary-numbers", "title": "Sum of Root To Leaf Binary Numbers", "difficulty": "Easy"},
    {"number": 1026, "slug": "maximum-difference-between-node-and-ancestor", "title": "Maximum Difference Between Node and Ancestor", "difficulty": "Medium"},
    {"number": 1028, "slug": "recover-a-tree-from-preorder-traversal", "title": "Recover a Tree From Preorder Traversal", "difficulty": "Hard"},
    {"number": 1038, "slug": "binary-search-tree-to-greater-sum-tree", "title": "Binary Search Tree to Greater Sum Tree", "difficulty": "Medium"},
    {"number": 1080, "slug": "insufficient-nodes-in-root-to-leaf-paths", "title": "Insufficient Nodes in Root to Leaf Paths", "difficulty": "Medium"},
    {"number": 1104, "slug": "path-in-zigzag-labelled-binary-tree", "title": "Path In Zigzag Labelled Binary Tree", "difficulty": "Medium"},
    {"number": 1110, "slug": "delete-nodes-and-return-forest", "title": "Delete Nodes And Return Forest", "difficulty": "Medium"},
    {"number": 1120, "slug": "maximum-average-subtree", "title": "Maximum Average Subtree", "difficulty": "Medium"},
    {"number": 1123, "slug": "lowest-common-ancestor-of-deepest-leaves", "title": "Lowest Common Ancestor of Deepest Leaves", "difficulty": "Medium"},
    {"number": 1145, "slug": "binary-tree-coloring-game", "title": "Binary Tree Coloring Game", "difficulty": "Medium"},
    {"number": 1161, "slug": "maximum-level-sum-of-a-binary-tree", "title": "Maximum Level Sum of a Binary Tree", "difficulty": "Medium"},
    {"number": 1214, "slug": "two-sum-bsts", "title": "Two Sum BSTs", "difficulty": "Medium"},
    {"number": 1261, "slug": "find-elements-in-a-contaminated-binary-tree", "title": "Find Elements in a Contaminated Binary Tree", "difficulty": "Medium"},
    {"number": 1302, "slug": "deepest-leaves-sum", "title": "Deepest Leaves Sum", "difficulty": "Medium"},
    {"number": 1305, "slug": "all-elements-in-two-binary-search-trees", "title": "All Elements in Two Binary Search Trees", "difficulty": "Medium"},
    {"number": 1315, "slug": "sum-of-nodes-with-even-valued-grandparent", "title": "Sum of Nodes with Even-Valued Grandparent", "difficulty": "Medium"},
    {"number": 1325, "slug": "delete-leaves-with-a-given-value", "title": "Delete Leaves With a Given Value", "difficulty": "Medium"},
    {"number": 1339, "slug": "maximum-product-of-splitted-binary-tree", "title": "Maximum Product of Splitted Binary Tree", "difficulty": "Medium"},
    {"number": 1361, "slug": "validate-binary-tree-nodes", "title": "Validate Binary Tree Nodes", "difficulty": "Medium"},
    {"number": 1367, "slug": "linked-list-in-binary-tree", "title": "Linked List in Binary Tree", "difficulty": "Medium"},
    {"number": 1372, "slug": "longest-zigzag-path-in-a-binary-tree", "title": "Longest ZigZag Path in a Binary Tree", "difficulty": "Medium"},
    {"number": 1373, "slug": "maximum-sum-bst-in-binary-tree", "title": "Maximum Sum BST in Binary Tree", "difficulty": "Hard"},
    {"number": 1379, "slug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree", "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree", "difficulty": "Easy"},
    {"number": 1382, "slug": "balance-a-binary-search-tree", "title": "Balance a Binary Search Tree", "difficulty": "Medium"},
    {"number": 1430, "slug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree", "title": "Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree", "difficulty": "Medium"},
    {"number": 1448, "slug": "count-good-nodes-in-binary-tree", "title": "Count Good Nodes in Binary Tree", "difficulty": "Medium"},
    {"number": 1457, "slug": "pseudo-palindromic-paths-in-a-binary-tree", "title": "Pseudo-Palindromic Paths in a Binary Tree", "difficulty": "Medium"},
    {"number": 1469, "slug": "find-all-the-lonely-nodes", "title": "Find All The Lonely Nodes", "difficulty": "Easy"},
    {"number": 1485, "slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"},
    {"number": 1530, "slug": "number-of-good-leaf-nodes-pairs", "title": "Number of Good Leaf Nodes Pairs", "difficulty": "Medium"},
    {"number": 1569, "slug": "number-of-ways-to-reorder-array-to-get-same-bst", "title": "Number of Ways to Reorder Array to Get Same BST", "difficulty": "Hard"},
    {"number": 1586, "slug": "binary-search-tree-iterator-ii", "title": "Binary Search Tree Iterator II", "difficulty": "Medium"},
    {"number": 1597, "slug": "build-binary-expression-tree-from-infix-expression", "title": "Build Binary Expression Tree From Infix Expression", "difficulty": "Hard"},
    {"number": 1602, "slug": "find-nearest-right-node-in-binary-tree", "title": "Find Nearest Right Node in Binary Tree", "difficulty": "Medium"},
    {"number": 1609, "slug": "even-odd-tree", "title": "Even Odd Tree", "difficulty": "Medium"},
    {"number": 1612, "slug": "check-if-two-expression-trees-are-equivalent", "title": "Check If Two Expression Trees are Equivalent", "difficulty": "Medium"},
    {"number": 1628, "slug": "design-an-expression-tree-with-evaluate-function", "title": "Design an Expression Tree With Evaluate Function", "difficulty": "Medium"},
    {"number": 1644, "slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"},
    {"number": 1650, "slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"},
    {"number": 1660, "slug": "correct-a-binary-tree", "title": "Correct a Binary Tree", "difficulty": "Medium"},
    {"number": 1666, "slug": "change-the-root-of-a-binary-tree", "title": "Change the Root of a Binary Tree", "difficulty": "Medium"},
    {"number": 1676, "slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"},
    {"number": 1740, "slug": "find-distance-in-a-binary-tree", "title": "Find Distance in a Binary Tree", "difficulty": "Medium"},
    {"number": 1902, "slug": "depth-of-bst-given-insertion-order", "title": "Depth of BST Given Insertion Order", "difficulty": "Medium"},
    {"number": 1932, "slug": "merge-bsts-to-create-single-bst", "title": "Merge BSTs to Create Single BST", "difficulty": "Hard"},
    {"number": 1973, "slug": "count-nodes-equal-to-sum-of-descendants", "title": "Count Nodes Equal to Sum of Descendants", "difficulty": "Medium"},
    {"number": 2005, "slug": "subtree-removal-game-with-fibonacci-tree", "title": "Subtree Removal Game with Fibonacci Tree", "difficulty": "Hard"},
    {"number": 2049, "slug": "count-nodes-with-the-highest-score", "title": "Count Nodes With the Highest Score", "difficulty": "Medium"},
    {"number": 2096, "slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"},
    {"number": 2196, "slug": "create-binary-tree-from-descriptions", "title": "Create Binary Tree From Descriptions", "difficulty": "Medium"},
    {"number": 2236, "slug": "root-equals-sum-of-children", "title": "Root Equals Sum of Children", "difficulty": "Easy"},
    {"number": 2265, "slug": "count-nodes-equal-to-average-of-subtree", "title": "Count Nodes Equal to Average of Subtree", "difficulty": "Medium"},
    {"number": 2313, "slug": "minimum-flips-in-binary-tree-to-get-result", "title": "Minimum Flips in Binary Tree to Get Result", "difficulty": "Hard"},
    {"number": 2331, "slug": "evaluate-boolean-binary-tree", "title": "Evaluate Boolean Binary Tree", "difficulty": "Easy"},
    {"number": 2385, "slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"},
    {"number": 2415, "slug": "reverse-odd-levels-of-binary-tree", "title": "Reverse Odd Levels of Binary Tree", "difficulty": "Medium"},
    {"number": 2445, "slug": "number-of-nodes-with-value-one", "title": "Number of Nodes With Value One", "difficulty": "Medium"},
    {"number": 2458, "slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"},
    {"number": 2471, "slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level", "title": "Minimum Number of Operations to Sort a Binary Tree by Level", "difficulty": "Medium"},
    {"number": 2476, "slug": "closest-nodes-queries-in-a-binary-search-tree", "title": "Closest Nodes Queries in a Binary Search Tree", "difficulty": "Medium"},
    {"number": 2509, "slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"},
    {"number": 2583, "slug": "kth-largest-sum-in-a-binary-tree", "title": "Kth Largest Sum in a Binary Tree", "difficulty": "Medium"},
    {"number": 2641, "slug": "cousins-in-binary-tree-ii", "title": "Cousins in Binary Tree II", "difficulty": "Medium"},
    {"number": 2673, "slug": "make-costs-of-paths-equal-in-a-binary-tree", "title": "Make Costs of Paths Equal in a Binary Tree", "difficulty": "Medium"},
    {"number": 2689, "slug": "extract-kth-character-from-the-rope-tree", "title": "Extract Kth Character From The Rope Tree", "difficulty": "Easy"},
    {"number": 2764, "slug": "is-array-a-preorder-of-some-binary-tree", "title": "Is Array a Preorder of Some ‌Binary Tree", "difficulty": "Medium"},
    {"number": 2773, "slug": "height-of-special-binary-tree", "title": "Height of Special Binary Tree", "difficulty": "Medium"},
    {"number": 2792, "slug": "count-nodes-that-are-great-enough", "title": "Count Nodes That Are Great Enough", "difficulty": "Hard"},
    {"number": 3157, "slug": "find-the-level-of-tree-with-minimum-sum", "title": "Find the Level of Tree with Minimum Sum", "difficulty": "Medium"},
    {"number": 3319, "slug": "k-th-largest-perfect-subtree-size-in-binary-tree", "title": "K-th Largest Perfect Subtree Size in Binary Tree", "difficulty": "Medium"},
    {"number": 3526, "slug": "range-xor-queries-with-subarray-reversals", "title": "Range XOR Queries with Subarray Reversals", "difficulty": "Hard"}
]