[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}, {"slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium"}]},
    {"number": 8, "slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "valid-number", "title": "Valid Number", "difficulty": "Hard"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 151, "slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium"}]},
    {"number": 186, "slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium"}, {"slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 49, "slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy"}, {"slug": "group-shifted-strings", "title": "Group Shifted Strings", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}, {"slug": "count-anagrams", "title": "Count Anagrams", "difficulty": "Hard"}]},
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "pour-water", "title": "Pour Water", "difficulty": "Medium"}, {"slug": "maximum-value-of-an-ordered-triplet-ii", "title": "Maximum Value of an Ordered Triplet II", "difficulty": "Medium"}]},
    {"number": 73, "slug": "set-matrix-zeroes", "title": "Set Matrix Zeroes", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "game-of-life", "title": "Game of Life", "difficulty": "Medium"}, {"slug": "number-of-laser-beams-in-a-bank", "title": "Number of Laser Beams in a Bank", "difficulty": "Medium"}, {"slug": "minimum-operations-to-remove-adjacent-ones-in-matrix", "title": "Minimum Operations to Remove Adjacent Ones in Matrix", "difficulty": "Hard"}, {"slug": "remove-all-ones-with-row-and-column-flips-ii", "title": "Remove All Ones With Row and Column Flips II", "difficulty": "Medium"}]},
    {"number": 48, "slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium", "tags": ["Array", "Math", "Matrix"], "similar_problems": [{"slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy"}]},
    {"number": 54, "slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 141, "slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}]},
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 445, "slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium", "tags": ["Linked List", "Math", "Stack"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 160, "slug": "intersection-of-two-linked-lists", "title": "Intersection of Two Linked Lists", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "minimum-index-sum-of-two-lists", "title": "Minimum Index Sum of Two Lists", "difficulty": "Easy"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 98, "slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "find-mode-in-binary-search-tree", "title": "Find Mode in Binary Search Tree", "difficulty": "Easy"}]},
    {"number": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy", "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium"}, {"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}, {"slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"}, {"slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"}, {"slug": "kth-smallest-element-in-a-bst", "title": "Kth Smallest Element in a BST", "difficulty": "Medium"}, {"slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"}, {"slug": "inorder-successor-in-bst", "title": "Inorder Successor in BST", "difficulty": "Medium"}, {"slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium"}, {"slug": "minimum-distance-between-bst-nodes", "title": "Minimum Distance Between BST Nodes", "difficulty": "Easy"}]},
    {"number": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"}, {"slug": "binary-tree-level-order-traversal-ii", "title": "Binary Tree Level Order Traversal II", "difficulty": "Medium"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "binary-tree-vertical-order-traversal", "title": "Binary Tree Vertical Order Traversal", "difficulty": "Medium"}, {"slug": "average-of-levels-in-binary-tree", "title": "Average of Levels in Binary Tree", "difficulty": "Easy"}, {"slug": "n-ary-tree-level-order-traversal", "title": "N-ary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "cousins-in-binary-tree", "title": "Cousins in Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level", "title": "Minimum Number of Operations to Sort a Binary Tree by Level", "difficulty": "Medium"}, {"slug": "divide-nodes-into-the-maximum-number-of-groups", "title": "Divide Nodes Into the Maximum Number of Groups", "difficulty": "Hard"}]},
    {"number": 103, "slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "zigzag-grid-traversal-with-skip", "title": "Zigzag Grid Traversal With Skip", "difficulty": "Easy"}]},
    {"number": 116, "slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium"}, {"slug": "binary-tree-right-side-view", "title": "Binary Tree Right Side View", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 117, "slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "Medium", "tags": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "Medium"}]},
    {"number": 235, "slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}]},
    {"number": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "lowest-common-ancestor-of-a-binary-search-tree", "title": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": "Medium"}, {"slug": "smallest-common-region", "title": "Smallest Common Region", "difficulty": "Medium"}, {"slug": "find-players-with-zero-or-one-losses", "title": "Find Players With Zero or One Losses", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-ii", "title": "Lowest Common Ancestor of a Binary Tree II", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iii", "title": "Lowest Common Ancestor of a Binary Tree III", "difficulty": "Medium"}, {"slug": "lowest-common-ancestor-of-a-binary-tree-iv", "title": "Lowest Common Ancestor of a Binary Tree IV", "difficulty": "Medium"}, {"slug": "step-by-step-directions-from-a-binary-tree-node-to-another", "title": "Step-By-Step Directions From a Binary Tree Node to Another", "difficulty": "Medium"}, {"slug": "cycle-length-queries-in-a-tree", "title": "Cycle Length Queries in a Tree", "difficulty": "Hard"}]},
    {"number": 105, "slug": "construct-binary-tree-from-preorder-and-inorder-traversal", "title": "Construct Binary Tree from Preorder and Inorder Traversal", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"], "similar_problems": [{"slug": "construct-binary-tree-from-inorder-and-postorder-traversal", "title": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": "Medium"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 133, "slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium", "tags": ["Hash Table", "Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 212, "slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "similar_problems": [{"slug": "word-search", "title": "Word Search", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 44, "slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"], "similar_problems": [{"slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard"}, {"slug": "substring-matching-pattern", "title": "Substring Matching Pattern", "difficulty": "Easy"}]},
    {"number": 10, "slug": "regular-expression-matching", "title": "Regular Expression Matching", "difficulty": "Hard", "tags": ["String", "Dynamic Programming", "Recursion"], "similar_problems": [{"slug": "wildcard-matching", "title": "Wildcard Matching", "difficulty": "Hard"}]},
    {"number": 26, "slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "remove-duplicates-from-sorted-array-ii", "title": "Remove Duplicates from Sorted Array II", "difficulty": "Medium"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}, {"slug": "sum-of-distances", "title": "Sum of Distances", "difficulty": "Medium"}]},
    {"number": 88, "slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 75, "slug": "sort-colors", "title": "Sort Colors", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "wiggle-sort", "title": "Wiggle Sort", "difficulty": "Medium"}, {"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}]},
    {"number": 153, "slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard"}]},
    {"number": 154, "slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}]},
    {"number": 33, "slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array-ii", "title": "Search in Rotated Sorted Array II", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "pour-water-between-buckets-to-make-water-levels-equal", "title": "Pour Water Between Buckets to Make Water Levels Equal", "difficulty": "Medium"}]},
    {"number": 74, "slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium"}, {"slug": "split-message-based-on-limit", "title": "Split Message Based on Limit", "difficulty": "Hard"}]},
    {"number": 240, "slug": "search-a-2d-matrix-ii", "title": "Search a 2D Matrix II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Divide and Conquer", "Matrix"], "similar_problems": [{"slug": "search-a-2d-matrix", "title": "Search a 2D Matrix", "difficulty": "Medium"}]},
    {"number": 4, "slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer"], "similar_problems": [{"slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium"}]},
    {"number": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "sum-of-beauty-in-the-array", "title": "Sum of Beauty in the Array", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-v", "title": "Best Time to Buy and Sell Stock V", "difficulty": "Medium"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 300, "slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Dynamic Programming"], "similar_problems": [{"slug": "increasing-triplet-subsequence", "title": "Increasing Triplet Subsequence", "difficulty": "Medium"}, {"slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard"}, {"slug": "maximum-length-of-pair-chain", "title": "Maximum Length of Pair Chain", "difficulty": "Medium"}, {"slug": "number-of-longest-increasing-subsequence", "title": "Number of Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "minimum-ascii-delete-sum-for-two-strings", "title": "Minimum ASCII Delete Sum for Two Strings", "difficulty": "Medium"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "find-the-longest-valid-obstacle-course-at-each-position", "title": "Find the Longest Valid Obstacle Course at Each Position", "difficulty": "Hard"}, {"slug": "minimum-operations-to-make-the-array-k-increasing", "title": "Minimum Operations to Make the Array K-Increasing", "difficulty": "Hard"}, {"slug": "longest-ideal-subsequence", "title": "Longest Ideal Subsequence", "difficulty": "Medium"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}, {"slug": "longest-increasing-subsequence-ii", "title": "Longest Increasing Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-ii", "title": "Find the Maximum Length of a Good Subsequence II", "difficulty": "Hard"}, {"slug": "find-the-maximum-length-of-a-good-subsequence-i", "title": "Find the Maximum Length of a Good Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-i", "title": "Find the Maximum Length of Valid Subsequence I", "difficulty": "Medium"}, {"slug": "find-the-maximum-length-of-valid-subsequence-ii", "title": "Find the Maximum Length of Valid Subsequence II", "difficulty": "Medium"}, {"slug": "longest-subsequence-with-decreasing-adjacent-difference", "title": "Longest Subsequence With Decreasing Adjacent Difference", "difficulty": "Medium"}]},
    {"number": 449, "slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 208, "slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tags": ["Hash Table", "String", "Design", "Trie"], "similar_problems": [{"slug": "design-add-and-search-words-data-structure", "title": "Design Add and Search Words Data Structure", "difficulty": "Medium"}, {"slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard"}, {"slug": "replace-words", "title": "Replace Words", "difficulty": "Medium"}, {"slug": "implement-magic-dictionary", "title": "Implement Magic Dictionary", "difficulty": "Medium"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}, {"slug": "implement-trie-ii-prefix-tree", "title": "Implement Trie II (Prefix Tree)", "difficulty": "Medium"}, {"slug": "count-prefix-and-suffix-pairs-ii", "title": "Count Prefix and Suffix Pairs II", "difficulty": "Hard"}, {"slug": "count-prefix-and-suffix-pairs-i", "title": "Count Prefix and Suffix Pairs I", "difficulty": "Easy"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 136, "slug": "single-number", "title": "Single Number", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 171, "slug": "excel-sheet-column-number", "title": "Excel Sheet Column Number", "difficulty": "Easy", "tags": ["Math", "String"], "similar_problems": [{"slug": "excel-sheet-column-title", "title": "Excel Sheet Column Title", "difficulty": "Easy"}, {"slug": "cells-in-a-range-on-an-excel-sheet", "title": "Cells in a Range on an Excel Sheet", "difficulty": "Easy"}]},
    {"number": 277, "slug": "find-the-celebrity", "title": "Find the Celebrity", "difficulty": "Medium", "tags": ["Two Pointers", "Graph", "Interactive"], "similar_problems": [{"slug": "find-the-town-judge", "title": "Find the Town Judge", "difficulty": "Easy"}]},
    {"number": 273, "slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard", "tags": ["Math", "String", "Recursion"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 218, "slug": "the-skyline-problem", "title": "The Skyline Problem", "difficulty": "Hard", "tags": ["Array", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Line Sweep", "Sorting", "Heap (Priority Queue)", "Ordered Set"], "similar_problems": [{"slug": "falling-squares", "title": "Falling Squares", "difficulty": "Hard"}, {"slug": "shifting-letters-ii", "title": "Shifting Letters II", "difficulty": "Medium"}]}
]