[
    {"number": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "maximum-erasure-value", "title": "Maximum Erasure Value", "difficulty": "Medium"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "minimum-consecutive-cards-to-pick-up", "title": "Minimum Consecutive Cards to Pick Up", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "count-complete-subarrays-in-an-array", "title": "Count Complete Subarrays in an Array", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 11, "slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy"], "similar_problems": [{"slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"}, {"slug": "maximum-tastiness-of-candy-basket", "title": "Maximum Tastiness of Candy Basket", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}]},
    {"number": 15, "slug": "3sum", "title": "3Sum", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "3sum-closest", "title": "3Sum Closest", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "3sum-smaller", "title": "3Sum Smaller", "difficulty": "Medium"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-i", "title": "Minimum Sum of Mountain Triplets I", "difficulty": "Easy"}, {"slug": "minimum-sum-of-mountain-triplets-ii", "title": "Minimum Sum of Mountain Triplets II", "difficulty": "Medium"}]},
    {"number": 31, "slug": "next-permutation", "title": "Next Permutation", "difficulty": "Medium", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "permutations", "title": "Permutations", "difficulty": "Medium"}, {"slug": "permutations-ii", "title": "Permutations II", "difficulty": "Medium"}, {"slug": "permutation-sequence", "title": "Permutation Sequence", "difficulty": "Hard"}, {"slug": "palindrome-permutation-ii", "title": "Palindrome Permutation II", "difficulty": "Medium"}, {"slug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number", "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number", "difficulty": "Medium"}]},
    {"number": 43, "slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium"}, {"slug": "plus-one", "title": "Plus One", "difficulty": "Easy"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "apply-discount-to-prices", "title": "Apply Discount to Prices", "difficulty": "Medium"}]},
    {"number": 48, "slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium", "tags": ["Array", "Math", "Matrix"], "similar_problems": [{"slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy"}]},
    {"number": 55, "slug": "jump-game", "title": "Jump Game", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}, {"slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard"}, {"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 66, "slug": "plus-one", "title": "Plus One", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "minimum-operations-to-reduce-an-integer-to-0", "title": "Minimum Operations to Reduce an Integer to 0", "difficulty": "Medium"}]},
    {"number": 76, "slug": "minimum-window-substring", "title": "Minimum Window Substring", "difficulty": "Hard", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "substring-with-concatenation-of-all-words", "title": "Substring with Concatenation of All Words", "difficulty": "Hard"}, {"slug": "minimum-size-subarray-sum", "title": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "permutation-in-string", "title": "Permutation in String", "difficulty": "Medium"}, {"slug": "smallest-range-covering-elements-from-k-lists", "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard"}, {"slug": "minimum-window-subsequence", "title": "Minimum Window Subsequence", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii", "title": "Count Substrings That Can Be Rearranged to Contain a String II", "difficulty": "Hard"}, {"slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i", "title": "Count Substrings That Can Be Rearranged to Contain a String I", "difficulty": "Medium"}]},
    {"number": 158, "slug": "read-n-characters-given-read4-ii-call-multiple-times", "title": "Read N Characters Given read4 II - Call Multiple Times", "difficulty": "Hard", "tags": ["Array", "Simulation", "Interactive"], "similar_problems": [{"slug": "read-n-characters-given-read4", "title": "Read N Characters Given Read4", "difficulty": "Easy"}]},
    {"number": 159, "slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}]},
    {"number": 163, "slug": "missing-ranges", "title": "Missing Ranges", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 681, "slug": "next-closest-time", "title": "Next Closest Time", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking", "Enumeration"], "similar_problems": []},
    {"number": 809, "slug": "expressive-words", "title": "Expressive Words", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "String"], "similar_problems": []},
    {"number": 833, "slug": "find-and-replace-in-string", "title": "Find And Replace in String", "difficulty": "Medium", "tags": ["Array", "Hash Table", "String", "Sorting"], "similar_problems": []},
    {"number": 849, "slug": "maximize-distance-to-closest-person", "title": "Maximize Distance to Closest Person", "difficulty": "Medium", "tags": ["Array"], "similar_problems": [{"slug": "exam-room", "title": "Exam Room", "difficulty": "Medium"}, {"slug": "task-scheduler-ii", "title": "Task Scheduler II", "difficulty": "Medium"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "pour-water", "title": "Pour Water", "difficulty": "Medium"}, {"slug": "maximum-value-of-an-ordered-triplet-ii", "title": "Maximum Value of an Ordered Triplet II", "difficulty": "Medium"}]},
    {"number": 215, "slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "wiggle-sort-ii", "title": "Wiggle Sort II", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "third-maximum-number", "title": "Third Maximum Number", "difficulty": "Easy"}, {"slug": "kth-largest-element-in-a-stream", "title": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium"}, {"slug": "find-the-kth-largest-integer-in-the-array", "title": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"slug": "find-subsequence-of-length-k-with-the-largest-sum", "title": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"slug": "k-highest-ranked-items-within-a-price-range", "title": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}]},
    {"number": 253, "slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap (Priority Queue)", "Prefix Sum"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "minimum-number-of-arrows-to-burst-balloons", "title": "Minimum Number of Arrows to Burst Balloons", "difficulty": "Medium"}, {"slug": "car-pooling", "title": "Car Pooling", "difficulty": "Medium"}, {"slug": "number-of-flowers-in-full-bloom", "title": "Number of Flowers in Full Bloom", "difficulty": "Hard"}, {"slug": "meeting-rooms-iii", "title": "Meeting Rooms III", "difficulty": "Hard"}, {"slug": "total-cost-to-hire-k-workers", "title": "Total Cost to Hire K Workers", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}]},
    {"number": 844, "slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy", "tags": ["Two Pointers", "String", "Stack", "Simulation"], "similar_problems": [{"slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy"}, {"slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"}]},
    {"number": 857, "slug": "minimum-cost-to-hire-k-workers", "title": "Minimum Cost to Hire K Workers", "difficulty": "Hard", "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similar_problems": [{"slug": "maximum-subsequence-score", "title": "Maximum Subsequence Score", "difficulty": "Medium"}]},
    {"number": 973, "slug": "k-closest-points-to-origin", "title": "K Closest Points to Origin", "difficulty": "Medium", "tags": ["Array", "Math", "Divide and Conquer", "Geometry", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similar_problems": [{"slug": "kth-largest-element-in-an-array", "title": "Kth Largest Element in an Array", "difficulty": "Medium"}, {"slug": "top-k-frequent-elements", "title": "Top K Frequent Elements", "difficulty": "Medium"}, {"slug": "top-k-frequent-words", "title": "Top K Frequent Words", "difficulty": "Medium"}, {"slug": "find-nearest-point-that-has-the-same-x-or-y-coordinate", "title": "Find Nearest Point That Has the Same X or Y Coordinate", "difficulty": "Easy"}, {"slug": "minimum-rectangles-to-cover-points", "title": "Minimum Rectangles to Cover Points", "difficulty": "Medium"}, {"slug": "k-th-nearest-obstacle-queries", "title": "K-th Nearest Obstacle Queries", "difficulty": "Medium"}]},
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 19, "slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}, {"slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 124, "slug": "binary-tree-maximum-path-sum", "title": "Binary Tree Maximum Path Sum", "difficulty": "Hard", "tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum", "title": "Path Sum", "difficulty": "Easy"}, {"slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"}, {"slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "difference-between-maximum-and-minimum-price-sum", "title": "Difference Between Maximum and Minimum Price Sum", "difficulty": "Hard"}]},
    {"number": 127, "slug": "word-ladder", "title": "Word Ladder", "difficulty": "Hard", "tags": ["Hash Table", "String", "Breadth-First Search"], "similar_problems": [{"slug": "word-ladder-ii", "title": "Word Ladder II", "difficulty": "Hard"}, {"slug": "minimum-genetic-mutation", "title": "Minimum Genetic Mutation", "difficulty": "Medium"}, {"slug": "words-within-two-edits-of-dictionary", "title": "Words Within Two Edits of Dictionary", "difficulty": "Medium"}]},
    {"number": 200, "slug": "number-of-islands", "title": "Number of Islands", "difficulty": "Medium", "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similar_problems": [{"slug": "surrounded-regions", "title": "Surrounded Regions", "difficulty": "Medium"}, {"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "number-of-islands-ii", "title": "Number of Islands II", "difficulty": "Hard"}, {"slug": "number-of-connected-components-in-an-undirected-graph", "title": "Number of Connected Components in an Undirected Graph", "difficulty": "Medium"}, {"slug": "battleships-in-a-board", "title": "Battleships in a Board", "difficulty": "Medium"}, {"slug": "number-of-distinct-islands", "title": "Number of Distinct Islands", "difficulty": "Medium"}, {"slug": "max-area-of-island", "title": "Max Area of Island", "difficulty": "Medium"}, {"slug": "count-sub-islands", "title": "Count Sub Islands", "difficulty": "Medium"}, {"slug": "find-all-groups-of-farmland", "title": "Find All Groups of Farmland", "difficulty": "Medium"}, {"slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph", "title": "Count Unreachable Pairs of Nodes in an Undirected Graph", "difficulty": "Medium"}, {"slug": "maximum-number-of-fish-in-a-grid", "title": "Maximum Number of Fish in a Grid", "difficulty": "Medium"}, {"slug": "count-islands-with-total-value-divisible-by-k", "title": "Count Islands With Total Value Divisible by K", "difficulty": "Medium"}]},
    {"number": 210, "slug": "course-schedule-ii", "title": "Course Schedule II", "difficulty": "Medium", "tags": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similar_problems": [{"slug": "course-schedule", "title": "Course Schedule", "difficulty": "Medium"}, {"slug": "alien-dictionary", "title": "Alien Dictionary", "difficulty": "Hard"}, {"slug": "minimum-height-trees", "title": "Minimum Height Trees", "difficulty": "Medium"}, {"slug": "sequence-reconstruction", "title": "Sequence Reconstruction", "difficulty": "Medium"}, {"slug": "course-schedule-iii", "title": "Course Schedule III", "difficulty": "Hard"}, {"slug": "parallel-courses", "title": "Parallel Courses", "difficulty": "Medium"}, {"slug": "find-all-possible-recipes-from-given-supplies", "title": "Find All Possible Recipes from Given Supplies", "difficulty": "Medium"}, {"slug": "build-a-matrix-with-conditions", "title": "Build a Matrix With Conditions", "difficulty": "Hard"}, {"slug": "sort-array-by-moving-items-to-empty-space", "title": "Sort Array by Moving Items to Empty Space", "difficulty": "Hard"}]},
    {"number": 222, "slug": "count-complete-tree-nodes", "title": "Count Complete Tree Nodes", "difficulty": "Easy", "tags": ["Binary Search", "Bit Manipulation", "Tree", "Binary Tree"], "similar_problems": [{"slug": "closest-binary-search-tree-value", "title": "Closest Binary Search Tree Value", "difficulty": "Easy"}]},
    {"number": 329, "slug": "longest-increasing-path-in-a-matrix", "title": "Longest Increasing Path in a Matrix", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similar_problems": [{"slug": "number-of-increasing-paths-in-a-grid", "title": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}]},
    {"number": 394, "slug": "decode-string", "title": "Decode String", "difficulty": "Medium", "tags": ["String", "Stack", "Recursion"], "similar_problems": [{"slug": "encode-string-with-shortest-length", "title": "Encode String with Shortest Length", "difficulty": "Hard"}, {"slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"}, {"slug": "brace-expansion", "title": "Brace Expansion", "difficulty": "Medium"}]},
    {"number": 399, "slug": "evaluate-division", "title": "Evaluate Division", "difficulty": "Medium", "tags": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Union Find", "Graph", "Shortest Path"], "similar_problems": [{"slug": "check-for-contradictions-in-equations", "title": "Check for Contradictions in Equations", "difficulty": "Hard"}, {"slug": "maximize-amount-after-two-days-of-conversions", "title": "Maximize Amount After Two Days of Conversions", "difficulty": "Medium"}]},
    {"number": 543, "slug": "diameter-of-binary-tree", "title": "Diameter of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "diameter-of-n-ary-tree", "title": "Diameter of N-Ary Tree", "difficulty": "Medium"}, {"slug": "longest-path-with-different-adjacent-characters", "title": "Longest Path With Different Adjacent Characters", "difficulty": "Hard"}]},
    {"number": 753, "slug": "cracking-the-safe", "title": "Cracking the Safe", "difficulty": "Hard", "tags": ["Depth-First Search", "Graph", "Eulerian Circuit"], "similar_problems": []},
    {"number": 489, "slug": "robot-room-cleaner", "title": "Robot Room Cleaner", "difficulty": "Hard", "tags": ["Backtracking", "Interactive"], "similar_problems": [{"slug": "walls-and-gates", "title": "Walls and Gates", "difficulty": "Medium"}, {"slug": "shortest-path-in-a-hidden-grid", "title": "Shortest Path in a Hidden Grid", "difficulty": "Medium"}, {"slug": "minimum-path-cost-in-a-hidden-grid", "title": "Minimum Path Cost in a Hidden Grid", "difficulty": "Medium"}, {"slug": "number-of-spaces-cleaning-robot-cleaned", "title": "Number of Spaces Cleaning Robot Cleaned", "difficulty": "Medium"}]},
    {"number": 947, "slug": "most-stones-removed-with-same-row-or-column", "title": "Most Stones Removed with Same Row or Column", "difficulty": "Medium", "tags": ["Hash Table", "Depth-First Search", "Union Find", "Graph"], "similar_problems": [{"slug": "minimum-moves-to-get-a-peaceful-board", "title": "Minimum Moves to Get a Peaceful Board", "difficulty": "Medium"}]},
    {"number": 951, "slug": "flip-equivalent-binary-trees", "title": "Flip Equivalent Binary Trees", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 425, "slug": "word-squares", "title": "Word Squares", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie"], "similar_problems": [{"slug": "valid-word-square", "title": "Valid Word Square", "difficulty": "Easy"}]},
    {"number": 247, "slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium", "tags": ["Array", "String", "Recursion"], "similar_problems": [{"slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "sum-of-k-mirror-numbers", "title": "Sum of k-Mirror Numbers", "difficulty": "Hard"}]},
    {"number": 212, "slug": "word-search-ii", "title": "Word Search II", "difficulty": "Hard", "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"], "similar_problems": [{"slug": "word-search", "title": "Word Search", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "encrypt-and-decrypt-strings", "title": "Encrypt and Decrypt Strings", "difficulty": "Hard"}]},
    {"number": 351, "slug": "android-unlock-patterns", "title": "Android Unlock Patterns", "difficulty": "Medium", "tags": ["Dynamic Programming", "Backtracking", "Bit Manipulation", "Bitmask"], "similar_problems": []},
    {"number": 17, "slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tags": ["Hash Table", "String", "Backtracking"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "combination-sum", "title": "Combination Sum", "difficulty": "Medium"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "count-number-of-texts", "title": "Count Number of Texts", "difficulty": "Medium"}, {"slug": "minimum-number-of-pushes-to-type-word-i", "title": "Minimum Number of Pushes to Type Word I", "difficulty": "Easy"}, {"slug": "minimum-number-of-pushes-to-type-word-ii", "title": "Minimum Number of Pushes to Type Word II", "difficulty": "Medium"}]},
    {"number": 22, "slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium", "tags": ["String", "Dynamic Programming", "Backtracking"], "similar_problems": [{"slug": "letter-combinations-of-a-phone-number", "title": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}]},
    {"number": 4, "slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer"], "similar_problems": [{"slug": "median-of-a-row-wise-sorted-matrix", "title": "Median of a Row Wise Sorted Matrix", "difficulty": "Medium"}]},
    {"number": 34, "slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "plates-between-candles", "title": "Plates Between Candles", "difficulty": "Medium"}, {"slug": "find-target-indices-after-sorting-array", "title": "Find Target Indices After Sorting Array", "difficulty": "Easy"}]},
    {"number": 56, "slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium", "tags": ["Array", "Sorting"], "similar_problems": [{"slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium"}, {"slug": "meeting-rooms", "title": "Meeting Rooms", "difficulty": "Easy"}, {"slug": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "Medium"}, {"slug": "teemo-attacking", "title": "Teemo Attacking", "difficulty": "Easy"}, {"slug": "add-bold-tag-in-string", "title": "Add Bold Tag in String", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "employee-free-time", "title": "Employee Free Time", "difficulty": "Hard"}, {"slug": "partition-labels", "title": "Partition Labels", "difficulty": "Medium"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "amount-of-new-area-painted-each-day", "title": "Amount of New Area Painted Each Day", "difficulty": "Hard"}, {"slug": "longest-substring-of-one-repeating-character", "title": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}, {"slug": "divide-intervals-into-minimum-number-of-groups", "title": "Divide Intervals Into Minimum Number of Groups", "difficulty": "Medium"}, {"slug": "determine-if-two-events-have-conflict", "title": "Determine if Two Events Have Conflict", "difficulty": "Easy"}, {"slug": "count-ways-to-group-overlapping-ranges", "title": "Count Ways to Group Overlapping Ranges", "difficulty": "Medium"}, {"slug": "points-that-intersect-with-cars", "title": "Points That Intersect With Cars", "difficulty": "Easy"}, {"slug": "count-days-without-meetings", "title": "Count Days Without Meetings", "difficulty": "Medium"}, {"slug": "minimize-connected-groups-by-inserting-interval", "title": "Minimize Connected Groups by Inserting Interval", "difficulty": "Medium"}]},
    {"number": 57, "slug": "insert-interval", "title": "Insert Interval", "difficulty": "Medium", "tags": ["Array"], "similar_problems": [{"slug": "merge-intervals", "title": "Merge Intervals", "difficulty": "Medium"}, {"slug": "range-module", "title": "Range Module", "difficulty": "Hard"}, {"slug": "count-integers-in-intervals", "title": "Count Integers in Intervals", "difficulty": "Hard"}]},
    {"number": 242, "slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}]},
    {"number": 315, "slug": "count-of-smaller-numbers-after-self", "title": "Count of Smaller Numbers After Self", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Divide and Conquer", "Binary Indexed Tree", "Segment Tree", "Merge Sort", "Ordered Set"], "similar_problems": [{"slug": "count-of-range-sum", "title": "Count of Range Sum", "difficulty": "Hard"}, {"slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "Medium"}, {"slug": "reverse-pairs", "title": "Reverse Pairs", "difficulty": "Hard"}, {"slug": "how-many-numbers-are-smaller-than-the-current-number", "title": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy"}, {"slug": "count-good-triplets-in-an-array", "title": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"slug": "count-the-number-of-k-big-indices", "title": "Count the Number of K-Big Indices", "difficulty": "Hard"}]},
    {"number": 852, "slug": "peak-index-in-a-mountain-array", "title": "Peak Index in a Mountain Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-peak-element", "title": "Find Peak Element", "difficulty": "Medium"}, {"slug": "find-in-mountain-array", "title": "Find in Mountain Array", "difficulty": "Hard"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "sum-of-beauty-in-the-array", "title": "Sum of Beauty in the Array", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-v", "title": "Best Time to Buy and Sell Stock V", "difficulty": "Medium"}]},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 322, "slug": "coin-change", "title": "Coin Change", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Breadth-First Search"], "similar_problems": [{"slug": "minimum-cost-for-tickets", "title": "Minimum Cost For Tickets", "difficulty": "Medium"}, {"slug": "maximum-value-of-k-coins-from-piles", "title": "Maximum Value of K Coins From Piles", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-convert-time", "title": "Minimum Number of Operations to Convert Time", "difficulty": "Easy"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "count-of-sub-multisets-with-bounded-sum", "title": "Count of Sub-Multisets With Bounded Sum", "difficulty": "Hard"}, {"slug": "length-of-the-longest-subsequence-that-sums-to-target", "title": "Length of the Longest Subsequence That Sums to Target", "difficulty": "Medium"}, {"slug": "minimum-number-of-coins-to-be-added", "title": "Minimum Number of Coins to be Added", "difficulty": "Medium"}, {"slug": "most-expensive-item-that-can-not-be-bought", "title": "Most Expensive Item That Can Not Be Bought", "difficulty": "Medium"}, {"slug": "inverse-coin-change", "title": "Inverse Coin Change", "difficulty": "Medium"}]},
    {"number": 410, "slug": "split-array-largest-sum", "title": "Split Array Largest Sum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Greedy", "Prefix Sum"], "similar_problems": [{"slug": "capacity-to-ship-packages-within-d-days", "title": "Capacity To Ship Packages Within D Days", "difficulty": "Medium"}, {"slug": "divide-chocolate", "title": "Divide Chocolate", "difficulty": "Hard"}, {"slug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "difficulty": "Medium"}, {"slug": "subsequence-of-size-k-with-the-largest-even-sum", "title": "Subsequence of Size K With the Largest Even Sum", "difficulty": "Medium"}, {"slug": "maximum-total-beauty-of-the-gardens", "title": "Maximum Total Beauty of the Gardens", "difficulty": "Hard"}, {"slug": "number-of-ways-to-split-array", "title": "Number of Ways to Split Array", "difficulty": "Medium"}, {"slug": "minimum-cost-to-split-an-array", "title": "Minimum Cost to Split an Array", "difficulty": "Hard"}, {"slug": "distribute-elements-into-two-arrays-i", "title": "Distribute Elements Into Two Arrays I", "difficulty": "Easy"}, {"slug": "distribute-elements-into-two-arrays-ii", "title": "Distribute Elements Into Two Arrays II", "difficulty": "Hard"}]},
    {"number": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "Medium", "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"], "similar_problems": [{"slug": "lfu-cache", "title": "LFU Cache", "difficulty": "Hard"}, {"slug": "design-in-memory-file-system", "title": "Design In-Memory File System", "difficulty": "Hard"}, {"slug": "design-compressed-string-iterator", "title": "Design Compressed String Iterator", "difficulty": "Easy"}, {"slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"}]},
    {"number": 155, "slug": "min-stack", "title": "Min Stack", "difficulty": "Medium", "tags": ["Stack", "Design"], "similar_problems": [{"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "max-stack", "title": "Max Stack", "difficulty": "Hard"}]},
    {"number": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "Hard", "tags": ["String", "Tree", "Depth-First Search", "Breadth-First Search", "Design", "Binary Tree"], "similar_problems": [{"slug": "encode-and-decode-strings", "title": "Encode and Decode Strings", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-bst", "title": "Serialize and Deserialize BST", "difficulty": "Medium"}, {"slug": "find-duplicate-subtrees", "title": "Find Duplicate Subtrees", "difficulty": "Medium"}, {"slug": "serialize-and-deserialize-n-ary-tree", "title": "Serialize and Deserialize N-ary Tree", "difficulty": "Hard"}]},
    {"number": 359, "slug": "logger-rate-limiter", "title": "Logger Rate Limiter", "difficulty": "Easy", "tags": ["Hash Table", "Design", "Data Stream"], "similar_problems": [{"slug": "design-hit-counter", "title": "Design Hit Counter", "difficulty": "Medium"}]},
    {"number": 380, "slug": "insert-delete-getrandom-o1", "title": "Insert Delete GetRandom O(1)", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"], "similar_problems": [{"slug": "insert-delete-getrandom-o1-duplicates-allowed", "title": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": "Hard"}]},
    {"number": 642, "slug": "design-search-autocomplete-system", "title": "Design Search Autocomplete System", "difficulty": "Hard", "tags": ["String", "Depth-First Search", "Design", "Trie", "Sorting", "Heap (Priority Queue)", "Data Stream"], "similar_problems": [{"slug": "implement-trie-prefix-tree", "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium"}]},
    {"number": 7, "slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium", "tags": ["Math"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}, {"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}, {"slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy"}, {"slug": "count-number-of-distinct-integers-after-reverse-operations", "title": "Count Number of Distinct Integers After Reverse Operations", "difficulty": "Medium"}]},
    {"number": 135, "slug": "candy", "title": "Candy", "difficulty": "Hard", "tags": ["Array", "Greedy"], "similar_problems": [{"slug": "minimize-maximum-value-in-a-grid", "title": "Minimize Maximum Value in a Grid", "difficulty": "Hard"}, {"slug": "minimum-number-of-operations-to-satisfy-conditions", "title": "Minimum Number of Operations to Satisfy Conditions", "difficulty": "Medium"}, {"slug": "check-if-grid-satisfies-conditions", "title": "Check if Grid Satisfies Conditions", "difficulty": "Easy"}]},
    {"number": 205, "slug": "isomorphic-strings", "title": "Isomorphic Strings", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": [{"slug": "word-pattern", "title": "Word Pattern", "difficulty": "Easy"}, {"slug": "find-and-replace-pattern", "title": "Find and Replace Pattern", "difficulty": "Medium"}]},
    {"number": 246, "slug": "strobogrammatic-number", "title": "Strobogrammatic Number", "difficulty": "Easy", "tags": ["Hash Table", "Two Pointers", "String"], "similar_problems": [{"slug": "strobogrammatic-number-ii", "title": "Strobogrammatic Number II", "difficulty": "Medium"}, {"slug": "strobogrammatic-number-iii", "title": "Strobogrammatic Number III", "difficulty": "Hard"}, {"slug": "confusing-number", "title": "Confusing Number", "difficulty": "Easy"}]},
    {"number": 299, "slug": "bulls-and-cows", "title": "Bulls and Cows", "difficulty": "Medium", "tags": ["Hash Table", "String", "Counting"], "similar_problems": [{"slug": "make-number-of-distinct-characters-equal", "title": "Make Number of Distinct Characters Equal", "difficulty": "Medium"}]},
    {"number": 308, "slug": "range-sum-query-2d-mutable", "title": "Range Sum Query 2D - Mutable", "difficulty": "Medium", "tags": ["Array", "Design", "Binary Indexed Tree", "Segment Tree", "Matrix"], "similar_problems": [{"slug": "range-sum-query-2d-immutable", "title": "Range Sum Query 2D - Immutable", "difficulty": "Medium"}, {"slug": "range-sum-query-mutable", "title": "Range Sum Query - Mutable", "difficulty": "Medium"}, {"slug": "increment-submatrices-by-one", "title": "Increment Submatrices by One", "difficulty": "Medium"}, {"slug": "sum-of-matrix-after-queries", "title": "Sum of Matrix After Queries", "difficulty": "Medium"}]},
    {"number": 731, "slug": "my-calendar-ii", "title": "My Calendar II", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Design", "Segment Tree", "Prefix Sum", "Ordered Set"], "similar_problems": [{"slug": "my-calendar-i", "title": "My Calendar I", "difficulty": "Medium"}, {"slug": "my-calendar-iii", "title": "My Calendar III", "difficulty": "Hard"}]},
    {"number": 771, "slug": "jewels-and-stones", "title": "Jewels and Stones", "difficulty": "Easy", "tags": ["Hash Table", "String"], "similar_problems": []},
    {"number": 777, "slug": "swap-adjacent-in-lr-string", "title": "Swap Adjacent in LR String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 843, "slug": "guess-the-word", "title": "Guess the Word", "difficulty": "Hard", "tags": ["Array", "Math", "String", "Interactive", "Game Theory"], "similar_problems": []},
    {"number": 939, "slug": "minimum-area-rectangle", "title": "Minimum Area Rectangle", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Math", "Geometry", "Sorting"], "similar_problems": [{"slug": "minimum-rectangles-to-cover-points", "title": "Minimum Rectangles to Cover Points", "difficulty": "Medium"}, {"slug": "maximum-area-rectangle-with-point-constraints-i", "title": "Maximum Area Rectangle With Point Constraints I", "difficulty": "Medium"}, {"slug": "maximum-area-rectangle-with-point-constraints-ii", "title": "Maximum Area Rectangle With Point Constraints II", "difficulty": "Hard"}]}
]