[
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 167, "slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}]},
    {"number": 170, "slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Design", "Data Stream"], "similar_problems": [{"slug": "two-sum", "title": "Two Sum", "difficulty": "Easy"}, {"slug": "unique-word-abbreviation", "title": "Unique Word Abbreviation", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}]},
    {"number": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}, {"slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium"}]},
    {"number": 28, "slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy"}]},
    {"number": 151, "slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium"}]},
    {"number": 186, "slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-words-in-a-string", "title": "Reverse Words in a String", "difficulty": "Medium"}, {"slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium"}]},
    {"number": 8, "slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "valid-number", "title": "Valid Number", "difficulty": "Hard"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 65, "slug": "valid-number", "title": "Valid Number", "difficulty": "Hard", "tags": ["String"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}]},
    {"number": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}, {"slug": "maximum-erasure-value", "title": "Maximum Erasure Value", "difficulty": "Medium"}, {"slug": "number-of-equal-count-substrings", "title": "Number of Equal Count Substrings", "difficulty": "Medium"}, {"slug": "minimum-consecutive-cards-to-pick-up", "title": "Minimum Consecutive Cards to Pick Up", "difficulty": "Medium"}, {"slug": "longest-nice-subarray", "title": "Longest Nice Subarray", "difficulty": "Medium"}, {"slug": "optimal-partition-of-string", "title": "Optimal Partition of String", "difficulty": "Medium"}, {"slug": "count-complete-subarrays-in-an-array", "title": "Count Complete Subarrays in an Array", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-ii", "title": "Find Longest Special Substring That Occurs Thrice II", "difficulty": "Medium"}, {"slug": "find-longest-special-substring-that-occurs-thrice-i", "title": "Find Longest Special Substring That Occurs Thrice I", "difficulty": "Medium"}]},
    {"number": 159, "slug": "longest-substring-with-at-most-two-distinct-characters", "title": "Longest Substring with At Most Two Distinct Characters", "difficulty": "Medium", "tags": ["Hash Table", "String", "Sliding Window"], "similar_problems": [{"slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "Medium"}, {"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "longest-substring-with-at-most-k-distinct-characters", "title": "Longest Substring with At Most K Distinct Characters", "difficulty": "Medium"}, {"slug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "difficulty": "Hard"}]},
    {"number": 163, "slug": "missing-ranges", "title": "Missing Ranges", "difficulty": "Easy", "tags": ["Array"], "similar_problems": [{"slug": "summary-ranges", "title": "Summary Ranges", "difficulty": "Easy"}, {"slug": "find-maximal-uncovered-ranges", "title": "Find Maximal Uncovered Ranges", "difficulty": "Medium"}]},
    {"number": 5, "slug": "longest-palindromic-substring", "title": "Longest Palindromic Substring", "difficulty": "Medium", "tags": ["Two Pointers", "String", "Dynamic Programming"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "palindrome-pairs", "title": "Palindrome Pairs", "difficulty": "Hard"}, {"slug": "longest-palindromic-subsequence", "title": "Longest Palindromic Subsequence", "difficulty": "Medium"}, {"slug": "palindromic-substrings", "title": "Palindromic Substrings", "difficulty": "Medium"}, {"slug": "maximum-number-of-non-overlapping-palindrome-substrings", "title": "Maximum Number of Non-overlapping Palindrome Substrings", "difficulty": "Hard"}]},
    {"number": 161, "slug": "one-edit-distance", "title": "One Edit Distance", "difficulty": "Medium", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "edit-distance", "title": "Edit Distance", "difficulty": "Medium"}]},
    {"number": 157, "slug": "read-n-characters-given-read4", "title": "Read N Characters Given Read4", "difficulty": "Easy", "tags": ["Array", "Simulation", "Interactive"], "similar_problems": [{"slug": "read-n-characters-given-read4-ii-call-multiple-times", "title": "Read N Characters Given read4 II - Call Multiple Times", "difficulty": "Hard"}]},
    {"number": 158, "slug": "read-n-characters-given-read4-ii-call-multiple-times", "title": "Read N Characters Given read4 II - Call Multiple Times", "difficulty": "Hard", "tags": ["Array", "Simulation", "Interactive"], "similar_problems": [{"slug": "read-n-characters-given-read4", "title": "Read N Characters Given Read4", "difficulty": "Easy"}]},
    {"number": 7, "slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium", "tags": ["Math"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}, {"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}, {"slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy"}, {"slug": "count-number-of-distinct-integers-after-reverse-operations", "title": "Count Number of Distinct Integers After Reverse Operations", "difficulty": "Medium"}]},
    {"number": 66, "slug": "plus-one", "title": "Plus One", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "minimum-operations-to-reduce-an-integer-to-0", "title": "Minimum Operations to Reduce an Integer to 0", "difficulty": "Medium"}]},
    {"number": 9, "slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy", "tags": ["Math"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "find-palindrome-with-fixed-length", "title": "Find Palindrome With Fixed Length", "difficulty": "Medium"}, {"slug": "strictly-palindromic-number", "title": "Strictly Palindromic Number", "difficulty": "Medium"}, {"slug": "count-symmetric-integers", "title": "  Count Symmetric Integers", "difficulty": "Easy"}, {"slug": "find-the-count-of-good-integers", "title": "Find the Count of Good Integers", "difficulty": "Hard"}, {"slug": "find-the-largest-palindrome-divisible-by-k", "title": "Find the Largest Palindrome Divisible by K", "difficulty": "Hard"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "Medium", "tags": ["Linked List", "Math", "Recursion"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "sum-of-two-integers", "title": "Sum of Two Integers", "difficulty": "Medium"}, {"slug": "add-strings", "title": "Add Strings", "difficulty": "Easy"}, {"slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"}]},
    {"number": 24, "slug": "swap-nodes-in-pairs", "title": "Swap Nodes in Pairs", "difficulty": "Medium", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-nodes-in-k-group", "title": "Reverse Nodes in k-Group", "difficulty": "Hard"}, {"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}]},
    {"number": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard", "tags": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "smallest-subarrays-with-maximum-bitwise-or", "title": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}]},
    {"number": 138, "slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium", "tags": ["Hash Table", "Linked List"], "similar_problems": [{"slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 98, "slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "find-mode-in-binary-search-tree", "title": "Find Mode in Binary Search Tree", "difficulty": "Easy"}]},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}]},
    {"number": 111, "slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}]},
    {"number": 110, "slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "k-th-largest-perfect-subtree-size-in-binary-tree", "title": "K-th Largest Perfect Subtree Size in Binary Tree", "difficulty": "Medium"}, {"slug": "check-balanced-string", "title": "Check Balanced String", "difficulty": "Easy"}]},
    {"number": 108, "slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy", "tags": ["Array", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 109, "slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium", "tags": ["Linked List", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy"}, {"slug": "create-binary-tree-from-descriptions", "title": "Create Binary Tree From Descriptions", "difficulty": "Medium"}]},
    {"number": 124, "slug": "binary-tree-maximum-path-sum", "title": "Binary Tree Maximum Path Sum", "difficulty": "Hard", "tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "path-sum", "title": "Path Sum", "difficulty": "Easy"}, {"slug": "sum-root-to-leaf-numbers", "title": "Sum Root to Leaf Numbers", "difficulty": "Medium"}, {"slug": "path-sum-iv", "title": "Path Sum IV", "difficulty": "Medium"}, {"slug": "longest-univalue-path", "title": "Longest Univalue Path", "difficulty": "Medium"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "difference-between-maximum-and-minimum-price-sum", "title": "Difference Between Maximum and Minimum Price Sum", "difficulty": "Hard"}]},
    {"number": 156, "slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Tree"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}]},
    {"number": 136, "slug": "single-number", "title": "Single Number", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 137, "slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 54, "slug": "spiral-matrix", "title": "Spiral Matrix", "difficulty": "Medium", "tags": ["Array", "Matrix", "Simulation"], "similar_problems": [{"slug": "spiral-matrix-ii", "title": "Spiral Matrix II", "difficulty": "Medium"}, {"slug": "spiral-matrix-iii", "title": "Spiral Matrix III", "difficulty": "Medium"}, {"slug": "spiral-matrix-iv", "title": "Spiral Matrix IV", "difficulty": "Medium"}]},
    {"number": 12, "slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy"}, {"slug": "integer-to-english-words", "title": "Integer to English Words", "difficulty": "Hard"}]},
    {"number": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 133, "slug": "clone-graph", "title": "Clone Graph", "difficulty": "Medium", "tags": ["Hash Table", "Depth-First Search", "Breadth-First Search", "Graph"], "similar_problems": [{"slug": "copy-list-with-random-pointer", "title": "Copy List with Random Pointer", "difficulty": "Medium"}, {"slug": "clone-binary-tree-with-random-pointer", "title": "Clone Binary Tree With Random Pointer", "difficulty": "Medium"}, {"slug": "clone-n-ary-tree", "title": "Clone N-ary Tree", "difficulty": "Medium"}]},
    {"number": 155, "slug": "min-stack", "title": "Min Stack", "difficulty": "Medium", "tags": ["Stack", "Design"], "similar_problems": [{"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "max-stack", "title": "Max Stack", "difficulty": "Hard"}]},
    {"number": 150, "slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium", "tags": ["Array", "Math", "Stack"], "similar_problems": [{"slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"}, {"slug": "expression-add-operators", "title": "Expression Add Operators", "difficulty": "Hard"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 70, "slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}, {"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "count-ways-to-build-good-strings", "title": "Count Ways To Build Good Strings", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 62, "slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium", "tags": ["Math", "Dynamic Programming", "Combinatorics"], "similar_problems": [{"slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium"}, {"slug": "minimum-path-sum", "title": "Minimum Path Sum", "difficulty": "Medium"}, {"slug": "dungeon-game", "title": "Dungeon Game", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "minimum-cost-homecoming-of-a-robot-in-a-grid", "title": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 63, "slug": "unique-paths-ii", "title": "Unique Paths II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Matrix"], "similar_problems": [{"slug": "unique-paths", "title": "Unique Paths", "difficulty": "Medium"}, {"slug": "unique-paths-iii", "title": "Unique Paths III", "difficulty": "Hard"}, {"slug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"slug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 152, "slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "house-robber", "title": "House Robber", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "difficulty": "Easy"}, {"slug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "difficulty": "Medium"}]},
    {"number": 877, "slug": "stone-game", "title": "Stone Game", "difficulty": "Medium", "tags": ["Array", "Math", "Dynamic Programming", "Game Theory"], "similar_problems": [{"slug": "stone-game-v", "title": "Stone Game V", "difficulty": "Hard"}, {"slug": "stone-game-vi", "title": "Stone Game VI", "difficulty": "Medium"}, {"slug": "stone-game-vii", "title": "Stone Game VII", "difficulty": "Medium"}, {"slug": "stone-game-viii", "title": "Stone Game VIII", "difficulty": "Hard"}, {"slug": "stone-game-ix", "title": "Stone Game IX", "difficulty": "Medium"}, {"slug": "strictly-palindromic-number", "title": "Strictly Palindromic Number", "difficulty": "Medium"}, {"slug": "visit-array-positions-to-maximize-score", "title": "Visit Array Positions to Maximize Score", "difficulty": "Medium"}]},
    {"number": 35, "slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy"}, {"slug": "minimum-operations-to-exceed-threshold-value-i", "title": "Minimum Operations to Exceed Threshold Value I", "difficulty": "Easy"}]},
    {"number": 153, "slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "search-in-rotated-sorted-array", "title": "Search in Rotated Sorted Array", "difficulty": "Medium"}, {"slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard"}]},
    {"number": 154, "slug": "find-minimum-in-rotated-sorted-array-ii", "title": "Find Minimum in Rotated Sorted Array II", "difficulty": "Hard", "tags": ["Array", "Binary Search"], "similar_problems": [{"slug": "find-minimum-in-rotated-sorted-array", "title": "Find Minimum in Rotated Sorted Array", "difficulty": "Medium"}]}
]