[
    {"number": 26, "slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "remove-duplicates-from-sorted-array-ii", "title": "Remove Duplicates from Sorted Array II", "difficulty": "Medium"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}, {"slug": "sum-of-distances", "title": "Sum of Distances", "difficulty": "Medium"}]},
    {"number": 122, "slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Greedy"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-with-transaction-fee", "title": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": "Medium"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}]},
    {"number": 189, "slug": "rotate-array", "title": "Rotate Array", "difficulty": "Medium", "tags": ["Array", "Math", "Two Pointers"], "similar_problems": [{"slug": "rotate-list", "title": "Rotate List", "difficulty": "Medium"}, {"slug": "reverse-words-in-a-string-ii", "title": "Reverse Words in a String II", "difficulty": "Medium"}, {"slug": "make-k-subarray-sums-equal", "title": "Make K-Subarray Sums Equal", "difficulty": "Medium"}, {"slug": "maximum-number-of-matching-indices-after-right-shifts", "title": "Maximum Number of Matching Indices After Right Shifts", "difficulty": "Medium"}]},
    {"number": 217, "slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Sorting"], "similar_problems": [{"slug": "contains-duplicate-ii", "title": "Contains Duplicate II", "difficulty": "Easy"}, {"slug": "contains-duplicate-iii", "title": "Contains Duplicate III", "difficulty": "Hard"}, {"slug": "make-array-zero-by-subtracting-equal-amounts", "title": "Make Array Zero by Subtracting Equal Amounts", "difficulty": "Easy"}, {"slug": "find-valid-pair-of-adjacent-digits-in-string", "title": "Find Valid Pair of Adjacent Digits in String", "difficulty": "Easy"}]},
    {"number": 136, "slug": "single-number", "title": "Single Number", "difficulty": "Easy", "tags": ["Array", "Bit Manipulation"], "similar_problems": [{"slug": "single-number-ii", "title": "Single Number II", "difficulty": "Medium"}, {"slug": "single-number-iii", "title": "Single Number III", "difficulty": "Medium"}, {"slug": "missing-number", "title": "Missing Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "find-the-difference", "title": "Find the Difference", "difficulty": "Easy"}, {"slug": "find-the-xor-of-numbers-which-appear-twice", "title": "Find the XOR of Numbers Which Appear Twice", "difficulty": "Easy"}]},
    {"number": 350, "slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Two Pointers", "Binary Search", "Sorting"], "similar_problems": [{"slug": "intersection-of-two-arrays", "title": "Intersection of Two Arrays", "difficulty": "Easy"}, {"slug": "find-common-characters", "title": "Find Common Characters", "difficulty": "Easy"}, {"slug": "find-the-difference-of-two-arrays", "title": "Find the Difference of Two Arrays", "difficulty": "Easy"}, {"slug": "choose-numbers-from-two-arrays-in-range", "title": "Choose Numbers From Two Arrays in Range", "difficulty": "Hard"}, {"slug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "difficulty": "Easy"}, {"slug": "minimum-common-value", "title": "Minimum Common Value", "difficulty": "Easy"}]},
    {"number": 66, "slug": "plus-one", "title": "Plus One", "difficulty": "Easy", "tags": ["Array", "Math"], "similar_problems": [{"slug": "multiply-strings", "title": "Multiply Strings", "difficulty": "Medium"}, {"slug": "add-binary", "title": "Add Binary", "difficulty": "Easy"}, {"slug": "plus-one-linked-list", "title": "Plus One Linked List", "difficulty": "Medium"}, {"slug": "add-to-array-form-of-integer", "title": "Add to Array-Form of Integer", "difficulty": "Easy"}, {"slug": "minimum-operations-to-reduce-an-integer-to-0", "title": "Minimum Operations to Reduce an Integer to 0", "difficulty": "Medium"}]},
    {"number": 283, "slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "Easy", "tags": ["Array", "Two Pointers"], "similar_problems": [{"slug": "remove-element", "title": "Remove Element", "difficulty": "Easy"}, {"slug": "apply-operations-to-an-array", "title": "Apply Operations to an Array", "difficulty": "Easy"}]},
    {"number": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "Easy", "tags": ["Array", "Hash Table"], "similar_problems": [{"slug": "3sum", "title": "3Sum", "difficulty": "Medium"}, {"slug": "4sum", "title": "4Sum", "difficulty": "Medium"}, {"slug": "two-sum-ii-input-array-is-sorted", "title": "Two Sum II - Input Array Is Sorted", "difficulty": "Medium"}, {"slug": "two-sum-iii-data-structure-design", "title": "Two Sum III - Data structure design", "difficulty": "Easy"}, {"slug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "difficulty": "Medium"}, {"slug": "two-sum-iv-input-is-a-bst", "title": "Two Sum IV - Input is a BST", "difficulty": "Easy"}, {"slug": "two-sum-less-than-k", "title": "Two Sum Less Than K", "difficulty": "Easy"}, {"slug": "max-number-of-k-sum-pairs", "title": "Max Number of K-Sum Pairs", "difficulty": "Medium"}, {"slug": "count-good-meals", "title": "Count Good Meals", "difficulty": "Medium"}, {"slug": "count-number-of-pairs-with-absolute-difference-k", "title": "Count Number of Pairs With Absolute Difference K", "difficulty": "Easy"}, {"slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target", "title": "Number of Pairs of Strings With Concatenation Equal to Target", "difficulty": "Medium"}, {"slug": "find-all-k-distant-indices-in-an-array", "title": "Find All K-Distant Indices in an Array", "difficulty": "Easy"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}, {"slug": "number-of-excellent-pairs", "title": "Number of Excellent Pairs", "difficulty": "Hard"}, {"slug": "number-of-arithmetic-triplets", "title": "Number of Arithmetic Triplets", "difficulty": "Easy"}, {"slug": "node-with-highest-edge-score", "title": "Node With Highest Edge Score", "difficulty": "Medium"}, {"slug": "check-distances-between-same-letters", "title": "Check Distances Between Same Letters", "difficulty": "Easy"}, {"slug": "find-subarrays-with-equal-sum", "title": "Find Subarrays With Equal Sum", "difficulty": "Easy"}, {"slug": "largest-positive-integer-that-exists-with-its-negative", "title": "Largest Positive Integer That Exists With Its Negative", "difficulty": "Easy"}, {"slug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "difficulty": "Easy"}, {"slug": "count-pairs-whose-sum-is-less-than-target", "title": "Count Pairs Whose Sum is Less than Target", "difficulty": "Easy"}]},
    {"number": 36, "slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Matrix"], "similar_problems": [{"slug": "sudoku-solver", "title": "Sudoku Solver", "difficulty": "Hard"}, {"slug": "check-if-every-row-and-column-contains-all-numbers", "title": "Check if Every Row and Column Contains All Numbers", "difficulty": "Easy"}]},
    {"number": 48, "slug": "rotate-image", "title": "Rotate Image", "difficulty": "Medium", "tags": ["Array", "Math", "Matrix"], "similar_problems": [{"slug": "determine-whether-matrix-can-be-obtained-by-rotation", "title": "Determine Whether Matrix Can Be Obtained By Rotation", "difficulty": "Easy"}]},
    {"number": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "reverse-vowels-of-a-string", "title": "Reverse Vowels of a String", "difficulty": "Easy"}, {"slug": "reverse-string-ii", "title": "Reverse String II", "difficulty": "Easy"}]},
    {"number": 7, "slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium", "tags": ["Math"], "similar_problems": [{"slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium"}, {"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}, {"slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy"}, {"slug": "count-number-of-distinct-integers-after-reverse-operations", "title": "Count Number of Distinct Integers After Reverse Operations", "difficulty": "Medium"}]},
    {"number": 387, "slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "Easy", "tags": ["Hash Table", "String", "Queue", "Counting"], "similar_problems": [{"slug": "sort-characters-by-frequency", "title": "Sort Characters By Frequency", "difficulty": "Medium"}, {"slug": "first-letter-to-appear-twice", "title": "First Letter to Appear Twice", "difficulty": "Easy"}]},
    {"number": 242, "slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "Easy", "tags": ["Hash Table", "String", "Sorting"], "similar_problems": [{"slug": "group-anagrams", "title": "Group Anagrams", "difficulty": "Medium"}, {"slug": "palindrome-permutation", "title": "Palindrome Permutation", "difficulty": "Easy"}, {"slug": "find-all-anagrams-in-a-string", "title": "Find All Anagrams in a String", "difficulty": "Medium"}, {"slug": "find-resultant-array-after-removing-anagrams", "title": "Find Resultant Array After Removing Anagrams", "difficulty": "Easy"}]},
    {"number": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy", "tags": ["Two Pointers", "String"], "similar_problems": [{"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "valid-palindrome-ii", "title": "Valid Palindrome II", "difficulty": "Easy"}, {"slug": "maximum-product-of-the-length-of-two-palindromic-subsequences", "title": "Maximum Product of the Length of Two Palindromic Subsequences", "difficulty": "Medium"}, {"slug": "find-first-palindromic-string-in-the-array", "title": "Find First Palindromic String in the Array", "difficulty": "Easy"}, {"slug": "valid-palindrome-iv", "title": "Valid Palindrome IV", "difficulty": "Medium"}, {"slug": "maximum-palindromes-after-operations", "title": "Maximum Palindromes After Operations", "difficulty": "Medium"}]},
    {"number": 8, "slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "Medium", "tags": ["String"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "valid-number", "title": "Valid Number", "difficulty": "Hard"}, {"slug": "check-if-numbers-are-ascending-in-a-sentence", "title": "Check if Numbers Are Ascending in a Sentence", "difficulty": "Easy"}]},
    {"number": 28, "slug": "find-the-index-of-the-first-occurrence-in-a-string", "title": "Find the Index of the First Occurrence in a String", "difficulty": "Easy", "tags": ["Two Pointers", "String", "String Matching"], "similar_problems": [{"slug": "shortest-palindrome", "title": "Shortest Palindrome", "difficulty": "Hard"}, {"slug": "repeated-substring-pattern", "title": "Repeated Substring Pattern", "difficulty": "Easy"}]},
    {"number": 14, "slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "Easy", "tags": ["Array", "String", "Trie"], "similar_problems": [{"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}, {"slug": "find-the-length-of-the-longest-common-prefix", "title": "Find the Length of the Longest Common Prefix", "difficulty": "Medium"}, {"slug": "longest-common-suffix-queries", "title": "Longest Common Suffix Queries", "difficulty": "Hard"}, {"slug": "longest-common-prefix-after-at-most-one-removal", "title": "Longest Common Prefix After at Most One Removal", "difficulty": "Medium"}]},
    {"number": 237, "slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium", "tags": ["Linked List"], "similar_problems": [{"slug": "remove-linked-list-elements", "title": "Remove Linked List Elements", "difficulty": "Easy"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}]},
    {"number": 19, "slug": "remove-nth-node-from-end-of-list", "title": "Remove Nth Node From End of List", "difficulty": "Medium", "tags": ["Linked List", "Two Pointers"], "similar_problems": [{"slug": "swapping-nodes-in-a-linked-list", "title": "Swapping Nodes in a Linked List", "difficulty": "Medium"}, {"slug": "delete-n-nodes-after-m-nodes-of-a-linked-list", "title": "Delete N Nodes After M Nodes of a Linked List", "difficulty": "Easy"}, {"slug": "delete-the-middle-node-of-a-linked-list", "title": "Delete the Middle Node of a Linked List", "difficulty": "Medium"}]},
    {"number": 206, "slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "reverse-linked-list-ii", "title": "Reverse Linked List II", "difficulty": "Medium"}, {"slug": "binary-tree-upside-down", "title": "Binary Tree Upside Down", "difficulty": "Medium"}, {"slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"}, {"slug": "reverse-nodes-in-even-length-groups", "title": "Reverse Nodes in Even Length Groups", "difficulty": "Medium"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "insert-greatest-common-divisors-in-linked-list", "title": "Insert Greatest Common Divisors in Linked List", "difficulty": "Medium"}]},
    {"number": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy", "tags": ["Linked List", "Recursion"], "similar_problems": [{"slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "Hard"}, {"slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy"}, {"slug": "sort-list", "title": "Sort List", "difficulty": "Medium"}, {"slug": "shortest-word-distance-ii", "title": "Shortest Word Distance II", "difficulty": "Medium"}, {"slug": "add-two-polynomials-represented-as-linked-lists", "title": "Add Two Polynomials Represented as Linked Lists", "difficulty": "Medium"}, {"slug": "longest-common-subsequence-between-sorted-arrays", "title": "Longest Common Subsequence Between Sorted Arrays", "difficulty": "Medium"}, {"slug": "merge-two-2d-arrays-by-summing-values", "title": "Merge Two 2D Arrays by Summing Values", "difficulty": "Easy"}]},
    {"number": 234, "slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy", "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"], "similar_problems": [{"slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "Easy"}, {"slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "Easy"}, {"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"}]},
    {"number": 141, "slug": "linked-list-cycle", "title": "Linked List Cycle", "difficulty": "Easy", "tags": ["Hash Table", "Linked List", "Two Pointers"], "similar_problems": [{"slug": "linked-list-cycle-ii", "title": "Linked List Cycle II", "difficulty": "Medium"}, {"slug": "happy-number", "title": "Happy Number", "difficulty": "Easy"}]},
    {"number": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "balanced-binary-tree", "title": "Balanced Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "maximum-depth-of-n-ary-tree", "title": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"slug": "time-needed-to-inform-all-employees", "title": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"slug": "amount-of-time-for-binary-tree-to-be-infected", "title": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"slug": "height-of-binary-tree-after-subtree-removal-queries", "title": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}]},
    {"number": 98, "slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "Medium", "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"}, {"slug": "find-mode-in-binary-search-tree", "title": "Find Mode in Binary Search Tree", "difficulty": "Easy"}]},
    {"number": 101, "slug": "symmetric-tree", "title": "Symmetric Tree", "difficulty": "Easy", "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similar_problems": []},
    {"number": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "Medium", "tags": ["Tree", "Breadth-First Search", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-zigzag-level-order-traversal", "title": "Binary Tree Zigzag Level Order Traversal", "difficulty": "Medium"}, {"slug": "binary-tree-level-order-traversal-ii", "title": "Binary Tree Level Order Traversal II", "difficulty": "Medium"}, {"slug": "minimum-depth-of-binary-tree", "title": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"slug": "binary-tree-vertical-order-traversal", "title": "Binary Tree Vertical Order Traversal", "difficulty": "Medium"}, {"slug": "average-of-levels-in-binary-tree", "title": "Average of Levels in Binary Tree", "difficulty": "Easy"}, {"slug": "n-ary-tree-level-order-traversal", "title": "N-ary Tree Level Order Traversal", "difficulty": "Medium"}, {"slug": "cousins-in-binary-tree", "title": "Cousins in Binary Tree", "difficulty": "Easy"}, {"slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level", "title": "Minimum Number of Operations to Sort a Binary Tree by Level", "difficulty": "Medium"}, {"slug": "divide-nodes-into-the-maximum-number-of-groups", "title": "Divide Nodes Into the Maximum Number of Groups", "difficulty": "Hard"}]},
    {"number": 108, "slug": "convert-sorted-array-to-binary-search-tree", "title": "Convert Sorted Array to Binary Search Tree", "difficulty": "Easy", "tags": ["Array", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"], "similar_problems": [{"slug": "convert-sorted-list-to-binary-search-tree", "title": "Convert Sorted List to Binary Search Tree", "difficulty": "Medium"}]},
    {"number": 88, "slug": "merge-sorted-array", "title": "Merge Sorted Array", "difficulty": "Easy", "tags": ["Array", "Two Pointers", "Sorting"], "similar_problems": [{"slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"slug": "squares-of-a-sorted-array", "title": "Squares of a Sorted Array", "difficulty": "Easy"}, {"slug": "interval-list-intersections", "title": "Interval List Intersections", "difficulty": "Medium"}, {"slug": "take-k-of-each-character-from-left-and-right", "title": "Take K of Each Character From Left and Right", "difficulty": "Medium"}]},
    {"number": 278, "slug": "first-bad-version", "title": "First Bad Version", "difficulty": "Easy", "tags": ["Binary Search", "Interactive"], "similar_problems": [{"slug": "find-first-and-last-position-of-element-in-sorted-array", "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium"}, {"slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "Easy"}, {"slug": "guess-number-higher-or-lower", "title": "Guess Number Higher or Lower", "difficulty": "Easy"}]},
    {"number": 70, "slug": "climbing-stairs", "title": "Climbing Stairs", "difficulty": "Easy", "tags": ["Math", "Dynamic Programming", "Memoization"], "similar_problems": [{"slug": "min-cost-climbing-stairs", "title": "Min Cost Climbing Stairs", "difficulty": "Easy"}, {"slug": "fibonacci-number", "title": "Fibonacci Number", "difficulty": "Easy"}, {"slug": "n-th-tribonacci-number", "title": "N-th Tribonacci Number", "difficulty": "Easy"}, {"slug": "minimum-rounds-to-complete-all-tasks", "title": "Minimum Rounds to Complete All Tasks", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps", "title": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"slug": "count-ways-to-build-good-strings", "title": "Count Ways To Build Good Strings", "difficulty": "Medium"}, {"slug": "frog-jump-ii", "title": "Frog Jump II", "difficulty": "Medium"}, {"slug": "find-number-of-ways-to-reach-the-k-th-stair", "title": "Find Number of Ways to Reach the K-th Stair", "difficulty": "Hard"}, {"slug": "the-number-of-ways-to-make-the-sum", "title": "The Number of Ways to Make the Sum", "difficulty": "Medium"}]},
    {"number": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-ii", "title": "Best Time to Buy and Sell Stock II", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-iii", "title": "Best Time to Buy and Sell Stock III", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-iv", "title": "Best Time to Buy and Sell Stock IV", "difficulty": "Hard"}, {"slug": "best-time-to-buy-and-sell-stock-with-cooldown", "title": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": "Medium"}, {"slug": "sum-of-beauty-in-the-array", "title": "Sum of Beauty in the Array", "difficulty": "Medium"}, {"slug": "maximum-difference-between-increasing-elements", "title": "Maximum Difference Between Increasing Elements", "difficulty": "Easy"}, {"slug": "maximum-profit-from-trading-stocks", "title": "Maximum Profit From Trading Stocks", "difficulty": "Medium"}, {"slug": "best-time-to-buy-and-sell-stock-v", "title": "Best Time to Buy and Sell Stock V", "difficulty": "Medium"}]},
    {"number": 53, "slug": "maximum-subarray", "title": "Maximum Subarray", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "similar_problems": [{"slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "Easy"}, {"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "degree-of-an-array", "title": "Degree of an Array", "difficulty": "Easy"}, {"slug": "longest-turbulent-subarray", "title": "Longest Turbulent Subarray", "difficulty": "Medium"}, {"slug": "maximum-score-of-spliced-array", "title": "Maximum Score Of Spliced Array", "difficulty": "Hard"}, {"slug": "maximum-absolute-sum-of-any-subarray", "title": "Maximum Absolute Sum of Any Subarray", "difficulty": "Medium"}, {"slug": "maximum-subarray-sum-after-one-operation", "title": "Maximum Subarray Sum After One Operation", "difficulty": "Medium"}, {"slug": "substring-with-largest-variance", "title": "Substring With Largest Variance", "difficulty": "Hard"}, {"slug": "count-subarrays-with-score-less-than-k", "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard"}, {"slug": "maximum-value-of-a-string-in-an-array", "title": "Maximum Value of a String in an Array", "difficulty": "Easy"}, {"slug": "find-the-substring-with-maximum-cost", "title": "Find the Substring With Maximum Cost", "difficulty": "Medium"}, {"slug": "k-items-with-the-maximum-sum", "title": "K Items With the Maximum Sum", "difficulty": "Easy"}, {"slug": "maximum-good-subarray-sum", "title": "Maximum Good Subarray Sum", "difficulty": "Medium"}, {"slug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element", "title": "Maximize Subarray Sum After Removing All Occurrences of One Element", "difficulty": "Hard"}]},
    {"number": 198, "slug": "house-robber", "title": "House Robber", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "maximum-product-subarray", "title": "Maximum Product Subarray", "difficulty": "Medium"}, {"slug": "house-robber-ii", "title": "House Robber II", "difficulty": "Medium"}, {"slug": "paint-house", "title": "Paint House", "difficulty": "Medium"}, {"slug": "paint-fence", "title": "Paint Fence", "difficulty": "Medium"}, {"slug": "house-robber-iii", "title": "House Robber III", "difficulty": "Medium"}, {"slug": "non-negative-integers-without-consecutive-ones", "title": "Non-negative Integers without Consecutive Ones", "difficulty": "Hard"}, {"slug": "coin-path", "title": "Coin Path", "difficulty": "Hard"}, {"slug": "delete-and-earn", "title": "Delete and Earn", "difficulty": "Medium"}, {"slug": "solving-questions-with-brainpower", "title": "Solving Questions With Brainpower", "difficulty": "Medium"}, {"slug": "count-number-of-ways-to-place-houses", "title": "Count Number of Ways to Place Houses", "difficulty": "Medium"}, {"slug": "house-robber-iv", "title": "House Robber IV", "difficulty": "Medium"}, {"slug": "mice-and-cheese", "title": "Mice and Cheese", "difficulty": "Medium"}, {"slug": "largest-element-in-an-array-after-merge-operations", "title": "Largest Element in an Array after Merge Operations", "difficulty": "Medium"}]},
    {"number": 384, "slug": "shuffle-an-array", "title": "Shuffle an Array", "difficulty": "Medium", "tags": ["Array", "Math", "Design", "Randomized"], "similar_problems": []},
    {"number": 155, "slug": "min-stack", "title": "Min Stack", "difficulty": "Medium", "tags": ["Stack", "Design"], "similar_problems": [{"slug": "sliding-window-maximum", "title": "Sliding Window Maximum", "difficulty": "Hard"}, {"slug": "max-stack", "title": "Max Stack", "difficulty": "Hard"}]},
    {"number": 412, "slug": "fizz-buzz", "title": "Fizz Buzz", "difficulty": "Easy", "tags": ["Math", "String", "Simulation"], "similar_problems": [{"slug": "fizz-buzz-multithreaded", "title": "Fizz Buzz Multithreaded", "difficulty": "Medium"}, {"slug": "categorize-box-according-to-criteria", "title": "Categorize Box According to Criteria", "difficulty": "Easy"}]},
    {"number": 204, "slug": "count-primes", "title": "Count Primes", "difficulty": "Medium", "tags": ["Array", "Math", "Enumeration", "Number Theory"], "similar_problems": [{"slug": "ugly-number", "title": "Ugly Number", "difficulty": "Easy"}, {"slug": "ugly-number-ii", "title": "Ugly Number II", "difficulty": "Medium"}, {"slug": "perfect-squares", "title": "Perfect Squares", "difficulty": "Medium"}, {"slug": "number-of-common-factors", "title": "Number of Common Factors", "difficulty": "Easy"}, {"slug": "prime-pairs-with-target-sum", "title": "Prime Pairs With Target Sum", "difficulty": "Medium"}, {"slug": "find-the-count-of-numbers-which-are-not-special", "title": "Find the Count of Numbers Which Are Not Special", "difficulty": "Medium"}]},
    {"number": 326, "slug": "power-of-three", "title": "Power of Three", "difficulty": "Easy", "tags": ["Math", "Recursion"], "similar_problems": [{"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "power-of-four", "title": "Power of Four", "difficulty": "Easy"}, {"slug": "check-if-number-is-a-sum-of-powers-of-three", "title": "Check if Number is a Sum of Powers of Three", "difficulty": "Medium"}]},
    {"number": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "Easy", "tags": ["Hash Table", "Math", "String"], "similar_problems": [{"slug": "integer-to-roman", "title": "Integer to Roman", "difficulty": "Medium"}]},
    {"number": 191, "slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy", "tags": ["Divide and Conquer", "Bit Manipulation"], "similar_problems": [{"slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy"}, {"slug": "power-of-two", "title": "Power of Two", "difficulty": "Easy"}, {"slug": "counting-bits", "title": "Counting Bits", "difficulty": "Easy"}, {"slug": "binary-watch", "title": "Binary Watch", "difficulty": "Easy"}, {"slug": "hamming-distance", "title": "Hamming Distance", "difficulty": "Easy"}, {"slug": "binary-number-with-alternating-bits", "title": "Binary Number with Alternating Bits", "difficulty": "Easy"}, {"slug": "prime-number-of-set-bits-in-binary-representation", "title": "Prime Number of Set Bits in Binary Representation", "difficulty": "Easy"}, {"slug": "convert-date-to-binary", "title": "Convert Date to Binary", "difficulty": "Easy"}]},
    {"number": 461, "slug": "hamming-distance", "title": "Hamming Distance", "difficulty": "Easy", "tags": ["Bit Manipulation"], "similar_problems": [{"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "total-hamming-distance", "title": "Total Hamming Distance", "difficulty": "Medium"}]},
    {"number": 190, "slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "Easy", "tags": ["Divide and Conquer", "Bit Manipulation"], "similar_problems": [{"slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "Medium"}, {"slug": "number-of-1-bits", "title": "Number of 1 Bits", "difficulty": "Easy"}, {"slug": "a-number-after-a-double-reversal", "title": "A Number After a Double Reversal", "difficulty": "Easy"}]},
    {"number": 118, "slug": "pascals-triangle", "title": "Pascal's Triangle", "difficulty": "Easy", "tags": ["Array", "Dynamic Programming"], "similar_problems": [{"slug": "pascals-triangle-ii", "title": "Pascal's Triangle II", "difficulty": "Easy"}, {"slug": "check-if-digits-are-equal-in-string-after-operations-ii", "title": "Check If Digits Are Equal in String After Operations II", "difficulty": "Hard"}]},
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy", "tags": ["String", "Stack"], "similar_problems": [{"slug": "generate-parentheses", "title": "Generate Parentheses", "difficulty": "Medium"}, {"slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"}, {"slug": "remove-invalid-parentheses", "title": "Remove Invalid Parentheses", "difficulty": "Hard"}, {"slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"}, {"slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}, {"slug": "move-pieces-to-obtain-a-string", "title": "Move Pieces to Obtain a String", "difficulty": "Medium"}]},
    {"number": 268, "slug": "missing-number", "title": "Missing Number", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "similar_problems": [{"slug": "first-missing-positive", "title": "First Missing Positive", "difficulty": "Hard"}, {"slug": "single-number", "title": "Single Number", "difficulty": "Easy"}, {"slug": "find-the-duplicate-number", "title": "Find the Duplicate Number", "difficulty": "Medium"}, {"slug": "couples-holding-hands", "title": "Couples Holding Hands", "difficulty": "Hard"}, {"slug": "find-unique-binary-string", "title": "Find Unique Binary String", "difficulty": "Medium"}, {"slug": "find-the-largest-almost-missing-integer", "title": "Find the Largest Almost Missing Integer", "difficulty": "Easy"}]}
]