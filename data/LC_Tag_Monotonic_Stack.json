[
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "container-with-most-water", "title": "Container With Most Water", "difficulty": "Medium"}, {"slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "Medium"}, {"slug": "trapping-rain-water-ii", "title": "Trapping Rain Water II", "difficulty": "Hard"}, {"slug": "pour-water", "title": "Pour Water", "difficulty": "Medium"}, {"slug": "maximum-value-of-an-ordered-triplet-ii", "title": "Maximum Value of an Ordered Triplet II", "difficulty": "Medium"}]},
    {"number": 84, "slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}, {"slug": "maximum-score-of-a-good-subarray", "title": "Maximum Score of a Good Subarray", "difficulty": "Hard"}]},
    {"number": 85, "slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard"}, {"slug": "maximal-square", "title": "Maximal Square", "difficulty": "Medium"}, {"slug": "find-sorted-submatrices-with-maximum-element-at-most-k", "title": "Find Sorted Submatrices With Maximum Element at Most K", "difficulty": "Hard"}]},
    {"number": 255, "slug": "verify-preorder-sequence-in-binary-search-tree", "title": "Verify Preorder Sequence in Binary Search Tree", "difficulty": "Medium", "tags": ["Array", "Stack", "Tree", "Binary Search Tree", "Recursion", "Monotonic Stack", "Binary Tree"], "similar_problems": [{"slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"}]},
    {"number": 316, "slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}]},
    {"number": 321, "slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "maximum-swap", "title": "Maximum Swap", "difficulty": "Medium"}]},
    {"number": 402, "slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard"}, {"slug": "monotone-increasing-digits", "title": "Monotone Increasing Digits", "difficulty": "Medium"}, {"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}, {"slug": "append-k-integers-with-minimal-sum", "title": "Append K Integers With Minimal Sum", "difficulty": "Medium"}, {"slug": "remove-digit-from-number-to-maximize-result", "title": "Remove Digit From Number to Maximize Result", "difficulty": "Easy"}, {"slug": "minimum-operations-to-make-a-special-number", "title": "Minimum Operations to Make a Special Number", "difficulty": "Medium"}]},
    {"number": 456, "slug": "132-pattern", "title": "132 Pattern", "difficulty": "Medium", "tags": ["Array", "Binary Search", "Stack", "Monotonic Stack", "Ordered Set"], "similar_problems": []},
    {"number": 496, "slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy", "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"}, {"slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium"}, {"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}, {"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}, {"slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"}, {"slug": "smallest-missing-integer-greater-than-sequential-prefix-sum", "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum", "difficulty": "Easy"}]},
    {"number": 503, "slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "next-greater-element-iii", "title": "Next Greater Element III", "difficulty": "Medium"}, {"slug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays", "title": "Maximum and Minimum Sums of at Most Size K Subarrays", "difficulty": "Hard"}]},
    {"number": 581, "slug": "shortest-unsorted-continuous-subarray", "title": "Shortest Unsorted Continuous Subarray", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "smallest-subarray-to-sort-in-every-sliding-window", "title": "Smallest Subarray to Sort in Every Sliding Window", "difficulty": "Medium"}]},
    {"number": 654, "slug": "maximum-binary-tree", "title": "Maximum Binary Tree", "difficulty": "Medium", "tags": ["Array", "Divide and Conquer", "Stack", "Tree", "Monotonic Stack", "Binary Tree"], "similar_problems": [{"slug": "maximum-binary-tree-ii", "title": "Maximum Binary Tree II", "difficulty": "Medium"}]},
    {"number": 739, "slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium"}]},
    {"number": 768, "slug": "max-chunks-to-make-sorted-ii", "title": "Max Chunks To Make Sorted II", "difficulty": "Hard", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "max-chunks-to-make-sorted", "title": "Max Chunks To Make Sorted", "difficulty": "Medium"}]},
    {"number": 769, "slug": "max-chunks-to-make-sorted", "title": "Max Chunks To Make Sorted", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "max-chunks-to-make-sorted-ii", "title": "Max Chunks To Make Sorted II", "difficulty": "Hard"}]},
    {"number": 853, "slug": "car-fleet", "title": "Car Fleet", "difficulty": "Medium", "tags": ["Array", "Stack", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "car-fleet-ii", "title": "Car Fleet II", "difficulty": "Hard"}, {"slug": "count-collisions-on-a-road", "title": "Count Collisions on a Road", "difficulty": "Medium"}]},
    {"number": 901, "slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium", "tags": ["Stack", "Design", "Monotonic Stack", "Data Stream"], "similar_problems": [{"slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"}]},
    {"number": 907, "slug": "sum-of-subarray-minimums", "title": "Sum of Subarray Minimums", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}]},
    {"number": 962, "slug": "maximum-width-ramp", "title": "Maximum Width Ramp", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 975, "slug": "odd-even-jump", "title": "Odd Even Jump", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Sorting", "Monotonic Stack", "Ordered Set"], "similar_problems": []},
    {"number": 1008, "slug": "construct-binary-search-tree-from-preorder-traversal", "title": "Construct Binary Search Tree from Preorder Traversal", "difficulty": "Medium", "tags": ["Array", "Stack", "Tree", "Binary Search Tree", "Monotonic Stack", "Binary Tree"], "similar_problems": []},
    {"number": 1019, "slug": "next-greater-node-in-linked-list", "title": "Next Greater Node In Linked List", "difficulty": "Medium", "tags": ["Array", "Linked List", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 1063, "slug": "number-of-valid-subarrays", "title": "Number of Valid Subarrays", "difficulty": "Hard", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-smooth-descent-periods-of-a-stock", "title": "Number of Smooth Descent Periods of a Stock", "difficulty": "Medium"}]},
    {"number": 1081, "slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"}]},
    {"number": 1124, "slug": "longest-well-performing-interval", "title": "Longest Well-Performing Interval", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack", "Prefix Sum"], "similar_problems": []},
    {"number": 1130, "slug": "minimum-cost-tree-from-leaf-values", "title": "Minimum Cost Tree From Leaf Values", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 1475, "slug": "final-prices-with-a-special-discount-in-a-shop", "title": "Final Prices With a Special Discount in a Shop", "difficulty": "Easy", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 1504, "slug": "count-submatrices-with-all-ones", "title": "Count Submatrices With All Ones", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "count-submatrices-with-equal-frequency-of-x-and-y", "title": "Count Submatrices With Equal Frequency of X and Y", "difficulty": "Medium"}]},
    {"number": 1526, "slug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array", "title": "Minimum Number of Increments on Subarrays to Form a Target Array", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 1574, "slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "count-the-number-of-incremovable-subarrays-ii", "title": "Count the Number of Incremovable Subarrays II", "difficulty": "Hard"}, {"slug": "count-the-number-of-incremovable-subarrays-i", "title": "Count the Number of Incremovable Subarrays I", "difficulty": "Easy"}]},
    {"number": 1673, "slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"}, {"slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium"}]},
    {"number": 1762, "slug": "buildings-with-an-ocean-view", "title": "Buildings With an Ocean View", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}, {"slug": "finding-the-number-of-visible-mountains", "title": "Finding the Number of Visible Mountains", "difficulty": "Medium"}]},
    {"number": 1776, "slug": "car-fleet-ii", "title": "Car Fleet II", "difficulty": "Hard", "tags": ["Array", "Math", "Stack", "Heap (Priority Queue)", "Monotonic Stack"], "similar_problems": [{"slug": "car-fleet", "title": "Car Fleet", "difficulty": "Medium"}, {"slug": "count-collisions-on-a-road", "title": "Count Collisions on a Road", "difficulty": "Medium"}]},
    {"number": 1793, "slug": "maximum-score-of-a-good-subarray", "title": "Maximum Score of a Good Subarray", "difficulty": "Hard", "tags": ["Array", "Two Pointers", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard"}]},
    {"number": 1856, "slug": "maximum-subarray-min-product", "title": "Maximum Subarray Min-Product", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack", "Prefix Sum"], "similar_problems": [{"slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard"}]},
    {"number": 1944, "slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "buildings-with-an-ocean-view", "title": "Buildings With an Ocean View", "difficulty": "Medium"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}, {"slug": "number-of-people-that-can-be-seen-in-a-grid", "title": "Number of People That Can Be Seen in a Grid", "difficulty": "Medium"}, {"slug": "find-building-where-alice-and-bob-can-meet", "title": "Find Building Where Alice and Bob Can Meet", "difficulty": "Hard"}]},
    {"number": 1950, "slug": "maximum-of-minimum-values-in-all-subarrays", "title": "Maximum of Minimum Values in All Subarrays", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 1996, "slug": "the-number-of-weak-characters-in-the-game", "title": "The Number of Weak Characters in the Game", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "russian-doll-envelopes", "title": "Russian Doll Envelopes", "difficulty": "Hard"}, {"slug": "maximum-height-by-stacking-cuboids", "title": "Maximum Height by Stacking Cuboids ", "difficulty": "Hard"}]},
    {"number": 2030, "slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard", "tags": ["String", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": [{"slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium"}, {"slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard"}, {"slug": "find-the-lexicographically-smallest-valid-sequence", "title": "Find the Lexicographically Smallest Valid Sequence", "difficulty": "Medium"}]},
    {"number": 2104, "slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "sum-of-subarray-minimums", "title": "Sum of Subarray Minimums", "difficulty": "Medium"}, {"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}, {"slug": "count-number-of-homogenous-substrings", "title": "Count Number of Homogenous Substrings", "difficulty": "Medium"}, {"slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"}]},
    {"number": 2281, "slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard", "tags": ["Array", "Stack", "Monotonic Stack", "Prefix Sum"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "sum-of-subarray-minimums", "title": "Sum of Subarray Minimums", "difficulty": "Medium"}, {"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}, {"slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"}]},
    {"number": 2282, "slug": "number-of-people-that-can-be-seen-in-a-grid", "title": "Number of People That Can Be Seen in a Grid", "difficulty": "Medium", "tags": ["Array", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}]},
    {"number": 2289, "slug": "steps-to-make-array-non-decreasing", "title": "Steps to Make Array Non-decreasing", "difficulty": "Medium", "tags": ["Array", "Linked List", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "remove-one-element-to-make-the-array-strictly-increasing", "title": "Remove One Element to Make the Array Strictly Increasing", "difficulty": "Easy"}]},
    {"number": 2297, "slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Graph", "Monotonic Stack", "Shortest Path"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}, {"slug": "jump-game-iii", "title": "Jump Game III", "difficulty": "Medium"}, {"slug": "jump-game-iv", "title": "Jump Game IV", "difficulty": "Hard"}, {"slug": "jump-game-v", "title": "Jump Game V", "difficulty": "Hard"}, {"slug": "jump-game-vi", "title": "Jump Game VI", "difficulty": "Medium"}, {"slug": "jump-game-vii", "title": "Jump Game VII", "difficulty": "Medium"}, {"slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"}]},
    {"number": 2334, "slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard", "tags": ["Array", "Stack", "Union Find", "Monotonic Stack"], "similar_problems": [{"slug": "maximum-subarray-min-product", "title": "Maximum Subarray Min-Product", "difficulty": "Medium"}, {"slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"}, {"slug": "k-divisible-elements-subarrays", "title": "K Divisible Elements Subarrays", "difficulty": "Medium"}]},
    {"number": 2345, "slug": "finding-the-number-of-visible-mountains", "title": "Finding the Number of Visible Mountains", "difficulty": "Medium", "tags": ["Array", "Stack", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "buildings-with-an-ocean-view", "title": "Buildings With an Ocean View", "difficulty": "Medium"}]},
    {"number": 2355, "slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "longest-increasing-subsequence", "title": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"slug": "maximum-ascending-subarray-sum", "title": "Maximum Ascending Subarray Sum", "difficulty": "Easy"}, {"slug": "beautiful-towers-ii", "title": "Beautiful Towers II", "difficulty": "Medium"}, {"slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium"}]},
    {"number": 2454, "slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Sorting", "Heap (Priority Queue)", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "replace-elements-with-greatest-element-on-right-side", "title": "Replace Elements with Greatest Element on Right Side", "difficulty": "Easy"}, {"slug": "apply-operations-to-maximize-score", "title": "Apply Operations to Maximize Score", "difficulty": "Hard"}]},
    {"number": 2487, "slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium", "tags": ["Linked List", "Stack", "Recursion", "Monotonic Stack"], "similar_problems": [{"slug": "reverse-linked-list", "title": "Reverse Linked List", "difficulty": "Easy"}, {"slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "Medium"}, {"slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"}, {"slug": "delete-nodes-from-linked-list-present-in-array", "title": "Delete Nodes From Linked List Present in Array", "difficulty": "Medium"}]},
    {"number": 2617, "slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Breadth-First Search", "Union Find", "Heap (Priority Queue)", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "jump-game-ii", "title": "Jump Game II", "difficulty": "Medium"}, {"slug": "jump-game", "title": "Jump Game", "difficulty": "Medium"}]},
    {"number": 2736, "slug": "maximum-sum-queries", "title": "Maximum Sum Queries", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Binary Indexed Tree", "Segment Tree", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "most-beautiful-item-for-each-query", "title": "Most Beautiful Item for Each Query", "difficulty": "Medium"}]},
    {"number": 2818, "slug": "apply-operations-to-maximize-score", "title": "Apply Operations to Maximize Score", "difficulty": "Hard", "tags": ["Array", "Math", "Stack", "Greedy", "Sorting", "Monotonic Stack", "Number Theory"], "similar_problems": [{"slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"}]},
    {"number": 2832, "slug": "maximal-range-that-each-element-is-maximum-in-it", "title": "Maximal Range That Each Element Is Maximum in It", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": []},
    {"number": 2863, "slug": "maximum-length-of-semi-decreasing-subarrays", "title": "Maximum Length of Semi-Decreasing Subarrays", "difficulty": "Medium", "tags": ["Array", "Stack", "Sorting", "Monotonic Stack"], "similar_problems": []},
    {"number": 2865, "slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "valid-mountain-array", "title": "Valid Mountain Array", "difficulty": "Easy"}, {"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}]},
    {"number": 2866, "slug": "beautiful-towers-ii", "title": "Beautiful Towers II", "difficulty": "Medium", "tags": ["Array", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "minimum-number-of-removals-to-make-mountain-array", "title": "Minimum Number of Removals to Make Mountain Array", "difficulty": "Hard"}, {"slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"}]},
    {"number": 2940, "slug": "find-building-where-alice-and-bob-can-meet", "title": "Find Building Where Alice and Bob Can Meet", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Binary Indexed Tree", "Segment Tree", "Heap (Priority Queue)", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"}, {"slug": "furthest-building-you-can-reach", "title": "Furthest Building You Can Reach", "difficulty": "Medium"}]},
    {"number": 2945, "slug": "find-maximum-non-decreasing-array-length", "title": "Find Maximum Non-decreasing Array Length", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Dynamic Programming", "Stack", "Queue", "Monotonic Stack", "Monotonic Queue"], "similar_problems": []},
    {"number": 3113, "slug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum", "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum", "difficulty": "Hard", "tags": ["Array", "Binary Search", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "number-of-subarrays-with-bounded-maximum", "title": "Number of Subarrays with Bounded Maximum", "difficulty": "Medium"}, {"slug": "count-subarrays-with-fixed-bounds", "title": "Count Subarrays With Fixed Bounds", "difficulty": "Hard"}, {"slug": "count-subarrays-where-max-element-appears-at-least-k-times", "title": "Count Subarrays Where Max Element Appears at Least K Times", "difficulty": "Medium"}]},
    {"number": 3205, "slug": "maximum-array-hopping-score-i", "title": "Maximum Array Hopping Score I", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3221, "slug": "maximum-array-hopping-score-ii", "title": "Maximum Array Hopping Score II", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3229, "slug": "minimum-operations-to-make-array-equal-to-target", "title": "Minimum Operations to Make Array Equal to Target", "difficulty": "Hard", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3359, "slug": "find-sorted-submatrices-with-maximum-element-at-most-k", "title": "Find Sorted Submatrices With Maximum Element at Most K", "difficulty": "Hard", "tags": ["Array", "Stack", "Matrix", "Monotonic Stack"], "similar_problems": [{"slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"}]},
    {"number": 3420, "slug": "count-non-decreasing-subarrays-after-k-operations", "title": "Count Non-Decreasing Subarrays After K Operations", "difficulty": "Hard", "tags": ["Array", "Stack", "Segment Tree", "Queue", "Sliding Window", "Monotonic Stack", "Monotonic Queue"], "similar_problems": [{"slug": "non-decreasing-array", "title": "Non-decreasing Array", "difficulty": "Medium"}]},
    {"number": 3430, "slug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays", "title": "Maximum and Minimum Sums of at Most Size K Subarrays", "difficulty": "Hard", "tags": ["Array", "Math", "Stack", "Monotonic Stack"], "similar_problems": [{"slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"}]},
    {"number": 3523, "slug": "make-array-non-decreasing", "title": "Make Array Non-decreasing", "difficulty": "Medium", "tags": ["Array", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3542, "slug": "minimum-operations-to-convert-all-elements-to-zero", "title": "Minimum Operations to Convert All Elements to Zero", "difficulty": "Medium", "tags": ["Array", "Hash Table", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3555, "slug": "smallest-subarray-to-sort-in-every-sliding-window", "title": "Smallest Subarray to Sort in Every Sliding Window", "difficulty": "Medium", "tags": ["Array", "Two Pointers", "Stack", "Greedy", "Sorting", "Monotonic Stack"], "similar_problems": [{"slug": "shortest-unsorted-continuous-subarray", "title": "Shortest Unsorted Continuous Subarray", "difficulty": "Medium"}]},
    {"number": 3638, "slug": "maximum-balanced-shipments", "title": "Maximum Balanced Shipments", "difficulty": "Medium", "tags": ["Array", "Dynamic Programming", "Stack", "Greedy", "Monotonic Stack"], "similar_problems": []},
    {"number": 3676, "slug": "count-bowl-subarrays", "title": "Count Bowl Subarrays", "difficulty": "Medium", "tags": [], "similar_problems": []}
]