[
    {"number": 20, "slug": "valid-parentheses", "title": "Valid Parentheses", "difficulty": "Easy"},
    {"number": 32, "slug": "longest-valid-parentheses", "title": "Longest Valid Parentheses", "difficulty": "Hard"},
    {"number": 42, "slug": "trapping-rain-water", "title": "Trapping Rain Water", "difficulty": "Hard"},
    {"number": 71, "slug": "simplify-path", "title": "Simplify Path", "difficulty": "Medium"},
    {"number": 84, "slug": "largest-rectangle-in-histogram", "title": "Largest Rectangle in Histogram", "difficulty": "Hard"},
    {"number": 85, "slug": "maximal-rectangle", "title": "Maximal Rectangle", "difficulty": "Hard"},
    {"number": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "Easy"},
    {"number": 114, "slug": "flatten-binary-tree-to-linked-list", "title": "Flatten Binary Tree to Linked List", "difficulty": "Medium"},
    {"number": 143, "slug": "reorder-list", "title": "Reorder List", "difficulty": "Medium"},
    {"number": 144, "slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "Easy"},
    {"number": 145, "slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "Easy"},
    {"number": 150, "slug": "evaluate-reverse-polish-notation", "title": "Evaluate Reverse Polish Notation", "difficulty": "Medium"},
    {"number": 155, "slug": "min-stack", "title": "Min Stack", "difficulty": "Medium"},
    {"number": 173, "slug": "binary-search-tree-iterator", "title": "Binary Search Tree Iterator", "difficulty": "Medium"},
    {"number": 224, "slug": "basic-calculator", "title": "Basic Calculator", "difficulty": "Hard"},
    {"number": 225, "slug": "implement-stack-using-queues", "title": "Implement Stack using Queues", "difficulty": "Easy"},
    {"number": 227, "slug": "basic-calculator-ii", "title": "Basic Calculator II", "difficulty": "Medium"},
    {"number": 232, "slug": "implement-queue-using-stacks", "title": "Implement Queue using Stacks", "difficulty": "Easy"},
    {"number": 234, "slug": "palindrome-linked-list", "title": "Palindrome Linked List", "difficulty": "Easy"},
    {"number": 255, "slug": "verify-preorder-sequence-in-binary-search-tree", "title": "Verify Preorder Sequence in Binary Search Tree", "difficulty": "Medium"},
    {"number": 272, "slug": "closest-binary-search-tree-value-ii", "title": "Closest Binary Search Tree Value II", "difficulty": "Hard"},
    {"number": 316, "slug": "remove-duplicate-letters", "title": "Remove Duplicate Letters", "difficulty": "Medium"},
    {"number": 321, "slug": "create-maximum-number", "title": "Create Maximum Number", "difficulty": "Hard"},
    {"number": 331, "slug": "verify-preorder-serialization-of-a-binary-tree", "title": "Verify Preorder Serialization of a Binary Tree", "difficulty": "Medium"},
    {"number": 341, "slug": "flatten-nested-list-iterator", "title": "Flatten Nested List Iterator", "difficulty": "Medium"},
    {"number": 364, "slug": "nested-list-weight-sum-ii", "title": "Nested List Weight Sum II", "difficulty": "Medium"},
    {"number": 385, "slug": "mini-parser", "title": "Mini Parser", "difficulty": "Medium"},
    {"number": 388, "slug": "longest-absolute-file-path", "title": "Longest Absolute File Path", "difficulty": "Medium"},
    {"number": 394, "slug": "decode-string", "title": "Decode String", "difficulty": "Medium"},
    {"number": 402, "slug": "remove-k-digits", "title": "Remove K Digits", "difficulty": "Medium"},
    {"number": 426, "slug": "convert-binary-search-tree-to-sorted-doubly-linked-list", "title": "Convert Binary Search Tree to Sorted Doubly Linked List", "difficulty": "Medium"},
    {"number": 439, "slug": "ternary-expression-parser", "title": "Ternary Expression Parser", "difficulty": "Medium"},
    {"number": 445, "slug": "add-two-numbers-ii", "title": "Add Two Numbers II", "difficulty": "Medium"},
    {"number": 456, "slug": "132-pattern", "title": "132 Pattern", "difficulty": "Medium"},
    {"number": 484, "slug": "find-permutation", "title": "Find Permutation", "difficulty": "Medium"},
    {"number": 488, "slug": "zuma-game", "title": "Zuma Game", "difficulty": "Hard"},
    {"number": 496, "slug": "next-greater-element-i", "title": "Next Greater Element I", "difficulty": "Easy"},
    {"number": 503, "slug": "next-greater-element-ii", "title": "Next Greater Element II", "difficulty": "Medium"},
    {"number": 536, "slug": "construct-binary-tree-from-string", "title": "Construct Binary Tree from String", "difficulty": "Medium"},
    {"number": 581, "slug": "shortest-unsorted-continuous-subarray", "title": "Shortest Unsorted Continuous Subarray", "difficulty": "Medium"},
    {"number": 589, "slug": "n-ary-tree-preorder-traversal", "title": "N-ary Tree Preorder Traversal", "difficulty": "Easy"},
    {"number": 590, "slug": "n-ary-tree-postorder-traversal", "title": "N-ary Tree Postorder Traversal", "difficulty": "Easy"},
    {"number": 591, "slug": "tag-validator", "title": "Tag Validator", "difficulty": "Hard"},
    {"number": 636, "slug": "exclusive-time-of-functions", "title": "Exclusive Time of Functions", "difficulty": "Medium"},
    {"number": 654, "slug": "maximum-binary-tree", "title": "Maximum Binary Tree", "difficulty": "Medium"},
    {"number": 678, "slug": "valid-parenthesis-string", "title": "Valid Parenthesis String", "difficulty": "Medium"},
    {"number": 682, "slug": "baseball-game", "title": "Baseball Game", "difficulty": "Easy"},
    {"number": 716, "slug": "max-stack", "title": "Max Stack", "difficulty": "Hard"},
    {"number": 726, "slug": "number-of-atoms", "title": "Number of Atoms", "difficulty": "Hard"},
    {"number": 735, "slug": "asteroid-collision", "title": "Asteroid Collision", "difficulty": "Medium"},
    {"number": 736, "slug": "parse-lisp-expression", "title": "Parse Lisp Expression", "difficulty": "Hard"},
    {"number": 739, "slug": "daily-temperatures", "title": "Daily Temperatures", "difficulty": "Medium"},
    {"number": 768, "slug": "max-chunks-to-make-sorted-ii", "title": "Max Chunks To Make Sorted II", "difficulty": "Hard"},
    {"number": 769, "slug": "max-chunks-to-make-sorted", "title": "Max Chunks To Make Sorted", "difficulty": "Medium"},
    {"number": 770, "slug": "basic-calculator-iv", "title": "Basic Calculator IV", "difficulty": "Hard"},
    {"number": 772, "slug": "basic-calculator-iii", "title": "Basic Calculator III", "difficulty": "Hard"},
    {"number": 844, "slug": "backspace-string-compare", "title": "Backspace String Compare", "difficulty": "Easy"},
    {"number": 853, "slug": "car-fleet", "title": "Car Fleet", "difficulty": "Medium"},
    {"number": 856, "slug": "score-of-parentheses", "title": "Score of Parentheses", "difficulty": "Medium"},
    {"number": 880, "slug": "decoded-string-at-index", "title": "Decoded String at Index", "difficulty": "Medium"},
    {"number": 895, "slug": "maximum-frequency-stack", "title": "Maximum Frequency Stack", "difficulty": "Hard"},
    {"number": 897, "slug": "increasing-order-search-tree", "title": "Increasing Order Search Tree", "difficulty": "Easy"},
    {"number": 901, "slug": "online-stock-span", "title": "Online Stock Span", "difficulty": "Medium"},
    {"number": 907, "slug": "sum-of-subarray-minimums", "title": "Sum of Subarray Minimums", "difficulty": "Medium"},
    {"number": 921, "slug": "minimum-add-to-make-parentheses-valid", "title": "Minimum Add to Make Parentheses Valid", "difficulty": "Medium"},
    {"number": 936, "slug": "stamping-the-sequence", "title": "Stamping The Sequence", "difficulty": "Hard"},
    {"number": 946, "slug": "validate-stack-sequences", "title": "Validate Stack Sequences", "difficulty": "Medium"},
    {"number": 962, "slug": "maximum-width-ramp", "title": "Maximum Width Ramp", "difficulty": "Medium"},
    {"number": 975, "slug": "odd-even-jump", "title": "Odd Even Jump", "difficulty": "Hard"},
    {"number": 1003, "slug": "check-if-word-is-valid-after-substitutions", "title": "Check If Word Is Valid After Substitutions", "difficulty": "Medium"},
    {"number": 1006, "slug": "clumsy-factorial", "title": "Clumsy Factorial", "difficulty": "Medium"},
    {"number": 1008, "slug": "construct-binary-search-tree-from-preorder-traversal", "title": "Construct Binary Search Tree from Preorder Traversal", "difficulty": "Medium"},
    {"number": 1019, "slug": "next-greater-node-in-linked-list", "title": "Next Greater Node In Linked List", "difficulty": "Medium"},
    {"number": 1021, "slug": "remove-outermost-parentheses", "title": "Remove Outermost Parentheses", "difficulty": "Easy"},
    {"number": 1047, "slug": "remove-all-adjacent-duplicates-in-string", "title": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"},
    {"number": 1063, "slug": "number-of-valid-subarrays", "title": "Number of Valid Subarrays", "difficulty": "Hard"},
    {"number": 1081, "slug": "smallest-subsequence-of-distinct-characters", "title": "Smallest Subsequence of Distinct Characters", "difficulty": "Medium"},
    {"number": 1096, "slug": "brace-expansion-ii", "title": "Brace Expansion II", "difficulty": "Hard"},
    {"number": 1106, "slug": "parsing-a-boolean-expression", "title": "Parsing A Boolean Expression", "difficulty": "Hard"},
    {"number": 1111, "slug": "maximum-nesting-depth-of-two-valid-parentheses-strings", "title": "Maximum Nesting Depth of Two Valid Parentheses Strings", "difficulty": "Medium"},
    {"number": 1124, "slug": "longest-well-performing-interval", "title": "Longest Well-Performing Interval", "difficulty": "Medium"},
    {"number": 1130, "slug": "minimum-cost-tree-from-leaf-values", "title": "Minimum Cost Tree From Leaf Values", "difficulty": "Medium"},
    {"number": 1172, "slug": "dinner-plate-stacks", "title": "Dinner Plate Stacks", "difficulty": "Hard"},
    {"number": 1190, "slug": "reverse-substrings-between-each-pair-of-parentheses", "title": "Reverse Substrings Between Each Pair of Parentheses", "difficulty": "Medium"},
    {"number": 1209, "slug": "remove-all-adjacent-duplicates-in-string-ii", "title": "Remove All Adjacent Duplicates in String II", "difficulty": "Medium"},
    {"number": 1214, "slug": "two-sum-bsts", "title": "Two Sum BSTs", "difficulty": "Medium"},
    {"number": 1249, "slug": "minimum-remove-to-make-valid-parentheses", "title": "Minimum Remove to Make Valid Parentheses", "difficulty": "Medium"},
    {"number": 1265, "slug": "print-immutable-linked-list-in-reverse", "title": "Print Immutable Linked List in Reverse", "difficulty": "Medium"},
    {"number": 1381, "slug": "design-a-stack-with-increment-operation", "title": "Design a Stack With Increment Operation", "difficulty": "Medium"},
    {"number": 1441, "slug": "build-an-array-with-stack-operations", "title": "Build an Array With Stack Operations", "difficulty": "Medium"},
    {"number": 1472, "slug": "design-browser-history", "title": "Design Browser History", "difficulty": "Medium"},
    {"number": 1475, "slug": "final-prices-with-a-special-discount-in-a-shop", "title": "Final Prices With a Special Discount in a Shop", "difficulty": "Easy"},
    {"number": 1504, "slug": "count-submatrices-with-all-ones", "title": "Count Submatrices With All Ones", "difficulty": "Medium"},
    {"number": 1526, "slug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array", "title": "Minimum Number of Increments on Subarrays to Form a Target Array", "difficulty": "Hard"},
    {"number": 1541, "slug": "minimum-insertions-to-balance-a-parentheses-string", "title": "Minimum Insertions to Balance a Parentheses String", "difficulty": "Medium"},
    {"number": 1544, "slug": "make-the-string-great", "title": "Make The String Great", "difficulty": "Easy"},
    {"number": 1574, "slug": "shortest-subarray-to-be-removed-to-make-array-sorted", "title": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": "Medium"},
    {"number": 1586, "slug": "binary-search-tree-iterator-ii", "title": "Binary Search Tree Iterator II", "difficulty": "Medium"},
    {"number": 1597, "slug": "build-binary-expression-tree-from-infix-expression", "title": "Build Binary Expression Tree From Infix Expression", "difficulty": "Hard"},
    {"number": 1598, "slug": "crawler-log-folder", "title": "Crawler Log Folder", "difficulty": "Easy"},
    {"number": 1614, "slug": "maximum-nesting-depth-of-the-parentheses", "title": "Maximum Nesting Depth of the Parentheses", "difficulty": "Easy"},
    {"number": 1628, "slug": "design-an-expression-tree-with-evaluate-function", "title": "Design an Expression Tree With Evaluate Function", "difficulty": "Medium"},
    {"number": 1653, "slug": "minimum-deletions-to-make-string-balanced", "title": "Minimum Deletions to Make String Balanced", "difficulty": "Medium"},
    {"number": 1673, "slug": "find-the-most-competitive-subsequence", "title": "Find the Most Competitive Subsequence", "difficulty": "Medium"},
    {"number": 1700, "slug": "number-of-students-unable-to-eat-lunch", "title": "Number of Students Unable to Eat Lunch", "difficulty": "Easy"},
    {"number": 1717, "slug": "maximum-score-from-removing-substrings", "title": "Maximum Score From Removing Substrings", "difficulty": "Medium"},
    {"number": 1756, "slug": "design-most-recently-used-queue", "title": "Design Most Recently Used Queue", "difficulty": "Medium"},
    {"number": 1762, "slug": "buildings-with-an-ocean-view", "title": "Buildings With an Ocean View", "difficulty": "Medium"},
    {"number": 1776, "slug": "car-fleet-ii", "title": "Car Fleet II", "difficulty": "Hard"},
    {"number": 1793, "slug": "maximum-score-of-a-good-subarray", "title": "Maximum Score of a Good Subarray", "difficulty": "Hard"},
    {"number": 1856, "slug": "maximum-subarray-min-product", "title": "Maximum Subarray Min-Product", "difficulty": "Medium"},
    {"number": 1896, "slug": "minimum-cost-to-change-the-final-value-of-expression", "title": "Minimum Cost to Change the Final Value of Expression", "difficulty": "Hard"},
    {"number": 1910, "slug": "remove-all-occurrences-of-a-substring", "title": "Remove All Occurrences of a Substring", "difficulty": "Medium"},
    {"number": 1944, "slug": "number-of-visible-people-in-a-queue", "title": "Number of Visible People in a Queue", "difficulty": "Hard"},
    {"number": 1950, "slug": "maximum-of-minimum-values-in-all-subarrays", "title": "Maximum of Minimum Values in All Subarrays", "difficulty": "Medium"},
    {"number": 1963, "slug": "minimum-number-of-swaps-to-make-the-string-balanced", "title": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"},
    {"number": 1996, "slug": "the-number-of-weak-characters-in-the-game", "title": "The Number of Weak Characters in the Game", "difficulty": "Medium"},
    {"number": 2000, "slug": "reverse-prefix-of-word", "title": "Reverse Prefix of Word", "difficulty": "Easy"},
    {"number": 2019, "slug": "the-score-of-students-solving-math-expression", "title": "The Score of Students Solving Math Expression", "difficulty": "Hard"},
    {"number": 2030, "slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter", "title": "Smallest K-Length Subsequence With Occurrences of a Letter", "difficulty": "Hard"},
    {"number": 2104, "slug": "sum-of-subarray-ranges", "title": "Sum of Subarray Ranges", "difficulty": "Medium"},
    {"number": 2116, "slug": "check-if-a-parentheses-string-can-be-valid", "title": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"},
    {"number": 2130, "slug": "maximum-twin-sum-of-a-linked-list", "title": "Maximum Twin Sum of a Linked List", "difficulty": "Medium"},
    {"number": 2197, "slug": "replace-non-coprime-numbers-in-array", "title": "Replace Non-Coprime Numbers in Array", "difficulty": "Hard"},
    {"number": 2211, "slug": "count-collisions-on-a-road", "title": "Count Collisions on a Road", "difficulty": "Medium"},
    {"number": 2216, "slug": "minimum-deletions-to-make-array-beautiful", "title": "Minimum Deletions to Make Array Beautiful", "difficulty": "Medium"},
    {"number": 2254, "slug": "design-video-sharing-platform", "title": "Design Video Sharing Platform", "difficulty": "Hard"},
    {"number": 2281, "slug": "sum-of-total-strength-of-wizards", "title": "Sum of Total Strength of Wizards", "difficulty": "Hard"},
    {"number": 2282, "slug": "number-of-people-that-can-be-seen-in-a-grid", "title": "Number of People That Can Be Seen in a Grid", "difficulty": "Medium"},
    {"number": 2289, "slug": "steps-to-make-array-non-decreasing", "title": "Steps to Make Array Non-decreasing", "difficulty": "Medium"},
    {"number": 2296, "slug": "design-a-text-editor", "title": "Design a Text Editor", "difficulty": "Hard"},
    {"number": 2297, "slug": "jump-game-viii", "title": "Jump Game VIII", "difficulty": "Medium"},
    {"number": 2334, "slug": "subarray-with-elements-greater-than-varying-threshold", "title": "Subarray With Elements Greater Than Varying Threshold", "difficulty": "Hard"},
    {"number": 2345, "slug": "finding-the-number-of-visible-mountains", "title": "Finding the Number of Visible Mountains", "difficulty": "Medium"},
    {"number": 2355, "slug": "maximum-number-of-books-you-can-take", "title": "Maximum Number of Books You Can Take", "difficulty": "Hard"},
    {"number": 2375, "slug": "construct-smallest-number-from-di-string", "title": "Construct Smallest Number From DI String", "difficulty": "Medium"},
    {"number": 2390, "slug": "removing-stars-from-a-string", "title": "Removing Stars From a String", "difficulty": "Medium"},
    {"number": 2434, "slug": "using-a-robot-to-print-the-lexicographically-smallest-string", "title": "Using a Robot to Print the Lexicographically Smallest String", "difficulty": "Medium"},
    {"number": 2454, "slug": "next-greater-element-iv", "title": "Next Greater Element IV", "difficulty": "Hard"},
    {"number": 2487, "slug": "remove-nodes-from-linked-list", "title": "Remove Nodes From Linked List", "difficulty": "Medium"},
    {"number": 2524, "slug": "maximum-frequency-score-of-a-subarray", "title": "Maximum Frequency Score of a Subarray", "difficulty": "Hard"},
    {"number": 2589, "slug": "minimum-time-to-complete-all-tasks", "title": "Minimum Time to Complete All Tasks", "difficulty": "Hard"},
    {"number": 2617, "slug": "minimum-number-of-visited-cells-in-a-grid", "title": "Minimum Number of Visited Cells in a Grid", "difficulty": "Hard"},
    {"number": 2645, "slug": "minimum-additions-to-make-valid-string", "title": "Minimum Additions to Make Valid String", "difficulty": "Medium"},
    {"number": 2696, "slug": "minimum-string-length-after-removing-substrings", "title": "Minimum String Length After Removing Substrings", "difficulty": "Easy"},
    {"number": 2736, "slug": "maximum-sum-queries", "title": "Maximum Sum Queries", "difficulty": "Hard"},
    {"number": 2751, "slug": "robot-collisions", "title": "Robot Collisions", "difficulty": "Hard"},
    {"number": 2764, "slug": "is-array-a-preorder-of-some-binary-tree", "title": "Is Array a Preorder of Some ‌Binary Tree", "difficulty": "Medium"},
    {"number": 2813, "slug": "maximum-elegance-of-a-k-length-subsequence", "title": "Maximum Elegance of a K-Length Subsequence", "difficulty": "Hard"},
    {"number": 2816, "slug": "double-a-number-represented-as-a-linked-list", "title": "Double a Number Represented as a Linked List", "difficulty": "Medium"},
    {"number": 2818, "slug": "apply-operations-to-maximize-score", "title": "Apply Operations to Maximize Score", "difficulty": "Hard"},
    {"number": 2832, "slug": "maximal-range-that-each-element-is-maximum-in-it", "title": "Maximal Range That Each Element Is Maximum in It", "difficulty": "Medium"},
    {"number": 2863, "slug": "maximum-length-of-semi-decreasing-subarrays", "title": "Maximum Length of Semi-Decreasing Subarrays", "difficulty": "Medium"},
    {"number": 2865, "slug": "beautiful-towers-i", "title": "Beautiful Towers I", "difficulty": "Medium"},
    {"number": 2866, "slug": "beautiful-towers-ii", "title": "Beautiful Towers II", "difficulty": "Medium"},
    {"number": 2940, "slug": "find-building-where-alice-and-bob-can-meet", "title": "Find Building Where Alice and Bob Can Meet", "difficulty": "Hard"},
    {"number": 2945, "slug": "find-maximum-non-decreasing-array-length", "title": "Find Maximum Non-decreasing Array Length", "difficulty": "Hard"},
    {"number": 3113, "slug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum", "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum", "difficulty": "Hard"},
    {"number": 3170, "slug": "lexicographically-minimum-string-after-removing-stars", "title": "Lexicographically Minimum String After Removing Stars", "difficulty": "Medium"},
    {"number": 3174, "slug": "clear-digits", "title": "Clear Digits", "difficulty": "Easy"},
    {"number": 3205, "slug": "maximum-array-hopping-score-i", "title": "Maximum Array Hopping Score I", "difficulty": "Medium"},
    {"number": 3221, "slug": "maximum-array-hopping-score-ii", "title": "Maximum Array Hopping Score II", "difficulty": "Medium"},
    {"number": 3229, "slug": "minimum-operations-to-make-array-equal-to-target", "title": "Minimum Operations to Make Array Equal to Target", "difficulty": "Hard"},
    {"number": 3359, "slug": "find-sorted-submatrices-with-maximum-element-at-most-k", "title": "Find Sorted Submatrices With Maximum Element at Most K", "difficulty": "Hard"},
    {"number": 3412, "slug": "find-mirror-score-of-a-string", "title": "Find Mirror Score of a String", "difficulty": "Medium"},
    {"number": 3420, "slug": "count-non-decreasing-subarrays-after-k-operations", "title": "Count Non-Decreasing Subarrays After K Operations", "difficulty": "Hard"},
    {"number": 3430, "slug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays", "title": "Maximum and Minimum Sums of at Most Size K Subarrays", "difficulty": "Hard"},
    {"number": 3523, "slug": "make-array-non-decreasing", "title": "Make Array Non-decreasing", "difficulty": "Medium"},
    {"number": 3542, "slug": "minimum-operations-to-convert-all-elements-to-zero", "title": "Minimum Operations to Convert All Elements to Zero", "difficulty": "Medium"},
    {"number": 3555, "slug": "smallest-subarray-to-sort-in-every-sliding-window", "title": "Smallest Subarray to Sort in Every Sliding Window", "difficulty": "Medium"},
    {"number": 3561, "slug": "resulting-string-after-adjacent-removals", "title": "Resulting String After Adjacent Removals", "difficulty": "Medium"},
    {"number": 3638, "slug": "maximum-balanced-shipments", "title": "Maximum Balanced Shipments", "difficulty": "Medium"}
]